{
  "openapi": "3.0.3",
  "info": {
    "title": "EspoCRM API",
    "description": "Auto-generated API specification from EspoCRM metadata for LLM integration",
    "version": "1.0.0",
    "contact": {
      "name": "EspoCRM API",
      "url": "https://docs.espocrm.com/development/api/"
    }
  },
  "servers": [
    {
      "url": "https://your-espocrm-instance.com/api/v1",
      "description": "EspoCRM API Server"
    }
  ],
  "paths": {
    "/Account": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get list of Account records",
        "description": "Retrieve a paginated list of Account records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Account records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Account"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Create new Account",
        "description": "Create a new Account record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Account created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Account/{id}": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get Account by ID",
        "description": "Retrieve a specific Account record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Account",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Account"
        ],
        "summary": "Update Account",
        "description": "Update an existing Account record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Account",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "Delete Account",
        "description": "Delete a Account record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Account",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/AddressCountry": {
      "get": {
        "tags": [
          "AddressCountry"
        ],
        "summary": "Get list of AddressCountry records",
        "description": "Retrieve a paginated list of AddressCountry records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of AddressCountry records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AddressCountry"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/AddressCountry/{id}": {
      "get": {
        "tags": [
          "AddressCountry"
        ],
        "summary": "Get AddressCountry by ID",
        "description": "Retrieve a specific AddressCountry record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the AddressCountry",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AddressCountry record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressCountry"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/AppSecret": {
      "get": {
        "tags": [
          "AppSecret"
        ],
        "summary": "Get list of AppSecret records",
        "description": "Retrieve a paginated list of AppSecret records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of AppSecret records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AppSecret"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "AppSecret"
        ],
        "summary": "Create new AppSecret",
        "description": "Create a new AppSecret record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppSecretInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "AppSecret created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppSecret"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/AppSecret/{id}": {
      "get": {
        "tags": [
          "AppSecret"
        ],
        "summary": "Get AppSecret by ID",
        "description": "Retrieve a specific AppSecret record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the AppSecret",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AppSecret record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppSecret"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "AppSecret"
        ],
        "summary": "Update AppSecret",
        "description": "Update an existing AppSecret record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the AppSecret",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppSecretInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "AppSecret updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppSecret"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "AppSecret"
        ],
        "summary": "Delete AppSecret",
        "description": "Delete a AppSecret record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the AppSecret",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AppSecret deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Attachment": {
      "get": {
        "tags": [
          "Attachment"
        ],
        "summary": "Get list of Attachment records",
        "description": "Retrieve a paginated list of Attachment records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Attachment records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Attachment"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Attachment"
        ],
        "summary": "Create new Attachment",
        "description": "Create a new Attachment record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Attachment created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Attachment/{id}": {
      "get": {
        "tags": [
          "Attachment"
        ],
        "summary": "Get Attachment by ID",
        "description": "Retrieve a specific Attachment record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Attachment",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Attachment record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Attachment"
        ],
        "summary": "Update Attachment",
        "description": "Update an existing Attachment record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Attachment",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Attachment updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Attachment"
        ],
        "summary": "Delete Attachment",
        "description": "Delete a Attachment record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Attachment",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Attachment deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/AuthenticationProvider": {
      "get": {
        "tags": [
          "AuthenticationProvider"
        ],
        "summary": "Get list of AuthenticationProvider records",
        "description": "Retrieve a paginated list of AuthenticationProvider records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of AuthenticationProvider records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AuthenticationProvider"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "AuthenticationProvider"
        ],
        "summary": "Create new AuthenticationProvider",
        "description": "Create a new AuthenticationProvider record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationProviderInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "AuthenticationProvider created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationProvider"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/AuthenticationProvider/{id}": {
      "get": {
        "tags": [
          "AuthenticationProvider"
        ],
        "summary": "Get AuthenticationProvider by ID",
        "description": "Retrieve a specific AuthenticationProvider record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the AuthenticationProvider",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AuthenticationProvider record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationProvider"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "AuthenticationProvider"
        ],
        "summary": "Update AuthenticationProvider",
        "description": "Update an existing AuthenticationProvider record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the AuthenticationProvider",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationProviderInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "AuthenticationProvider updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationProvider"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "AuthenticationProvider"
        ],
        "summary": "Delete AuthenticationProvider",
        "description": "Delete a AuthenticationProvider record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the AuthenticationProvider",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AuthenticationProvider deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Call": {
      "get": {
        "tags": [
          "Call"
        ],
        "summary": "Get list of Call records",
        "description": "Retrieve a paginated list of Call records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Call records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Call"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Call"
        ],
        "summary": "Create new Call",
        "description": "Create a new Call record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CallInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Call created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Call"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Call/{id}": {
      "get": {
        "tags": [
          "Call"
        ],
        "summary": "Get Call by ID",
        "description": "Retrieve a specific Call record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Call",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Call record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Call"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Call"
        ],
        "summary": "Update Call",
        "description": "Update an existing Call record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Call",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CallInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Call updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Call"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Call"
        ],
        "summary": "Delete Call",
        "description": "Delete a Call record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Call",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Call deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Campaign": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "summary": "Get list of Campaign records",
        "description": "Retrieve a paginated list of Campaign records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Campaign records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Campaign"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Campaign"
        ],
        "summary": "Create new Campaign",
        "description": "Create a new Campaign record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Campaign created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Campaign"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Campaign/{id}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "summary": "Get Campaign by ID",
        "description": "Retrieve a specific Campaign record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Campaign",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Campaign record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Campaign"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "summary": "Update Campaign",
        "description": "Update an existing Campaign record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Campaign",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Campaign updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Campaign"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Campaign"
        ],
        "summary": "Delete Campaign",
        "description": "Delete a Campaign record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Campaign",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Campaign deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/CampaignLogRecord": {
      "get": {
        "tags": [
          "CampaignLogRecord"
        ],
        "summary": "Get list of CampaignLogRecord records",
        "description": "Retrieve a paginated list of CampaignLogRecord records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of CampaignLogRecord records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CampaignLogRecord"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/CampaignLogRecord/{id}": {
      "get": {
        "tags": [
          "CampaignLogRecord"
        ],
        "summary": "Get CampaignLogRecord by ID",
        "description": "Retrieve a specific CampaignLogRecord record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the CampaignLogRecord",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CampaignLogRecord record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignLogRecord"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/CampaignTrackingUrl": {
      "get": {
        "tags": [
          "CampaignTrackingUrl"
        ],
        "summary": "Get list of CampaignTrackingUrl records",
        "description": "Retrieve a paginated list of CampaignTrackingUrl records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of CampaignTrackingUrl records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CampaignTrackingUrl"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "CampaignTrackingUrl"
        ],
        "summary": "Create new CampaignTrackingUrl",
        "description": "Create a new CampaignTrackingUrl record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignTrackingUrlInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "CampaignTrackingUrl created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignTrackingUrl"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/CampaignTrackingUrl/{id}": {
      "get": {
        "tags": [
          "CampaignTrackingUrl"
        ],
        "summary": "Get CampaignTrackingUrl by ID",
        "description": "Retrieve a specific CampaignTrackingUrl record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the CampaignTrackingUrl",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CampaignTrackingUrl record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignTrackingUrl"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "CampaignTrackingUrl"
        ],
        "summary": "Update CampaignTrackingUrl",
        "description": "Update an existing CampaignTrackingUrl record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the CampaignTrackingUrl",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignTrackingUrlInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "CampaignTrackingUrl updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignTrackingUrl"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "CampaignTrackingUrl"
        ],
        "summary": "Delete CampaignTrackingUrl",
        "description": "Delete a CampaignTrackingUrl record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the CampaignTrackingUrl",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CampaignTrackingUrl deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Case": {
      "get": {
        "tags": [
          "Case"
        ],
        "summary": "Get list of Case records",
        "description": "Retrieve a paginated list of Case records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Case records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Case"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Case"
        ],
        "summary": "Create new Case",
        "description": "Create a new Case record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CaseInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Case created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Case"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Case/{id}": {
      "get": {
        "tags": [
          "Case"
        ],
        "summary": "Get Case by ID",
        "description": "Retrieve a specific Case record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Case",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Case record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Case"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Case"
        ],
        "summary": "Update Case",
        "description": "Update an existing Case record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Case",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CaseInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Case updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Case"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Case"
        ],
        "summary": "Delete Case",
        "description": "Delete a Case record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Case",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Case deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Contact": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Get list of Contact records",
        "description": "Retrieve a paginated list of Contact records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Contact records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Contact"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Create new Contact",
        "description": "Create a new Contact record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Contact/{id}": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Get Contact by ID",
        "description": "Retrieve a specific Contact record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Contact",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contact record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Contact"
        ],
        "summary": "Update Contact",
        "description": "Update an existing Contact record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Contact",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Contact"
        ],
        "summary": "Delete Contact",
        "description": "Delete a Contact record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Contact",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contact deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Currency": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Get list of Currency records",
        "description": "Retrieve a paginated list of Currency records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Currency records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Currency"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Currency/{id}": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Get Currency by ID",
        "description": "Retrieve a specific Currency record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Currency",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Currency record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/DashboardTemplate": {
      "get": {
        "tags": [
          "DashboardTemplate"
        ],
        "summary": "Get list of DashboardTemplate records",
        "description": "Retrieve a paginated list of DashboardTemplate records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of DashboardTemplate records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DashboardTemplate"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "DashboardTemplate"
        ],
        "summary": "Create new DashboardTemplate",
        "description": "Create a new DashboardTemplate record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DashboardTemplateInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "DashboardTemplate created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardTemplate"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/DashboardTemplate/{id}": {
      "get": {
        "tags": [
          "DashboardTemplate"
        ],
        "summary": "Get DashboardTemplate by ID",
        "description": "Retrieve a specific DashboardTemplate record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the DashboardTemplate",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "DashboardTemplate record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardTemplate"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "DashboardTemplate"
        ],
        "summary": "Update DashboardTemplate",
        "description": "Update an existing DashboardTemplate record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the DashboardTemplate",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DashboardTemplateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "DashboardTemplate updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardTemplate"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "DashboardTemplate"
        ],
        "summary": "Delete DashboardTemplate",
        "description": "Delete a DashboardTemplate record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the DashboardTemplate",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "DashboardTemplate deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Document": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "Get list of Document records",
        "description": "Retrieve a paginated list of Document records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Document records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Document"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Document"
        ],
        "summary": "Create new Document",
        "description": "Create a new Document record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Document created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Document/{id}": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "Get Document by ID",
        "description": "Retrieve a specific Document record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Document",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Document"
        ],
        "summary": "Update Document",
        "description": "Update an existing Document record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Document",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Document updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Document"
        ],
        "summary": "Delete Document",
        "description": "Delete a Document record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Document",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/DocumentFolder": {
      "get": {
        "tags": [
          "DocumentFolder"
        ],
        "summary": "Get list of DocumentFolder records",
        "description": "Retrieve a paginated list of DocumentFolder records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of DocumentFolder records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DocumentFolder"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "DocumentFolder"
        ],
        "summary": "Create new DocumentFolder",
        "description": "Create a new DocumentFolder record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentFolderInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "DocumentFolder created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentFolder"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/DocumentFolder/{id}": {
      "get": {
        "tags": [
          "DocumentFolder"
        ],
        "summary": "Get DocumentFolder by ID",
        "description": "Retrieve a specific DocumentFolder record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the DocumentFolder",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "DocumentFolder record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentFolder"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "DocumentFolder"
        ],
        "summary": "Update DocumentFolder",
        "description": "Update an existing DocumentFolder record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the DocumentFolder",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentFolderInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "DocumentFolder updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentFolder"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "DocumentFolder"
        ],
        "summary": "Delete DocumentFolder",
        "description": "Delete a DocumentFolder record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the DocumentFolder",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "DocumentFolder deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Email": {
      "get": {
        "tags": [
          "Email"
        ],
        "summary": "Get list of Email records",
        "description": "Retrieve a paginated list of Email records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Email records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Email"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Create new Email",
        "description": "Create a new Email record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Email created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Email/{id}": {
      "get": {
        "tags": [
          "Email"
        ],
        "summary": "Get Email by ID",
        "description": "Retrieve a specific Email record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Email",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Email"
        ],
        "summary": "Update Email",
        "description": "Update an existing Email record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Email",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Email"
        ],
        "summary": "Delete Email",
        "description": "Delete a Email record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Email",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/EmailAccount": {
      "get": {
        "tags": [
          "EmailAccount"
        ],
        "summary": "Get list of EmailAccount records",
        "description": "Retrieve a paginated list of EmailAccount records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of EmailAccount records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EmailAccount"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "EmailAccount"
        ],
        "summary": "Create new EmailAccount",
        "description": "Create a new EmailAccount record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailAccountInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "EmailAccount created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailAccount"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/EmailAccount/{id}": {
      "get": {
        "tags": [
          "EmailAccount"
        ],
        "summary": "Get EmailAccount by ID",
        "description": "Retrieve a specific EmailAccount record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the EmailAccount",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "EmailAccount record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailAccount"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "EmailAccount"
        ],
        "summary": "Update EmailAccount",
        "description": "Update an existing EmailAccount record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the EmailAccount",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailAccountInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "EmailAccount updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailAccount"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "EmailAccount"
        ],
        "summary": "Delete EmailAccount",
        "description": "Delete a EmailAccount record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the EmailAccount",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "EmailAccount deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/EmailAddress": {
      "get": {
        "tags": [
          "EmailAddress"
        ],
        "summary": "Get list of EmailAddress records",
        "description": "Retrieve a paginated list of EmailAddress records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of EmailAddress records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EmailAddress"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/EmailAddress/{id}": {
      "get": {
        "tags": [
          "EmailAddress"
        ],
        "summary": "Get EmailAddress by ID",
        "description": "Retrieve a specific EmailAddress record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the EmailAddress",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "EmailAddress record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailAddress"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/EmailFilter": {
      "get": {
        "tags": [
          "EmailFilter"
        ],
        "summary": "Get list of EmailFilter records",
        "description": "Retrieve a paginated list of EmailFilter records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of EmailFilter records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EmailFilter"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "EmailFilter"
        ],
        "summary": "Create new EmailFilter",
        "description": "Create a new EmailFilter record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailFilterInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "EmailFilter created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailFilter"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/EmailFilter/{id}": {
      "get": {
        "tags": [
          "EmailFilter"
        ],
        "summary": "Get EmailFilter by ID",
        "description": "Retrieve a specific EmailFilter record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the EmailFilter",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "EmailFilter record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailFilter"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "EmailFilter"
        ],
        "summary": "Update EmailFilter",
        "description": "Update an existing EmailFilter record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the EmailFilter",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailFilterInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "EmailFilter updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailFilter"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "EmailFilter"
        ],
        "summary": "Delete EmailFilter",
        "description": "Delete a EmailFilter record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the EmailFilter",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "EmailFilter deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/EmailFolder": {
      "get": {
        "tags": [
          "EmailFolder"
        ],
        "summary": "Get list of EmailFolder records",
        "description": "Retrieve a paginated list of EmailFolder records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of EmailFolder records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EmailFolder"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "EmailFolder"
        ],
        "summary": "Create new EmailFolder",
        "description": "Create a new EmailFolder record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailFolderInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "EmailFolder created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailFolder"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/EmailFolder/{id}": {
      "get": {
        "tags": [
          "EmailFolder"
        ],
        "summary": "Get EmailFolder by ID",
        "description": "Retrieve a specific EmailFolder record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the EmailFolder",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "EmailFolder record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailFolder"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "EmailFolder"
        ],
        "summary": "Update EmailFolder",
        "description": "Update an existing EmailFolder record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the EmailFolder",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailFolderInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "EmailFolder updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailFolder"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "EmailFolder"
        ],
        "summary": "Delete EmailFolder",
        "description": "Delete a EmailFolder record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the EmailFolder",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "EmailFolder deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/EmailQueueItem": {
      "get": {
        "tags": [
          "EmailQueueItem"
        ],
        "summary": "Get list of EmailQueueItem records",
        "description": "Retrieve a paginated list of EmailQueueItem records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of EmailQueueItem records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EmailQueueItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/EmailQueueItem/{id}": {
      "get": {
        "tags": [
          "EmailQueueItem"
        ],
        "summary": "Get EmailQueueItem by ID",
        "description": "Retrieve a specific EmailQueueItem record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the EmailQueueItem",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "EmailQueueItem record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailQueueItem"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/EmailTemplate": {
      "get": {
        "tags": [
          "EmailTemplate"
        ],
        "summary": "Get list of EmailTemplate records",
        "description": "Retrieve a paginated list of EmailTemplate records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of EmailTemplate records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EmailTemplate"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "EmailTemplate"
        ],
        "summary": "Create new EmailTemplate",
        "description": "Create a new EmailTemplate record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailTemplateInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "EmailTemplate created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplate"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/EmailTemplate/{id}": {
      "get": {
        "tags": [
          "EmailTemplate"
        ],
        "summary": "Get EmailTemplate by ID",
        "description": "Retrieve a specific EmailTemplate record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the EmailTemplate",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "EmailTemplate record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplate"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "EmailTemplate"
        ],
        "summary": "Update EmailTemplate",
        "description": "Update an existing EmailTemplate record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the EmailTemplate",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailTemplateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "EmailTemplate updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplate"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "EmailTemplate"
        ],
        "summary": "Delete EmailTemplate",
        "description": "Delete a EmailTemplate record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the EmailTemplate",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "EmailTemplate deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/EmailTemplateCategory": {
      "get": {
        "tags": [
          "EmailTemplateCategory"
        ],
        "summary": "Get list of EmailTemplateCategory records",
        "description": "Retrieve a paginated list of EmailTemplateCategory records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of EmailTemplateCategory records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EmailTemplateCategory"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "EmailTemplateCategory"
        ],
        "summary": "Create new EmailTemplateCategory",
        "description": "Create a new EmailTemplateCategory record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailTemplateCategoryInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "EmailTemplateCategory created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplateCategory"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/EmailTemplateCategory/{id}": {
      "get": {
        "tags": [
          "EmailTemplateCategory"
        ],
        "summary": "Get EmailTemplateCategory by ID",
        "description": "Retrieve a specific EmailTemplateCategory record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the EmailTemplateCategory",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "EmailTemplateCategory record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplateCategory"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "EmailTemplateCategory"
        ],
        "summary": "Update EmailTemplateCategory",
        "description": "Update an existing EmailTemplateCategory record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the EmailTemplateCategory",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailTemplateCategoryInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "EmailTemplateCategory updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplateCategory"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "EmailTemplateCategory"
        ],
        "summary": "Delete EmailTemplateCategory",
        "description": "Delete a EmailTemplateCategory record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the EmailTemplateCategory",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "EmailTemplateCategory deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Export": {
      "get": {
        "tags": [
          "Export"
        ],
        "summary": "Get list of Export records",
        "description": "Retrieve a paginated list of Export records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Export records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Export"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Export"
        ],
        "summary": "Create new Export",
        "description": "Create a new Export record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Export created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Export"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Export/{id}": {
      "get": {
        "tags": [
          "Export"
        ],
        "summary": "Get Export by ID",
        "description": "Retrieve a specific Export record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Export",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Export record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Export"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Export"
        ],
        "summary": "Update Export",
        "description": "Update an existing Export record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Export",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Export updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Export"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Export"
        ],
        "summary": "Delete Export",
        "description": "Delete a Export record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Export",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Export deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/ExternalAccount": {
      "get": {
        "tags": [
          "ExternalAccount"
        ],
        "summary": "Get list of ExternalAccount records",
        "description": "Retrieve a paginated list of ExternalAccount records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of ExternalAccount records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ExternalAccount"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "ExternalAccount"
        ],
        "summary": "Create new ExternalAccount",
        "description": "Create a new ExternalAccount record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalAccountInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ExternalAccount created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalAccount"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/ExternalAccount/{id}": {
      "get": {
        "tags": [
          "ExternalAccount"
        ],
        "summary": "Get ExternalAccount by ID",
        "description": "Retrieve a specific ExternalAccount record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the ExternalAccount",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ExternalAccount record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalAccount"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "ExternalAccount"
        ],
        "summary": "Update ExternalAccount",
        "description": "Update an existing ExternalAccount record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the ExternalAccount",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalAccountInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ExternalAccount updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalAccount"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ExternalAccount"
        ],
        "summary": "Delete ExternalAccount",
        "description": "Delete a ExternalAccount record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the ExternalAccount",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ExternalAccount deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/GroupEmailFolder": {
      "get": {
        "tags": [
          "GroupEmailFolder"
        ],
        "summary": "Get list of GroupEmailFolder records",
        "description": "Retrieve a paginated list of GroupEmailFolder records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of GroupEmailFolder records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GroupEmailFolder"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "GroupEmailFolder"
        ],
        "summary": "Create new GroupEmailFolder",
        "description": "Create a new GroupEmailFolder record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupEmailFolderInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "GroupEmailFolder created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupEmailFolder"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/GroupEmailFolder/{id}": {
      "get": {
        "tags": [
          "GroupEmailFolder"
        ],
        "summary": "Get GroupEmailFolder by ID",
        "description": "Retrieve a specific GroupEmailFolder record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the GroupEmailFolder",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "GroupEmailFolder record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupEmailFolder"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "GroupEmailFolder"
        ],
        "summary": "Update GroupEmailFolder",
        "description": "Update an existing GroupEmailFolder record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the GroupEmailFolder",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupEmailFolderInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "GroupEmailFolder updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupEmailFolder"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "GroupEmailFolder"
        ],
        "summary": "Delete GroupEmailFolder",
        "description": "Delete a GroupEmailFolder record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the GroupEmailFolder",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "GroupEmailFolder deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/InboundEmail": {
      "get": {
        "tags": [
          "InboundEmail"
        ],
        "summary": "Get list of InboundEmail records",
        "description": "Retrieve a paginated list of InboundEmail records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of InboundEmail records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/InboundEmail"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "InboundEmail"
        ],
        "summary": "Create new InboundEmail",
        "description": "Create a new InboundEmail record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InboundEmailInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "InboundEmail created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboundEmail"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/InboundEmail/{id}": {
      "get": {
        "tags": [
          "InboundEmail"
        ],
        "summary": "Get InboundEmail by ID",
        "description": "Retrieve a specific InboundEmail record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the InboundEmail",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "InboundEmail record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboundEmail"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "InboundEmail"
        ],
        "summary": "Update InboundEmail",
        "description": "Update an existing InboundEmail record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the InboundEmail",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InboundEmailInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "InboundEmail updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboundEmail"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "InboundEmail"
        ],
        "summary": "Delete InboundEmail",
        "description": "Delete a InboundEmail record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the InboundEmail",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "InboundEmail deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Integration": {
      "get": {
        "tags": [
          "Integration"
        ],
        "summary": "Get list of Integration records",
        "description": "Retrieve a paginated list of Integration records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Integration records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Integration"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Integration"
        ],
        "summary": "Create new Integration",
        "description": "Create a new Integration record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Integration created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Integration/{id}": {
      "get": {
        "tags": [
          "Integration"
        ],
        "summary": "Get Integration by ID",
        "description": "Retrieve a specific Integration record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Integration",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Integration record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Integration"
        ],
        "summary": "Update Integration",
        "description": "Update an existing Integration record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Integration",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Integration updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Integration"
        ],
        "summary": "Delete Integration",
        "description": "Delete a Integration record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Integration",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Integration deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/KnowledgeBaseArticle": {
      "get": {
        "tags": [
          "KnowledgeBaseArticle"
        ],
        "summary": "Get list of KnowledgeBaseArticle records",
        "description": "Retrieve a paginated list of KnowledgeBaseArticle records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of KnowledgeBaseArticle records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/KnowledgeBaseArticle"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "KnowledgeBaseArticle"
        ],
        "summary": "Create new KnowledgeBaseArticle",
        "description": "Create a new KnowledgeBaseArticle record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KnowledgeBaseArticleInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "KnowledgeBaseArticle created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KnowledgeBaseArticle"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/KnowledgeBaseArticle/{id}": {
      "get": {
        "tags": [
          "KnowledgeBaseArticle"
        ],
        "summary": "Get KnowledgeBaseArticle by ID",
        "description": "Retrieve a specific KnowledgeBaseArticle record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the KnowledgeBaseArticle",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "KnowledgeBaseArticle record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KnowledgeBaseArticle"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "KnowledgeBaseArticle"
        ],
        "summary": "Update KnowledgeBaseArticle",
        "description": "Update an existing KnowledgeBaseArticle record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the KnowledgeBaseArticle",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KnowledgeBaseArticleInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "KnowledgeBaseArticle updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KnowledgeBaseArticle"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "KnowledgeBaseArticle"
        ],
        "summary": "Delete KnowledgeBaseArticle",
        "description": "Delete a KnowledgeBaseArticle record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the KnowledgeBaseArticle",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "KnowledgeBaseArticle deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/KnowledgeBaseCategory": {
      "get": {
        "tags": [
          "KnowledgeBaseCategory"
        ],
        "summary": "Get list of KnowledgeBaseCategory records",
        "description": "Retrieve a paginated list of KnowledgeBaseCategory records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of KnowledgeBaseCategory records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/KnowledgeBaseCategory"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "KnowledgeBaseCategory"
        ],
        "summary": "Create new KnowledgeBaseCategory",
        "description": "Create a new KnowledgeBaseCategory record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KnowledgeBaseCategoryInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "KnowledgeBaseCategory created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KnowledgeBaseCategory"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/KnowledgeBaseCategory/{id}": {
      "get": {
        "tags": [
          "KnowledgeBaseCategory"
        ],
        "summary": "Get KnowledgeBaseCategory by ID",
        "description": "Retrieve a specific KnowledgeBaseCategory record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the KnowledgeBaseCategory",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "KnowledgeBaseCategory record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KnowledgeBaseCategory"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "KnowledgeBaseCategory"
        ],
        "summary": "Update KnowledgeBaseCategory",
        "description": "Update an existing KnowledgeBaseCategory record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the KnowledgeBaseCategory",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KnowledgeBaseCategoryInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "KnowledgeBaseCategory updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KnowledgeBaseCategory"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "KnowledgeBaseCategory"
        ],
        "summary": "Delete KnowledgeBaseCategory",
        "description": "Delete a KnowledgeBaseCategory record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the KnowledgeBaseCategory",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "KnowledgeBaseCategory deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/LayoutSet": {
      "get": {
        "tags": [
          "LayoutSet"
        ],
        "summary": "Get list of LayoutSet records",
        "description": "Retrieve a paginated list of LayoutSet records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of LayoutSet records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LayoutSet"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "LayoutSet"
        ],
        "summary": "Create new LayoutSet",
        "description": "Create a new LayoutSet record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LayoutSetInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "LayoutSet created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutSet"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/LayoutSet/{id}": {
      "get": {
        "tags": [
          "LayoutSet"
        ],
        "summary": "Get LayoutSet by ID",
        "description": "Retrieve a specific LayoutSet record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the LayoutSet",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "LayoutSet record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutSet"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "LayoutSet"
        ],
        "summary": "Update LayoutSet",
        "description": "Update an existing LayoutSet record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the LayoutSet",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LayoutSetInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "LayoutSet updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutSet"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "LayoutSet"
        ],
        "summary": "Delete LayoutSet",
        "description": "Delete a LayoutSet record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the LayoutSet",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "LayoutSet deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Lead": {
      "get": {
        "tags": [
          "Lead"
        ],
        "summary": "Get list of Lead records",
        "description": "Retrieve a paginated list of Lead records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Lead records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Lead"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Lead"
        ],
        "summary": "Create new Lead",
        "description": "Create a new Lead record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeadInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Lead created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Lead/{id}": {
      "get": {
        "tags": [
          "Lead"
        ],
        "summary": "Get Lead by ID",
        "description": "Retrieve a specific Lead record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Lead",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lead record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Lead"
        ],
        "summary": "Update Lead",
        "description": "Update an existing Lead record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Lead",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeadInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Lead updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Lead"
        ],
        "summary": "Delete Lead",
        "description": "Delete a Lead record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Lead",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lead deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/LeadCapture": {
      "get": {
        "tags": [
          "LeadCapture"
        ],
        "summary": "Get list of LeadCapture records",
        "description": "Retrieve a paginated list of LeadCapture records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of LeadCapture records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LeadCapture"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "LeadCapture"
        ],
        "summary": "Create new LeadCapture",
        "description": "Create a new LeadCapture record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeadCaptureInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "LeadCapture created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeadCapture"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/LeadCapture/{id}": {
      "get": {
        "tags": [
          "LeadCapture"
        ],
        "summary": "Get LeadCapture by ID",
        "description": "Retrieve a specific LeadCapture record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the LeadCapture",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "LeadCapture record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeadCapture"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "LeadCapture"
        ],
        "summary": "Update LeadCapture",
        "description": "Update an existing LeadCapture record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the LeadCapture",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeadCaptureInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "LeadCapture updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeadCapture"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "LeadCapture"
        ],
        "summary": "Delete LeadCapture",
        "description": "Delete a LeadCapture record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the LeadCapture",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "LeadCapture deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/LeadCaptureLogRecord": {
      "get": {
        "tags": [
          "LeadCaptureLogRecord"
        ],
        "summary": "Get list of LeadCaptureLogRecord records",
        "description": "Retrieve a paginated list of LeadCaptureLogRecord records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of LeadCaptureLogRecord records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LeadCaptureLogRecord"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/LeadCaptureLogRecord/{id}": {
      "get": {
        "tags": [
          "LeadCaptureLogRecord"
        ],
        "summary": "Get LeadCaptureLogRecord by ID",
        "description": "Retrieve a specific LeadCaptureLogRecord record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the LeadCaptureLogRecord",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "LeadCaptureLogRecord record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeadCaptureLogRecord"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/MassEmail": {
      "get": {
        "tags": [
          "MassEmail"
        ],
        "summary": "Get list of MassEmail records",
        "description": "Retrieve a paginated list of MassEmail records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of MassEmail records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MassEmail"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "MassEmail"
        ],
        "summary": "Create new MassEmail",
        "description": "Create a new MassEmail record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MassEmailInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "MassEmail created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MassEmail"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/MassEmail/{id}": {
      "get": {
        "tags": [
          "MassEmail"
        ],
        "summary": "Get MassEmail by ID",
        "description": "Retrieve a specific MassEmail record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the MassEmail",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "MassEmail record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MassEmail"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "MassEmail"
        ],
        "summary": "Update MassEmail",
        "description": "Update an existing MassEmail record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the MassEmail",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MassEmailInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "MassEmail updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MassEmail"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "MassEmail"
        ],
        "summary": "Delete MassEmail",
        "description": "Delete a MassEmail record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the MassEmail",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "MassEmail deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Meeting": {
      "get": {
        "tags": [
          "Meeting"
        ],
        "summary": "Get list of Meeting records",
        "description": "Retrieve a paginated list of Meeting records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Meeting records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Meeting"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Meeting"
        ],
        "summary": "Create new Meeting",
        "description": "Create a new Meeting record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Meeting created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Meeting"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Meeting/{id}": {
      "get": {
        "tags": [
          "Meeting"
        ],
        "summary": "Get Meeting by ID",
        "description": "Retrieve a specific Meeting record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Meeting",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Meeting record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Meeting"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Meeting"
        ],
        "summary": "Update Meeting",
        "description": "Update an existing Meeting record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Meeting",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Meeting updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Meeting"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Meeting"
        ],
        "summary": "Delete Meeting",
        "description": "Delete a Meeting record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Meeting",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Meeting deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Note": {
      "get": {
        "tags": [
          "Note"
        ],
        "summary": "Get list of Note records",
        "description": "Retrieve a paginated list of Note records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Note records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Note"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Note"
        ],
        "summary": "Create new Note",
        "description": "Create a new Note record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NoteInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Note created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Note"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Note/{id}": {
      "get": {
        "tags": [
          "Note"
        ],
        "summary": "Get Note by ID",
        "description": "Retrieve a specific Note record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Note",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Note record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Note"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Note"
        ],
        "summary": "Update Note",
        "description": "Update an existing Note record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Note",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NoteInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Note updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Note"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Note"
        ],
        "summary": "Delete Note",
        "description": "Delete a Note record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Note",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Note deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Notification": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Get list of Notification records",
        "description": "Retrieve a paginated list of Notification records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Notification records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Notification"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Notification/{id}": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Get Notification by ID",
        "description": "Retrieve a specific Notification record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Notification",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notification record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/OAuthAccount": {
      "get": {
        "tags": [
          "OAuthAccount"
        ],
        "summary": "Get list of OAuthAccount records",
        "description": "Retrieve a paginated list of OAuthAccount records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of OAuthAccount records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OAuthAccount"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "OAuthAccount"
        ],
        "summary": "Create new OAuthAccount",
        "description": "Create a new OAuthAccount record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OAuthAccountInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OAuthAccount created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthAccount"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/OAuthAccount/{id}": {
      "get": {
        "tags": [
          "OAuthAccount"
        ],
        "summary": "Get OAuthAccount by ID",
        "description": "Retrieve a specific OAuthAccount record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the OAuthAccount",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OAuthAccount record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthAccount"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "OAuthAccount"
        ],
        "summary": "Update OAuthAccount",
        "description": "Update an existing OAuthAccount record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the OAuthAccount",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OAuthAccountInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OAuthAccount updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthAccount"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "OAuthAccount"
        ],
        "summary": "Delete OAuthAccount",
        "description": "Delete a OAuthAccount record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the OAuthAccount",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OAuthAccount deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/OAuthProvider": {
      "get": {
        "tags": [
          "OAuthProvider"
        ],
        "summary": "Get list of OAuthProvider records",
        "description": "Retrieve a paginated list of OAuthProvider records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of OAuthProvider records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OAuthProvider"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "OAuthProvider"
        ],
        "summary": "Create new OAuthProvider",
        "description": "Create a new OAuthProvider record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OAuthProviderInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OAuthProvider created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthProvider"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/OAuthProvider/{id}": {
      "get": {
        "tags": [
          "OAuthProvider"
        ],
        "summary": "Get OAuthProvider by ID",
        "description": "Retrieve a specific OAuthProvider record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the OAuthProvider",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OAuthProvider record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthProvider"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "OAuthProvider"
        ],
        "summary": "Update OAuthProvider",
        "description": "Update an existing OAuthProvider record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the OAuthProvider",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OAuthProviderInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OAuthProvider updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthProvider"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "OAuthProvider"
        ],
        "summary": "Delete OAuthProvider",
        "description": "Delete a OAuthProvider record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the OAuthProvider",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OAuthProvider deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Opportunity": {
      "get": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Get list of Opportunity records",
        "description": "Retrieve a paginated list of Opportunity records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Opportunity records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Opportunity"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Create new Opportunity",
        "description": "Create a new Opportunity record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpportunityInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Opportunity created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Opportunity"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Opportunity/{id}": {
      "get": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Get Opportunity by ID",
        "description": "Retrieve a specific Opportunity record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Opportunity",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Opportunity record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Opportunity"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Update Opportunity",
        "description": "Update an existing Opportunity record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Opportunity",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpportunityInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Opportunity updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Opportunity"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Delete Opportunity",
        "description": "Delete a Opportunity record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Opportunity",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Opportunity deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/PhoneNumber": {
      "get": {
        "tags": [
          "PhoneNumber"
        ],
        "summary": "Get list of PhoneNumber records",
        "description": "Retrieve a paginated list of PhoneNumber records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of PhoneNumber records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PhoneNumber"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/PhoneNumber/{id}": {
      "get": {
        "tags": [
          "PhoneNumber"
        ],
        "summary": "Get PhoneNumber by ID",
        "description": "Retrieve a specific PhoneNumber record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the PhoneNumber",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PhoneNumber record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneNumber"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Portal": {
      "get": {
        "tags": [
          "Portal"
        ],
        "summary": "Get list of Portal records",
        "description": "Retrieve a paginated list of Portal records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Portal records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Portal"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Portal"
        ],
        "summary": "Create new Portal",
        "description": "Create a new Portal record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PortalInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Portal created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Portal"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Portal/{id}": {
      "get": {
        "tags": [
          "Portal"
        ],
        "summary": "Get Portal by ID",
        "description": "Retrieve a specific Portal record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Portal",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Portal record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Portal"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Portal"
        ],
        "summary": "Update Portal",
        "description": "Update an existing Portal record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Portal",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PortalInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Portal updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Portal"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Portal"
        ],
        "summary": "Delete Portal",
        "description": "Delete a Portal record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Portal",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Portal deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/PortalRole": {
      "get": {
        "tags": [
          "PortalRole"
        ],
        "summary": "Get list of PortalRole records",
        "description": "Retrieve a paginated list of PortalRole records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of PortalRole records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PortalRole"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "PortalRole"
        ],
        "summary": "Create new PortalRole",
        "description": "Create a new PortalRole record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PortalRoleInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "PortalRole created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortalRole"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/PortalRole/{id}": {
      "get": {
        "tags": [
          "PortalRole"
        ],
        "summary": "Get PortalRole by ID",
        "description": "Retrieve a specific PortalRole record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the PortalRole",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PortalRole record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortalRole"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "PortalRole"
        ],
        "summary": "Update PortalRole",
        "description": "Update an existing PortalRole record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the PortalRole",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PortalRoleInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "PortalRole updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortalRole"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "PortalRole"
        ],
        "summary": "Delete PortalRole",
        "description": "Delete a PortalRole record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the PortalRole",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PortalRole deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Reminder": {
      "get": {
        "tags": [
          "Reminder"
        ],
        "summary": "Get list of Reminder records",
        "description": "Retrieve a paginated list of Reminder records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Reminder records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Reminder"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Reminder"
        ],
        "summary": "Create new Reminder",
        "description": "Create a new Reminder record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReminderInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Reminder created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reminder"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Reminder/{id}": {
      "get": {
        "tags": [
          "Reminder"
        ],
        "summary": "Get Reminder by ID",
        "description": "Retrieve a specific Reminder record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Reminder",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reminder record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reminder"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Reminder"
        ],
        "summary": "Update Reminder",
        "description": "Update an existing Reminder record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Reminder",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReminderInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reminder updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reminder"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Reminder"
        ],
        "summary": "Delete Reminder",
        "description": "Delete a Reminder record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Reminder",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reminder deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Role": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Get list of Role records",
        "description": "Retrieve a paginated list of Role records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Role records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Role"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "Create new Role",
        "description": "Create a new Role record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Role created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Role/{id}": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Get Role by ID",
        "description": "Retrieve a specific Role record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Role",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Role"
        ],
        "summary": "Update Role",
        "description": "Update an existing Role record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Role",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Role"
        ],
        "summary": "Delete Role",
        "description": "Delete a Role record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Role",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/ScheduledJob": {
      "get": {
        "tags": [
          "ScheduledJob"
        ],
        "summary": "Get list of ScheduledJob records",
        "description": "Retrieve a paginated list of ScheduledJob records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of ScheduledJob records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ScheduledJob"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "ScheduledJob"
        ],
        "summary": "Create new ScheduledJob",
        "description": "Create a new ScheduledJob record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledJobInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ScheduledJob created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledJob"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/ScheduledJob/{id}": {
      "get": {
        "tags": [
          "ScheduledJob"
        ],
        "summary": "Get ScheduledJob by ID",
        "description": "Retrieve a specific ScheduledJob record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the ScheduledJob",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ScheduledJob record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledJob"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "ScheduledJob"
        ],
        "summary": "Update ScheduledJob",
        "description": "Update an existing ScheduledJob record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the ScheduledJob",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledJobInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ScheduledJob updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledJob"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ScheduledJob"
        ],
        "summary": "Delete ScheduledJob",
        "description": "Delete a ScheduledJob record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the ScheduledJob",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ScheduledJob deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/ScheduledJobLogRecord": {
      "get": {
        "tags": [
          "ScheduledJobLogRecord"
        ],
        "summary": "Get list of ScheduledJobLogRecord records",
        "description": "Retrieve a paginated list of ScheduledJobLogRecord records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of ScheduledJobLogRecord records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ScheduledJobLogRecord"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/ScheduledJobLogRecord/{id}": {
      "get": {
        "tags": [
          "ScheduledJobLogRecord"
        ],
        "summary": "Get ScheduledJobLogRecord by ID",
        "description": "Retrieve a specific ScheduledJobLogRecord record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the ScheduledJobLogRecord",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ScheduledJobLogRecord record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledJobLogRecord"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Sms": {
      "get": {
        "tags": [
          "Sms"
        ],
        "summary": "Get list of Sms records",
        "description": "Retrieve a paginated list of Sms records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Sms records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Sms"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Sms"
        ],
        "summary": "Create new Sms",
        "description": "Create a new Sms record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SmsInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sms created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sms"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Sms/{id}": {
      "get": {
        "tags": [
          "Sms"
        ],
        "summary": "Get Sms by ID",
        "description": "Retrieve a specific Sms record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Sms",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sms record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sms"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Sms"
        ],
        "summary": "Update Sms",
        "description": "Update an existing Sms record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Sms",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SmsInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sms updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sms"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Sms"
        ],
        "summary": "Delete Sms",
        "description": "Delete a Sms record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Sms",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sms deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/TargetList": {
      "get": {
        "tags": [
          "TargetList"
        ],
        "summary": "Get list of TargetList records",
        "description": "Retrieve a paginated list of TargetList records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of TargetList records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TargetList"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "TargetList"
        ],
        "summary": "Create new TargetList",
        "description": "Create a new TargetList record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TargetListInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "TargetList created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetList"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/TargetList/{id}": {
      "get": {
        "tags": [
          "TargetList"
        ],
        "summary": "Get TargetList by ID",
        "description": "Retrieve a specific TargetList record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the TargetList",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TargetList record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetList"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "TargetList"
        ],
        "summary": "Update TargetList",
        "description": "Update an existing TargetList record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the TargetList",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TargetListInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "TargetList updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetList"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "TargetList"
        ],
        "summary": "Delete TargetList",
        "description": "Delete a TargetList record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the TargetList",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TargetList deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/TargetListCategory": {
      "get": {
        "tags": [
          "TargetListCategory"
        ],
        "summary": "Get list of TargetListCategory records",
        "description": "Retrieve a paginated list of TargetListCategory records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of TargetListCategory records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TargetListCategory"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "TargetListCategory"
        ],
        "summary": "Create new TargetListCategory",
        "description": "Create a new TargetListCategory record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TargetListCategoryInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "TargetListCategory created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetListCategory"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/TargetListCategory/{id}": {
      "get": {
        "tags": [
          "TargetListCategory"
        ],
        "summary": "Get TargetListCategory by ID",
        "description": "Retrieve a specific TargetListCategory record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the TargetListCategory",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TargetListCategory record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetListCategory"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "TargetListCategory"
        ],
        "summary": "Update TargetListCategory",
        "description": "Update an existing TargetListCategory record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the TargetListCategory",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TargetListCategoryInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "TargetListCategory updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetListCategory"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "TargetListCategory"
        ],
        "summary": "Delete TargetListCategory",
        "description": "Delete a TargetListCategory record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the TargetListCategory",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TargetListCategory deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Task": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Get list of Task records",
        "description": "Retrieve a paginated list of Task records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Task records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Task"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Create new Task",
        "description": "Create a new Task record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Task/{id}": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Get Task by ID",
        "description": "Retrieve a specific Task record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Task",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Task"
        ],
        "summary": "Update Task",
        "description": "Update an existing Task record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Task",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Task"
        ],
        "summary": "Delete Task",
        "description": "Delete a Task record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Task",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Team": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Get list of Team records",
        "description": "Retrieve a paginated list of Team records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Team records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Team"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Team"
        ],
        "summary": "Create new Team",
        "description": "Create a new Team record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Team created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Team/{id}": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Get Team by ID",
        "description": "Retrieve a specific Team record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Team",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Team record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Team"
        ],
        "summary": "Update Team",
        "description": "Update an existing Team record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Team",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Team updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Team"
        ],
        "summary": "Delete Team",
        "description": "Delete a Team record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Team",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Team deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Template": {
      "get": {
        "tags": [
          "Template"
        ],
        "summary": "Get list of Template records",
        "description": "Retrieve a paginated list of Template records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Template records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Template"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Template"
        ],
        "summary": "Create new Template",
        "description": "Create a new Template record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Template created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Template"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Template/{id}": {
      "get": {
        "tags": [
          "Template"
        ],
        "summary": "Get Template by ID",
        "description": "Retrieve a specific Template record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Template",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Template record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Template"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Template"
        ],
        "summary": "Update Template",
        "description": "Update an existing Template record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Template",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Template updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Template"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Template"
        ],
        "summary": "Delete Template",
        "description": "Delete a Template record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Template",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Template deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/User": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get list of User records",
        "description": "Retrieve a paginated list of User records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of User records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create new User",
        "description": "Create a new User record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/User/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get User by ID",
        "description": "Retrieve a specific User record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the User",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update User",
        "description": "Update an existing User record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the User",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete User",
        "description": "Delete a User record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the User",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Webhook": {
      "get": {
        "tags": [
          "Webhook"
        ],
        "summary": "Get list of Webhook records",
        "description": "Retrieve a paginated list of Webhook records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Webhook records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Webhook"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Webhook"
        ],
        "summary": "Create new Webhook",
        "description": "Create a new Webhook record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Webhook created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/Webhook/{id}": {
      "get": {
        "tags": [
          "Webhook"
        ],
        "summary": "Get Webhook by ID",
        "description": "Retrieve a specific Webhook record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Webhook",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Webhook"
        ],
        "summary": "Update Webhook",
        "description": "Update an existing Webhook record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Webhook",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Webhook"
        ],
        "summary": "Delete Webhook",
        "description": "Delete a Webhook record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Webhook",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/WorkingTimeCalendar": {
      "get": {
        "tags": [
          "WorkingTimeCalendar"
        ],
        "summary": "Get list of WorkingTimeCalendar records",
        "description": "Retrieve a paginated list of WorkingTimeCalendar records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of WorkingTimeCalendar records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WorkingTimeCalendar"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "WorkingTimeCalendar"
        ],
        "summary": "Create new WorkingTimeCalendar",
        "description": "Create a new WorkingTimeCalendar record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkingTimeCalendarInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "WorkingTimeCalendar created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkingTimeCalendar"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/WorkingTimeCalendar/{id}": {
      "get": {
        "tags": [
          "WorkingTimeCalendar"
        ],
        "summary": "Get WorkingTimeCalendar by ID",
        "description": "Retrieve a specific WorkingTimeCalendar record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the WorkingTimeCalendar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "WorkingTimeCalendar record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkingTimeCalendar"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "WorkingTimeCalendar"
        ],
        "summary": "Update WorkingTimeCalendar",
        "description": "Update an existing WorkingTimeCalendar record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the WorkingTimeCalendar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkingTimeCalendarInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "WorkingTimeCalendar updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkingTimeCalendar"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "WorkingTimeCalendar"
        ],
        "summary": "Delete WorkingTimeCalendar",
        "description": "Delete a WorkingTimeCalendar record",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the WorkingTimeCalendar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "WorkingTimeCalendar deleted successfully"
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/WorkingTimeRange": {
      "get": {
        "tags": [
          "WorkingTimeRange"
        ],
        "summary": "Get list of WorkingTimeRange records",
        "description": "Retrieve a paginated list of WorkingTimeRange records with optional filtering and sorting",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/maxSize"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/select"
          }
        ],
        "responses": {
          "200": {
            "description": "List of WorkingTimeRange records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WorkingTimeRange"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/WorkingTimeRange/{id}": {
      "get": {
        "tags": [
          "WorkingTimeRange"
        ],
        "summary": "Get WorkingTimeRange by ID",
        "description": "Retrieve a specific WorkingTimeRange record by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the WorkingTimeRange",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "WorkingTimeRange record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkingTimeRange"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BasicAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Account": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "maxLength": 249,
            "required": true
          },
          "website": {
            "type": "string",
            "format": "uri"
          },
          "emailAddress": {
            "type": "string",
            "format": "email"
          },
          "phoneNumber": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "",
              "Customer",
              "Investor",
              "Partner",
              "Reseller"
            ]
          },
          "industry": {
            "type": "string",
            "enum": [
              "",
              "Advertising",
              "Aerospace",
              "Agriculture",
              "Apparel & Accessories",
              "Architecture",
              "Automotive",
              "Banking",
              "Biotechnology",
              "Building Materials & Equipment",
              "Chemical",
              "Construction",
              "Consulting",
              "Computer",
              "Culture",
              "Creative",
              "Defense",
              "Education",
              "Electronics",
              "Electric Power",
              "Energy",
              "Entertainment & Leisure",
              "Finance",
              "Food & Beverage",
              "Grocery",
              "Healthcare",
              "Hospitality",
              "Insurance",
              "Legal",
              "Manufacturing",
              "Mass Media",
              "Marketing",
              "Mining",
              "Music",
              "Publishing",
              "Petroleum",
              "Real Estate",
              "Retail",
              "Service",
              "Sports",
              "Software",
              "Support",
              "Shipping",
              "Travel",
              "Technology",
              "Telecommunications",
              "Television",
              "Transportation",
              "Testing, Inspection & Certification",
              "Venture Capital",
              "Wholesale",
              "Water"
            ]
          },
          "sicCode": {
            "type": "string",
            "maxLength": 40
          },
          "contactRole": {
            "type": "string",
            "maxLength": 100,
            "readOnly": true
          },
          "contactIsInactive": {
            "type": "boolean",
            "readOnly": true,
            "default": false
          },
          "billingAddress": {
            "type": "object"
          },
          "billingAddressStreet": {
            "type": "string",
            "maxLength": 255
          },
          "billingAddressCity": {
            "type": "string",
            "maxLength": 100
          },
          "billingAddressState": {
            "type": "string",
            "maxLength": 100
          },
          "billingAddressCountry": {
            "type": "string",
            "maxLength": 100
          },
          "billingAddressPostalCode": {
            "type": "string",
            "maxLength": 40
          },
          "shippingAddress": {
            "type": "object"
          },
          "shippingAddressStreet": {
            "type": "string",
            "maxLength": 255
          },
          "shippingAddressCity": {
            "type": "string",
            "maxLength": 100
          },
          "shippingAddressState": {
            "type": "string",
            "maxLength": 100
          },
          "shippingAddressCountry": {
            "type": "string",
            "maxLength": 100
          },
          "shippingAddressPostalCode": {
            "type": "string",
            "maxLength": 40
          },
          "description": {
            "type": "string"
          },
          "campaign": {
            "type": "string",
            "description": "ID of related entity"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "assignedUser": {
            "type": "string",
            "description": "ID of related entity"
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "targetLists": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "targetList": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "originalLead": {
            "type": "string",
            "readOnly": true
          },
          "targetListIsOptedOut": {
            "type": "boolean",
            "readOnly": true
          },
          "emailAddressIsOptedOut": {
            "type": "boolean",
            "readOnly": true
          },
          "emailAddressIsInvalid": {
            "type": "boolean",
            "readOnly": true
          },
          "phoneNumberIsOptedOut": {
            "type": "boolean",
            "readOnly": true
          },
          "phoneNumberIsInvalid": {
            "type": "boolean",
            "readOnly": true
          },
          "billingAddressMap": {
            "type": "object",
            "readOnly": true
          },
          "shippingAddressMap": {
            "type": "object",
            "readOnly": true
          },
          "streamUpdatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Account entity",
        "required": [
          "name"
        ]
      },
      "AccountInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "maxLength": 249,
            "required": true
          },
          "website": {
            "type": "string",
            "format": "uri"
          },
          "emailAddress": {
            "type": "string",
            "format": "email"
          },
          "phoneNumber": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "",
              "Customer",
              "Investor",
              "Partner",
              "Reseller"
            ]
          },
          "industry": {
            "type": "string",
            "enum": [
              "",
              "Advertising",
              "Aerospace",
              "Agriculture",
              "Apparel & Accessories",
              "Architecture",
              "Automotive",
              "Banking",
              "Biotechnology",
              "Building Materials & Equipment",
              "Chemical",
              "Construction",
              "Consulting",
              "Computer",
              "Culture",
              "Creative",
              "Defense",
              "Education",
              "Electronics",
              "Electric Power",
              "Energy",
              "Entertainment & Leisure",
              "Finance",
              "Food & Beverage",
              "Grocery",
              "Healthcare",
              "Hospitality",
              "Insurance",
              "Legal",
              "Manufacturing",
              "Mass Media",
              "Marketing",
              "Mining",
              "Music",
              "Publishing",
              "Petroleum",
              "Real Estate",
              "Retail",
              "Service",
              "Sports",
              "Software",
              "Support",
              "Shipping",
              "Travel",
              "Technology",
              "Telecommunications",
              "Television",
              "Transportation",
              "Testing, Inspection & Certification",
              "Venture Capital",
              "Wholesale",
              "Water"
            ]
          },
          "sicCode": {
            "type": "string",
            "maxLength": 40
          },
          "billingAddress": {
            "type": "object"
          },
          "billingAddressStreet": {
            "type": "string",
            "maxLength": 255
          },
          "billingAddressCity": {
            "type": "string",
            "maxLength": 100
          },
          "billingAddressState": {
            "type": "string",
            "maxLength": 100
          },
          "billingAddressCountry": {
            "type": "string",
            "maxLength": 100
          },
          "billingAddressPostalCode": {
            "type": "string",
            "maxLength": 40
          },
          "shippingAddress": {
            "type": "object"
          },
          "shippingAddressStreet": {
            "type": "string",
            "maxLength": 255
          },
          "shippingAddressCity": {
            "type": "string",
            "maxLength": 100
          },
          "shippingAddressState": {
            "type": "string",
            "maxLength": 100
          },
          "shippingAddressCountry": {
            "type": "string",
            "maxLength": 100
          },
          "shippingAddressPostalCode": {
            "type": "string",
            "maxLength": 40
          },
          "description": {
            "type": "string"
          },
          "campaign": {
            "type": "string",
            "description": "ID of related entity"
          },
          "assignedUser": {
            "type": "string",
            "description": "ID of related entity"
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "targetLists": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Input data for creating/updating Account",
        "required": [
          "name"
        ]
      },
      "AddressCountry": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of user who created this record",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of user who last modified this record",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "maxLength": 100,
            "required": true
          },
          "code": {
            "type": "string",
            "description": true,
            "maxLength": 2,
            "required": true
          },
          "isPreferred": {
            "type": "boolean",
            "description": true
          },
          "preferredName": {
            "type": "string",
            "readOnly": true
          }
        },
        "description": "AddressCountry entity",
        "required": [
          "name",
          "code"
        ]
      },
      "AppSecret": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": true,
            "maxLength": 100,
            "required": true
          },
          "value": {
            "type": "string",
            "required": true
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "deleteId": {
            "type": "string",
            "maxLength": 17,
            "readOnly": true,
            "default": "0"
          }
        },
        "description": "AppSecret entity",
        "required": [
          "name",
          "value"
        ]
      },
      "AppSecretInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": true,
            "maxLength": 100,
            "required": true
          },
          "value": {
            "type": "string",
            "required": true
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Input data for creating/updating AppSecret",
        "required": [
          "name",
          "value"
        ]
      },
      "Attachment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of user who last modified this record",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "maxLength": 255,
            "required": true
          },
          "type": {
            "type": "string",
            "maxLength": 100
          },
          "size": {
            "type": "integer"
          },
          "parent": {
            "type": "object"
          },
          "related": {
            "type": "object"
          },
          "source": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "field": {
            "type": "string"
          },
          "isBeingUploaded": {
            "type": "boolean",
            "default": false
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "contents": {
            "type": "string",
            "readOnly": true
          },
          "role": {
            "type": "string",
            "enum": [
              "Attachment",
              "Inline Attachment",
              "Import File",
              "Export File",
              "Mail Merge",
              "Mass Pdf"
            ],
            "maxLength": 36
          },
          "storage": {
            "type": "string",
            "maxLength": 24,
            "default": null
          },
          "storageFilePath": {
            "type": "string",
            "maxLength": 260,
            "default": null
          },
          "global": {
            "type": "boolean",
            "default": false
          }
        },
        "description": "Attachment entity",
        "required": [
          "name"
        ]
      },
      "AttachmentInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "maxLength": 255,
            "required": true
          },
          "type": {
            "type": "string",
            "maxLength": 100
          },
          "size": {
            "type": "integer"
          },
          "parent": {
            "type": "object"
          },
          "related": {
            "type": "object"
          },
          "field": {
            "type": "string"
          },
          "isBeingUploaded": {
            "type": "boolean",
            "default": false
          },
          "role": {
            "type": "string",
            "enum": [
              "Attachment",
              "Inline Attachment",
              "Import File",
              "Export File",
              "Mail Merge",
              "Mass Pdf"
            ],
            "maxLength": 36
          },
          "storage": {
            "type": "string",
            "maxLength": 24,
            "default": null
          },
          "storageFilePath": {
            "type": "string",
            "maxLength": 260,
            "default": null
          },
          "global": {
            "type": "boolean",
            "default": false
          }
        },
        "description": "Input data for creating/updating Attachment",
        "required": [
          "name"
        ]
      },
      "AuthenticationProvider": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of user who created this record",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of user who last modified this record",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "method": {
            "type": "string",
            "required": true
          },
          "oidcAuthorizationRedirectUri": {
            "type": "string",
            "readOnly": true
          },
          "oidcClientId": {
            "type": "string"
          },
          "oidcClientSecret": {
            "type": "string",
            "format": "password",
            "writeOnly": true
          },
          "oidcAuthorizationEndpoint": {
            "type": "string",
            "format": "uri"
          },
          "oidcUserInfoEndpoint": {
            "type": "string",
            "format": "uri"
          },
          "oidcTokenEndpoint": {
            "type": "string",
            "format": "uri"
          },
          "oidcJwksEndpoint": {
            "type": "string",
            "format": "uri"
          },
          "oidcJwtSignatureAlgorithmList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [
              "RS256"
            ]
          },
          "oidcScopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [
              "profile",
              "email",
              "phone"
            ]
          },
          "oidcCreateUser": {
            "type": "boolean",
            "description": true
          },
          "oidcUsernameClaim": {
            "type": "string",
            "description": true,
            "default": "sub"
          },
          "oidcSync": {
            "type": "boolean",
            "description": true
          },
          "oidcLogoutUrl": {
            "type": "string",
            "description": true
          },
          "oidcAuthorizationPrompt": {
            "type": "string",
            "enum": [
              "none",
              "consent",
              "login",
              "select_account"
            ],
            "maxLength": 14
          }
        },
        "description": "AuthenticationProvider entity",
        "required": [
          "name",
          "method"
        ]
      },
      "AuthenticationProviderInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "method": {
            "type": "string",
            "required": true
          },
          "oidcClientId": {
            "type": "string"
          },
          "oidcClientSecret": {
            "type": "string",
            "format": "password",
            "writeOnly": true
          },
          "oidcAuthorizationEndpoint": {
            "type": "string",
            "format": "uri"
          },
          "oidcUserInfoEndpoint": {
            "type": "string",
            "format": "uri"
          },
          "oidcTokenEndpoint": {
            "type": "string",
            "format": "uri"
          },
          "oidcJwksEndpoint": {
            "type": "string",
            "format": "uri"
          },
          "oidcJwtSignatureAlgorithmList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [
              "RS256"
            ]
          },
          "oidcScopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [
              "profile",
              "email",
              "phone"
            ]
          },
          "oidcCreateUser": {
            "type": "boolean",
            "description": true
          },
          "oidcUsernameClaim": {
            "type": "string",
            "description": true,
            "default": "sub"
          },
          "oidcSync": {
            "type": "boolean",
            "description": true
          },
          "oidcLogoutUrl": {
            "type": "string",
            "description": true
          },
          "oidcAuthorizationPrompt": {
            "type": "string",
            "enum": [
              "none",
              "consent",
              "login",
              "select_account"
            ],
            "maxLength": 14
          }
        },
        "description": "Input data for creating/updating AuthenticationProvider",
        "required": [
          "name",
          "method"
        ]
      },
      "Call": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "status": {
            "type": "string",
            "enum": [
              "Planned",
              "Held",
              "Not Held"
            ],
            "default": "Planned"
          },
          "dateStart": {
            "type": "string",
            "format": "date-time",
            "required": true,
            "default": "javascript: return this.dateTime.getNow(15);"
          },
          "dateEnd": {
            "type": "string",
            "format": "date-time",
            "required": true
          },
          "duration": {
            "type": "integer",
            "description": "Duration in seconds",
            "readOnly": true,
            "default": 300
          },
          "reminders": {
            "type": "array",
            "readOnly": true
          },
          "direction": {
            "type": "string",
            "enum": [
              "Outbound",
              "Inbound"
            ],
            "default": "Outbound"
          },
          "description": {
            "type": "string"
          },
          "parent": {
            "type": "object"
          },
          "account": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "uid": {
            "type": "string",
            "maxLength": 255,
            "readOnly": true
          },
          "acceptanceStatus": {
            "type": "string",
            "enum": [
              "None",
              "Accepted",
              "Tentative",
              "Declined"
            ],
            "readOnly": true
          },
          "users": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "leads": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "phoneNumbersMap": {
            "type": "object",
            "readOnly": true
          },
          "assignedUser": {
            "type": "string",
            "description": "ID of related entity",
            "required": true
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Call entity",
        "required": [
          "name",
          "dateStart",
          "dateEnd",
          "assignedUser"
        ]
      },
      "CallInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "status": {
            "type": "string",
            "enum": [
              "Planned",
              "Held",
              "Not Held"
            ],
            "default": "Planned"
          },
          "dateStart": {
            "type": "string",
            "format": "date-time",
            "required": true,
            "default": "javascript: return this.dateTime.getNow(15);"
          },
          "dateEnd": {
            "type": "string",
            "format": "date-time",
            "required": true
          },
          "direction": {
            "type": "string",
            "enum": [
              "Outbound",
              "Inbound"
            ],
            "default": "Outbound"
          },
          "description": {
            "type": "string"
          },
          "parent": {
            "type": "object"
          },
          "users": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "leads": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "assignedUser": {
            "type": "string",
            "description": "ID of related entity",
            "required": true
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Input data for creating/updating Call",
        "required": [
          "name",
          "dateStart",
          "dateEnd",
          "assignedUser"
        ]
      },
      "Campaign": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "status": {
            "type": "string",
            "enum": [
              "Planning",
              "Active",
              "Inactive",
              "Complete"
            ],
            "default": "Planning"
          },
          "type": {
            "type": "string",
            "enum": [
              "Email",
              "Newsletter",
              "Informational Email",
              "Web",
              "Television",
              "Radio",
              "Mail"
            ],
            "maxLength": 64,
            "default": "Email"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "assignedUser": {
            "type": "string",
            "description": "ID of related entity"
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "targetLists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": true
          },
          "excludingTargetLists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": true
          },
          "sentCount": {
            "type": "integer",
            "readOnly": true
          },
          "openedCount": {
            "type": "integer",
            "readOnly": true
          },
          "clickedCount": {
            "type": "integer",
            "readOnly": true
          },
          "optedInCount": {
            "type": "integer",
            "readOnly": true
          },
          "optedOutCount": {
            "type": "integer",
            "readOnly": true
          },
          "bouncedCount": {
            "type": "integer",
            "readOnly": true
          },
          "hardBouncedCount": {
            "type": "integer",
            "readOnly": true
          },
          "softBouncedCount": {
            "type": "integer",
            "readOnly": true
          },
          "leadCreatedCount": {
            "type": "integer",
            "readOnly": true
          },
          "openedPercentage": {
            "type": "integer",
            "readOnly": true
          },
          "clickedPercentage": {
            "type": "integer",
            "readOnly": true
          },
          "optedOutPercentage": {
            "type": "integer",
            "readOnly": true
          },
          "bouncedPercentage": {
            "type": "integer",
            "readOnly": true
          },
          "revenue": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "budget": {
            "type": "number",
            "format": "float"
          },
          "contactsTemplate": {
            "type": "string",
            "description": "ID of related entity"
          },
          "leadsTemplate": {
            "type": "string",
            "description": "ID of related entity"
          },
          "accountsTemplate": {
            "type": "string",
            "description": "ID of related entity"
          },
          "usersTemplate": {
            "type": "string",
            "description": "ID of related entity"
          },
          "mailMergeOnlyWithAddress": {
            "type": "boolean",
            "default": true
          },
          "revenueCurrency": {
            "type": "string",
            "maxLength": 3,
            "readOnly": true
          },
          "revenueConverted": {
            "type": "string",
            "readOnly": true
          },
          "budgetCurrency": {
            "type": "string",
            "maxLength": 3
          },
          "budgetConverted": {
            "type": "string",
            "readOnly": true
          }
        },
        "description": "Campaign entity",
        "required": [
          "name"
        ]
      },
      "CampaignInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "status": {
            "type": "string",
            "enum": [
              "Planning",
              "Active",
              "Inactive",
              "Complete"
            ],
            "default": "Planning"
          },
          "type": {
            "type": "string",
            "enum": [
              "Email",
              "Newsletter",
              "Informational Email",
              "Web",
              "Television",
              "Radio",
              "Mail"
            ],
            "maxLength": 64,
            "default": "Email"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "description": {
            "type": "string"
          },
          "assignedUser": {
            "type": "string",
            "description": "ID of related entity"
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "targetLists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": true
          },
          "excludingTargetLists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": true
          },
          "budget": {
            "type": "number",
            "format": "float"
          },
          "contactsTemplate": {
            "type": "string",
            "description": "ID of related entity"
          },
          "leadsTemplate": {
            "type": "string",
            "description": "ID of related entity"
          },
          "accountsTemplate": {
            "type": "string",
            "description": "ID of related entity"
          },
          "usersTemplate": {
            "type": "string",
            "description": "ID of related entity"
          },
          "mailMergeOnlyWithAddress": {
            "type": "boolean",
            "default": true
          },
          "budgetCurrency": {
            "type": "string",
            "maxLength": 3
          }
        },
        "description": "Input data for creating/updating Campaign",
        "required": [
          "name"
        ]
      },
      "CampaignLogRecord": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of the CampaignLogRecord"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of user who last modified this record",
            "readOnly": true
          },
          "action": {
            "type": "string",
            "enum": [
              "Sent",
              "Opened",
              "Opted Out",
              "Bounced",
              "Clicked",
              "Opted In",
              "Lead Created"
            ],
            "maxLength": 50,
            "required": true
          },
          "actionDate": {
            "type": "string",
            "format": "date-time",
            "required": true
          },
          "data": {
            "type": "object"
          },
          "stringData": {
            "type": "string",
            "maxLength": 100
          },
          "stringAdditionalData": {
            "type": "string",
            "maxLength": 100
          },
          "application": {
            "type": "string",
            "maxLength": 36,
            "required": true,
            "default": "Espo"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "campaign": {
            "type": "string",
            "description": "ID of related entity"
          },
          "parent": {
            "type": "object"
          },
          "object": {
            "type": "object"
          },
          "queueItem": {
            "type": "string",
            "description": "ID of related entity"
          },
          "isTest": {
            "type": "boolean",
            "default": false
          }
        },
        "description": "CampaignLogRecord entity",
        "required": [
          "action",
          "actionDate",
          "application"
        ]
      },
      "CampaignTrackingUrl": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": true
          },
          "urlToUse": {
            "type": "string",
            "readOnly": true
          },
          "campaign": {
            "type": "string",
            "description": "ID of related entity"
          },
          "action": {
            "type": "string",
            "enum": [
              "Redirect",
              "Show Message"
            ],
            "maxLength": 12,
            "default": "Redirect"
          },
          "message": {
            "type": "string",
            "description": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          }
        },
        "description": "CampaignTrackingUrl entity",
        "required": [
          "name"
        ]
      },
      "CampaignTrackingUrlInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": true
          },
          "campaign": {
            "type": "string",
            "description": "ID of related entity"
          },
          "action": {
            "type": "string",
            "enum": [
              "Redirect",
              "Show Message"
            ],
            "maxLength": 12,
            "default": "Redirect"
          },
          "message": {
            "type": "string",
            "description": true
          }
        },
        "description": "Input data for creating/updating CampaignTrackingUrl",
        "required": [
          "name"
        ]
      },
      "Case": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "number": {
            "type": "integer",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "enum": [
              "New",
              "Assigned",
              "Pending",
              "Closed",
              "Rejected",
              "Duplicate"
            ],
            "default": "New"
          },
          "priority": {
            "type": "string",
            "enum": [
              "Low",
              "Normal",
              "High",
              "Urgent"
            ],
            "default": "Normal"
          },
          "type": {
            "type": "string",
            "enum": [
              "",
              "Question",
              "Incident",
              "Problem"
            ]
          },
          "description": {
            "type": "string"
          },
          "account": {
            "type": "string",
            "description": "ID of related entity"
          },
          "lead": {
            "type": "string",
            "description": "ID of related entity"
          },
          "contact": {
            "type": "string",
            "description": "ID of related entity"
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "inboundEmail": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "originalEmail": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "isInternal": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "assignedUser": {
            "type": "string",
            "description": "ID of related entity"
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "streamUpdatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Case entity",
        "required": [
          "name"
        ]
      },
      "CaseInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "status": {
            "type": "string",
            "enum": [
              "New",
              "Assigned",
              "Pending",
              "Closed",
              "Rejected",
              "Duplicate"
            ],
            "default": "New"
          },
          "priority": {
            "type": "string",
            "enum": [
              "Low",
              "Normal",
              "High",
              "Urgent"
            ],
            "default": "Normal"
          },
          "type": {
            "type": "string",
            "enum": [
              "",
              "Question",
              "Incident",
              "Problem"
            ]
          },
          "description": {
            "type": "string"
          },
          "account": {
            "type": "string",
            "description": "ID of related entity"
          },
          "lead": {
            "type": "string",
            "description": "ID of related entity"
          },
          "contact": {
            "type": "string",
            "description": "ID of related entity"
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isInternal": {
            "type": "boolean"
          },
          "assignedUser": {
            "type": "string",
            "description": "ID of related entity"
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Input data for creating/updating Case",
        "required": [
          "name"
        ]
      },
      "Contact": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "object",
            "description": "Name/title of the record"
          },
          "salutationName": {
            "type": "string",
            "enum": [
              "",
              "Mr.",
              "Ms.",
              "Mrs.",
              "Dr."
            ]
          },
          "firstName": {
            "type": "string",
            "maxLength": 100
          },
          "lastName": {
            "type": "string",
            "maxLength": 100,
            "required": true
          },
          "accountAnyId": {
            "type": "string",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "maxLength": 100,
            "readOnly": true
          },
          "description": {
            "type": "string"
          },
          "emailAddress": {
            "type": "string",
            "format": "email"
          },
          "phoneNumber": {
            "type": "string"
          },
          "doNotCall": {
            "type": "boolean"
          },
          "address": {
            "type": "object"
          },
          "addressStreet": {
            "type": "string",
            "maxLength": 255
          },
          "addressCity": {
            "type": "string",
            "maxLength": 100
          },
          "addressState": {
            "type": "string",
            "maxLength": 100
          },
          "addressCountry": {
            "type": "string",
            "maxLength": 100
          },
          "addressPostalCode": {
            "type": "string",
            "maxLength": 40
          },
          "account": {
            "type": "string",
            "description": "ID of related entity"
          },
          "accounts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "accountRole": {
            "type": "string",
            "readOnly": true
          },
          "accountIsInactive": {
            "type": "boolean",
            "readOnly": true
          },
          "accountType": {
            "type": "string",
            "readOnly": true,
            "description": "Foreign field value"
          },
          "opportunityRole": {
            "type": "string",
            "enum": [
              "",
              "Decision Maker",
              "Evaluator",
              "Influencer"
            ],
            "readOnly": true
          },
          "acceptanceStatus": {
            "type": "string",
            "readOnly": true
          },
          "acceptanceStatusMeetings": {
            "type": "string",
            "readOnly": true
          },
          "acceptanceStatusCalls": {
            "type": "string",
            "readOnly": true
          },
          "campaign": {
            "type": "string",
            "description": "ID of related entity"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "assignedUser": {
            "type": "string",
            "description": "ID of related entity"
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "targetLists": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "targetList": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "portalUser": {
            "type": "string",
            "readOnly": true
          },
          "hasPortalUser": {
            "type": "boolean",
            "readOnly": true
          },
          "originalLead": {
            "type": "string",
            "readOnly": true
          },
          "targetListIsOptedOut": {
            "type": "boolean",
            "readOnly": true
          },
          "originalEmail": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "middleName": {
            "type": "string",
            "maxLength": 100
          },
          "emailAddressIsOptedOut": {
            "type": "boolean",
            "readOnly": true
          },
          "emailAddressIsInvalid": {
            "type": "boolean",
            "readOnly": true
          },
          "phoneNumberIsOptedOut": {
            "type": "boolean",
            "readOnly": true
          },
          "phoneNumberIsInvalid": {
            "type": "boolean",
            "readOnly": true
          },
          "addressMap": {
            "type": "object",
            "readOnly": true
          },
          "streamUpdatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Contact entity",
        "required": [
          "lastName"
        ]
      },
      "ContactInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "object",
            "description": "Name/title of the record"
          },
          "salutationName": {
            "type": "string",
            "enum": [
              "",
              "Mr.",
              "Ms.",
              "Mrs.",
              "Dr."
            ]
          },
          "firstName": {
            "type": "string",
            "maxLength": 100
          },
          "lastName": {
            "type": "string",
            "maxLength": 100,
            "required": true
          },
          "description": {
            "type": "string"
          },
          "emailAddress": {
            "type": "string",
            "format": "email"
          },
          "phoneNumber": {
            "type": "string"
          },
          "doNotCall": {
            "type": "boolean"
          },
          "address": {
            "type": "object"
          },
          "addressStreet": {
            "type": "string",
            "maxLength": 255
          },
          "addressCity": {
            "type": "string",
            "maxLength": 100
          },
          "addressState": {
            "type": "string",
            "maxLength": 100
          },
          "addressCountry": {
            "type": "string",
            "maxLength": 100
          },
          "addressPostalCode": {
            "type": "string",
            "maxLength": 40
          },
          "account": {
            "type": "string",
            "description": "ID of related entity"
          },
          "accounts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "campaign": {
            "type": "string",
            "description": "ID of related entity"
          },
          "assignedUser": {
            "type": "string",
            "description": "ID of related entity"
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "targetLists": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "middleName": {
            "type": "string",
            "maxLength": 100
          }
        },
        "description": "Input data for creating/updating Contact",
        "required": [
          "lastName"
        ]
      },
      "Currency": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the Currency"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of user who created this record",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of user who last modified this record",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "maxLength": 3
          },
          "rate": {
            "type": "number",
            "format": "float"
          }
        },
        "description": "Currency entity"
      },
      "DashboardTemplate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "maxLength": 100,
            "required": true
          },
          "layout": {
            "type": "array",
            "required": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          }
        },
        "description": "DashboardTemplate entity",
        "required": [
          "name",
          "layout"
        ]
      },
      "DashboardTemplateInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "maxLength": 100,
            "required": true
          },
          "layout": {
            "type": "array",
            "required": true
          }
        },
        "description": "Input data for creating/updating DashboardTemplate",
        "required": [
          "name",
          "layout"
        ]
      },
      "Document": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "file": {
            "type": "string",
            "description": "File ID",
            "required": true
          },
          "status": {
            "type": "string",
            "enum": [
              "Draft",
              "Active",
              "Canceled",
              "Expired"
            ],
            "default": "Active"
          },
          "type": {
            "type": "string",
            "enum": [
              "",
              "Contract",
              "NDA",
              "EULA",
              "License Agreement"
            ]
          },
          "publishDate": {
            "type": "string",
            "format": "date",
            "required": true,
            "default": "javascript: return this.dateTime.getToday();"
          },
          "expirationDate": {
            "type": "string",
            "format": "date"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "assignedUser": {
            "type": "string",
            "description": "ID of related entity"
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "accounts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "folder": {
            "type": "string",
            "description": "ID of related entity"
          }
        },
        "description": "Document entity",
        "required": [
          "name",
          "file",
          "publishDate"
        ]
      },
      "DocumentInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "file": {
            "type": "string",
            "description": "File ID",
            "required": true
          },
          "status": {
            "type": "string",
            "enum": [
              "Draft",
              "Active",
              "Canceled",
              "Expired"
            ],
            "default": "Active"
          },
          "type": {
            "type": "string",
            "enum": [
              "",
              "Contract",
              "NDA",
              "EULA",
              "License Agreement"
            ]
          },
          "publishDate": {
            "type": "string",
            "format": "date",
            "required": true,
            "default": "javascript: return this.dateTime.getToday();"
          },
          "expirationDate": {
            "type": "string",
            "format": "date"
          },
          "description": {
            "type": "string"
          },
          "assignedUser": {
            "type": "string",
            "description": "ID of related entity"
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "accounts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "folder": {
            "type": "string",
            "description": "ID of related entity"
          }
        },
        "description": "Input data for creating/updating Document",
        "required": [
          "name",
          "file",
          "publishDate"
        ]
      },
      "DocumentFolder": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parent": {
            "type": "string",
            "description": "ID of related entity"
          },
          "childList": {
            "type": "array",
            "readOnly": true
          }
        },
        "description": "DocumentFolder entity",
        "required": [
          "name"
        ]
      },
      "DocumentFolderInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "description": {
            "type": "string"
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parent": {
            "type": "string",
            "description": "ID of related entity"
          }
        },
        "description": "Input data for creating/updating DocumentFolder",
        "required": [
          "name"
        ]
      },
      "Email": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "subject": {
            "type": "string",
            "required": true,
            "readOnly": true
          },
          "fromName": {
            "type": "string",
            "readOnly": true
          },
          "fromAddress": {
            "type": "string",
            "readOnly": true
          },
          "fromString": {
            "type": "string"
          },
          "replyToString": {
            "type": "string"
          },
          "replyToName": {
            "type": "string",
            "readOnly": true
          },
          "replyToAddress": {
            "type": "string",
            "readOnly": true
          },
          "addressNameMap": {
            "type": "object",
            "readOnly": true
          },
          "from": {
            "type": "string",
            "required": true,
            "readOnly": true
          },
          "to": {
            "type": "string",
            "required": true,
            "readOnly": true
          },
          "cc": {
            "type": "string",
            "readOnly": true
          },
          "bcc": {
            "type": "string",
            "readOnly": true
          },
          "replyTo": {
            "type": "string",
            "readOnly": true
          },
          "personStringData": {
            "type": "string",
            "readOnly": true
          },
          "isRead": {
            "type": "boolean",
            "readOnly": true,
            "default": true
          },
          "isNotRead": {
            "type": "boolean",
            "readOnly": true
          },
          "isReplied": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotReplied": {
            "type": "boolean",
            "readOnly": true
          },
          "isImportant": {
            "type": "boolean",
            "readOnly": true,
            "default": false
          },
          "inTrash": {
            "type": "boolean",
            "readOnly": true,
            "default": false
          },
          "inArchive": {
            "type": "boolean",
            "readOnly": true,
            "default": false
          },
          "folderId": {
            "type": "string",
            "readOnly": true,
            "default": null
          },
          "isUsers": {
            "type": "boolean",
            "readOnly": true,
            "default": false
          },
          "isUsersSent": {
            "type": "boolean",
            "readOnly": true
          },
          "folder": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "folderString": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "nameHash": {
            "type": "object",
            "readOnly": true
          },
          "typeHash": {
            "type": "object",
            "readOnly": true
          },
          "idHash": {
            "type": "object",
            "readOnly": true
          },
          "messageId": {
            "type": "string",
            "maxLength": 255,
            "readOnly": true
          },
          "messageIdInternal": {
            "type": "string",
            "maxLength": 300,
            "readOnly": true
          },
          "emailAddress": {
            "type": "string",
            "readOnly": true
          },
          "fromEmailAddress": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "toEmailAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "ccEmailAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "bccEmailAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "replyToEmailAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "bodyPlain": {
            "type": "string",
            "readOnly": true
          },
          "body": {
            "type": "string",
            "description": "HTML content"
          },
          "isHtml": {
            "type": "boolean",
            "default": true
          },
          "status": {
            "type": "string",
            "enum": [
              "Draft",
              "Sending",
              "Sent",
              "Archived",
              "Failed"
            ],
            "default": "Archived"
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasAttachment": {
            "type": "boolean",
            "readOnly": true
          },
          "parent": {
            "type": "object"
          },
          "dateSent": {
            "type": "string",
            "format": "date-time"
          },
          "deliveryDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "sendAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "sentBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "assignedUser": {
            "type": "string",
            "description": "ID of related entity"
          },
          "replied": {
            "type": "string",
            "description": "ID of related entity"
          },
          "replies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "isSystem": {
            "type": "boolean",
            "readOnly": true,
            "default": false
          },
          "isJustSent": {
            "type": "boolean",
            "readOnly": true,
            "default": false
          },
          "isBeingImported": {
            "type": "boolean",
            "readOnly": true
          },
          "skipNotificationMap": {
            "type": "object",
            "readOnly": true
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "users": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "assignedUsers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "inboundEmails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "emailAccounts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "icsContents": {
            "type": "string",
            "readOnly": true
          },
          "icsEventData": {
            "type": "object",
            "readOnly": true
          },
          "icsEventUid": {
            "type": "string",
            "maxLength": 255,
            "readOnly": true
          },
          "icsEventDateStart": {
            "type": "string",
            "readOnly": true
          },
          "createEvent": {
            "type": "string",
            "readOnly": true
          },
          "createdEvent": {
            "type": "object",
            "readOnly": true
          },
          "groupFolder": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "groupStatusFolder": {
            "type": "string",
            "enum": [
              "",
              "Archive",
              "Trash"
            ],
            "maxLength": 7,
            "readOnly": true
          },
          "account": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "tasks": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          }
        },
        "description": "Email entity",
        "required": [
          "name",
          "subject",
          "from",
          "to"
        ]
      },
      "EmailInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "fromString": {
            "type": "string"
          },
          "replyToString": {
            "type": "string"
          },
          "body": {
            "type": "string",
            "description": "HTML content"
          },
          "isHtml": {
            "type": "boolean",
            "default": true
          },
          "status": {
            "type": "string",
            "enum": [
              "Draft",
              "Sending",
              "Sent",
              "Archived",
              "Failed"
            ],
            "default": "Archived"
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parent": {
            "type": "object"
          },
          "dateSent": {
            "type": "string",
            "format": "date-time"
          },
          "sendAt": {
            "type": "string",
            "format": "date-time"
          },
          "assignedUser": {
            "type": "string",
            "description": "ID of related entity"
          },
          "replied": {
            "type": "string",
            "description": "ID of related entity"
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Input data for creating/updating Email",
        "required": [
          "name"
        ]
      },
      "EmailAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "emailAddress": {
            "type": "string",
            "description": true,
            "maxLength": 100,
            "required": true
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive"
            ],
            "default": "Active"
          },
          "host": {
            "type": "string"
          },
          "port": {
            "type": "integer",
            "default": 993
          },
          "security": {
            "type": "string",
            "enum": [
              "",
              "SSL",
              "TLS"
            ],
            "default": "SSL"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password",
            "writeOnly": true
          },
          "monitoredFolders": {
            "type": "array",
            "default": [
              "INBOX"
            ]
          },
          "sentFolder": {
            "type": "string"
          },
          "storeSentEmails": {
            "type": "boolean",
            "description": true
          },
          "keepFetchedEmailsUnread": {
            "type": "boolean"
          },
          "fetchSince": {
            "type": "string",
            "format": "date"
          },
          "fetchData": {
            "type": "object",
            "readOnly": true
          },
          "emailFolder": {
            "type": "string",
            "description": "ID of related entity"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "assignedUser": {
            "type": "string",
            "description": "ID of related entity",
            "required": true
          },
          "connectedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "useImap": {
            "type": "boolean",
            "default": true
          },
          "useSmtp": {
            "type": "boolean",
            "description": true
          },
          "smtpHost": {
            "type": "string"
          },
          "smtpPort": {
            "type": "integer",
            "default": 587
          },
          "smtpAuth": {
            "type": "boolean",
            "default": true
          },
          "smtpSecurity": {
            "type": "string",
            "enum": [
              "",
              "SSL",
              "TLS"
            ],
            "default": "TLS"
          },
          "smtpUsername": {
            "type": "string"
          },
          "smtpPassword": {
            "type": "string",
            "format": "password",
            "writeOnly": true
          },
          "smtpAuthMechanism": {
            "type": "string",
            "enum": [
              "login",
              "crammd5",
              "plain"
            ],
            "default": "login"
          },
          "imapHandler": {
            "type": "string",
            "readOnly": true
          },
          "smtpHandler": {
            "type": "string",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          }
        },
        "description": "EmailAccount entity",
        "required": [
          "name",
          "emailAddress",
          "assignedUser"
        ]
      },
      "EmailAccountInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "emailAddress": {
            "type": "string",
            "description": true,
            "maxLength": 100,
            "required": true
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive"
            ],
            "default": "Active"
          },
          "host": {
            "type": "string"
          },
          "port": {
            "type": "integer",
            "default": 993
          },
          "security": {
            "type": "string",
            "enum": [
              "",
              "SSL",
              "TLS"
            ],
            "default": "SSL"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password",
            "writeOnly": true
          },
          "monitoredFolders": {
            "type": "array",
            "default": [
              "INBOX"
            ]
          },
          "sentFolder": {
            "type": "string"
          },
          "storeSentEmails": {
            "type": "boolean",
            "description": true
          },
          "keepFetchedEmailsUnread": {
            "type": "boolean"
          },
          "fetchSince": {
            "type": "string",
            "format": "date"
          },
          "emailFolder": {
            "type": "string",
            "description": "ID of related entity"
          },
          "assignedUser": {
            "type": "string",
            "description": "ID of related entity",
            "required": true
          },
          "useImap": {
            "type": "boolean",
            "default": true
          },
          "useSmtp": {
            "type": "boolean",
            "description": true
          },
          "smtpHost": {
            "type": "string"
          },
          "smtpPort": {
            "type": "integer",
            "default": 587
          },
          "smtpAuth": {
            "type": "boolean",
            "default": true
          },
          "smtpSecurity": {
            "type": "string",
            "enum": [
              "",
              "SSL",
              "TLS"
            ],
            "default": "TLS"
          },
          "smtpUsername": {
            "type": "string"
          },
          "smtpPassword": {
            "type": "string",
            "format": "password",
            "writeOnly": true
          },
          "smtpAuthMechanism": {
            "type": "string",
            "enum": [
              "login",
              "crammd5",
              "plain"
            ],
            "default": "login"
          }
        },
        "description": "Input data for creating/updating EmailAccount",
        "required": [
          "name",
          "emailAddress",
          "assignedUser"
        ]
      },
      "EmailAddress": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of user who created this record",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of user who last modified this record",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "maxLength": 255,
            "required": true
          },
          "lower": {
            "type": "string",
            "required": true
          },
          "invalid": {
            "type": "boolean"
          },
          "optOut": {
            "type": "boolean"
          },
          "primary": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "description": "EmailAddress entity",
        "required": [
          "name",
          "lower"
        ]
      },
      "EmailFilter": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": true,
            "maxLength": 100,
            "required": true
          },
          "from": {
            "type": "string",
            "description": true,
            "maxLength": 255
          },
          "to": {
            "type": "string",
            "description": true,
            "maxLength": 255
          },
          "subject": {
            "type": "string",
            "description": true,
            "maxLength": 255
          },
          "bodyContains": {
            "type": "array",
            "description": true
          },
          "bodyContainsAll": {
            "type": "array",
            "description": true
          },
          "isGlobal": {
            "type": "boolean",
            "description": true,
            "default": false
          },
          "parent": {
            "type": "object"
          },
          "action": {
            "type": "string",
            "enum": [
              "Skip",
              "Move to Folder",
              "Move to Group Folder",
              "None"
            ],
            "default": "Skip"
          },
          "emailFolder": {
            "type": "string",
            "description": "ID of related entity"
          },
          "groupEmailFolder": {
            "type": "string",
            "description": "ID of related entity"
          },
          "markAsRead": {
            "type": "boolean"
          },
          "skipNotification": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          }
        },
        "description": "EmailFilter entity",
        "required": [
          "name"
        ]
      },
      "EmailFilterInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": true,
            "maxLength": 100,
            "required": true
          },
          "from": {
            "type": "string",
            "description": true,
            "maxLength": 255
          },
          "to": {
            "type": "string",
            "description": true,
            "maxLength": 255
          },
          "subject": {
            "type": "string",
            "description": true,
            "maxLength": 255
          },
          "bodyContains": {
            "type": "array",
            "description": true
          },
          "bodyContainsAll": {
            "type": "array",
            "description": true
          },
          "isGlobal": {
            "type": "boolean",
            "description": true,
            "default": false
          },
          "parent": {
            "type": "object"
          },
          "action": {
            "type": "string",
            "enum": [
              "Skip",
              "Move to Folder",
              "Move to Group Folder",
              "None"
            ],
            "default": "Skip"
          },
          "emailFolder": {
            "type": "string",
            "description": "ID of related entity"
          },
          "groupEmailFolder": {
            "type": "string",
            "description": "ID of related entity"
          },
          "markAsRead": {
            "type": "boolean"
          },
          "skipNotification": {
            "type": "boolean"
          }
        },
        "description": "Input data for creating/updating EmailFilter",
        "required": [
          "name"
        ]
      },
      "EmailFolder": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "maxLength": 64,
            "required": true
          },
          "order": {
            "type": "integer"
          },
          "assignedUser": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "skipNotifications": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          }
        },
        "description": "EmailFolder entity",
        "required": [
          "name"
        ]
      },
      "EmailFolderInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "maxLength": 64,
            "required": true
          },
          "order": {
            "type": "integer"
          },
          "skipNotifications": {
            "type": "boolean"
          }
        },
        "description": "Input data for creating/updating EmailFolder",
        "required": [
          "name"
        ]
      },
      "EmailQueueItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of the EmailQueueItem"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of user who created this record",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of user who last modified this record",
            "readOnly": true
          },
          "massEmail": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "enum": [
              "Pending",
              "Sent",
              "Failed",
              "Sending"
            ],
            "readOnly": true
          },
          "attemptCount": {
            "type": "integer",
            "readOnly": true,
            "default": 0
          },
          "target": {
            "type": "object",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "sentAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "emailAddress": {
            "type": "string",
            "readOnly": true
          },
          "isTest": {
            "type": "boolean"
          }
        },
        "description": "EmailQueueItem entity"
      },
      "EmailTemplate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "subject": {
            "type": "string"
          },
          "body": {
            "type": "string",
            "description": "HTML content"
          },
          "isHtml": {
            "type": "boolean",
            "default": true
          },
          "oneOff": {
            "type": "boolean",
            "description": true,
            "default": false
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "category": {
            "type": "string",
            "description": "ID of related entity"
          },
          "assignedUser": {
            "type": "string",
            "description": "ID of related entity"
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          }
        },
        "description": "EmailTemplate entity",
        "required": [
          "name"
        ]
      },
      "EmailTemplateInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "subject": {
            "type": "string"
          },
          "body": {
            "type": "string",
            "description": "HTML content"
          },
          "isHtml": {
            "type": "boolean",
            "default": true
          },
          "oneOff": {
            "type": "boolean",
            "description": true,
            "default": false
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "category": {
            "type": "string",
            "description": "ID of related entity"
          },
          "assignedUser": {
            "type": "string",
            "description": "ID of related entity"
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Input data for creating/updating EmailTemplate",
        "required": [
          "name"
        ]
      },
      "EmailTemplateCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "order": {
            "type": "integer",
            "required": true
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parent": {
            "type": "string",
            "description": "ID of related entity"
          },
          "childList": {
            "type": "array",
            "readOnly": true
          }
        },
        "description": "EmailTemplateCategory entity",
        "required": [
          "name",
          "order"
        ]
      },
      "EmailTemplateCategoryInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "order": {
            "type": "integer",
            "required": true
          },
          "description": {
            "type": "string"
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parent": {
            "type": "string",
            "description": "ID of related entity"
          }
        },
        "description": "Input data for creating/updating EmailTemplateCategory",
        "required": [
          "name",
          "order"
        ]
      },
      "Export": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of the Export"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of user who last modified this record",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "enum": [
              "Pending",
              "Running",
              "Success",
              "Failed"
            ],
            "default": "Pending"
          },
          "params": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "required": true
          },
          "notifyOnFinish": {
            "type": "boolean",
            "default": false
          },
          "attachment": {
            "type": "string",
            "description": "ID of related entity"
          }
        },
        "description": "Export entity",
        "required": [
          "createdBy"
        ]
      },
      "ExportInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the Export"
          },
          "status": {
            "type": "string",
            "enum": [
              "Pending",
              "Running",
              "Success",
              "Failed"
            ],
            "default": "Pending"
          },
          "params": {
            "type": "string"
          },
          "notifyOnFinish": {
            "type": "boolean",
            "default": false
          },
          "attachment": {
            "type": "string",
            "description": "ID of related entity"
          }
        },
        "description": "Input data for creating/updating Export"
      },
      "ExternalAccount": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the ExternalAccount"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of user who created this record",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of user who last modified this record",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "maxLength": 64
          },
          "data": {
            "type": "object"
          },
          "enabled": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          }
        },
        "description": "ExternalAccount entity"
      },
      "ExternalAccountInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the ExternalAccount"
          },
          "data": {
            "type": "object"
          },
          "enabled": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          }
        },
        "description": "Input data for creating/updating ExternalAccount"
      },
      "GroupEmailFolder": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "maxLength": 64,
            "required": true
          },
          "order": {
            "type": "integer"
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          }
        },
        "description": "GroupEmailFolder entity",
        "required": [
          "name"
        ]
      },
      "GroupEmailFolderInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "maxLength": 64,
            "required": true
          },
          "order": {
            "type": "integer"
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Input data for creating/updating GroupEmailFolder",
        "required": [
          "name"
        ]
      },
      "InboundEmail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "emailAddress": {
            "type": "string",
            "maxLength": 100,
            "required": true
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive"
            ],
            "default": "Active"
          },
          "host": {
            "type": "string"
          },
          "port": {
            "type": "integer",
            "default": 993
          },
          "security": {
            "type": "string",
            "enum": [
              "",
              "SSL",
              "TLS"
            ],
            "default": "SSL"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password",
            "writeOnly": true
          },
          "monitoredFolders": {
            "type": "array",
            "default": [
              "INBOX"
            ]
          },
          "fetchSince": {
            "type": "string",
            "format": "date"
          },
          "fetchData": {
            "type": "object",
            "readOnly": true
          },
          "assignToUser": {
            "type": "string",
            "description": true
          },
          "team": {
            "type": "string",
            "description": true
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": true
          },
          "addAllTeamUsers": {
            "type": "boolean",
            "description": true,
            "default": true
          },
          "isSystem": {
            "type": "boolean",
            "description": true,
            "readOnly": true
          },
          "sentFolder": {
            "type": "string"
          },
          "storeSentEmails": {
            "type": "boolean",
            "description": true
          },
          "keepFetchedEmailsUnread": {
            "type": "boolean"
          },
          "connectedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "excludeFromReply": {
            "type": "boolean",
            "description": true
          },
          "useImap": {
            "type": "boolean",
            "default": true
          },
          "useSmtp": {
            "type": "boolean",
            "description": true
          },
          "smtpIsShared": {
            "type": "boolean",
            "description": true
          },
          "smtpIsForMassEmail": {
            "type": "boolean",
            "description": true
          },
          "smtpHost": {
            "type": "string"
          },
          "smtpPort": {
            "type": "integer",
            "default": 587
          },
          "smtpAuth": {
            "type": "boolean",
            "default": true
          },
          "smtpSecurity": {
            "type": "string",
            "enum": [
              "",
              "SSL",
              "TLS"
            ],
            "default": "TLS"
          },
          "smtpUsername": {
            "type": "string"
          },
          "smtpPassword": {
            "type": "string",
            "format": "password",
            "writeOnly": true
          },
          "smtpAuthMechanism": {
            "type": "string",
            "enum": [
              "login",
              "crammd5",
              "plain"
            ],
            "default": "login"
          },
          "createCase": {
            "type": "boolean",
            "description": true
          },
          "caseDistribution": {
            "type": "string",
            "description": true,
            "enum": [
              "",
              "Direct-Assignment",
              "Round-Robin",
              "Least-Busy"
            ],
            "default": "Direct-Assignment"
          },
          "targetUserPosition": {
            "type": "string",
            "description": true
          },
          "reply": {
            "type": "boolean",
            "description": true
          },
          "replyEmailTemplate": {
            "type": "string",
            "description": "ID of related entity"
          },
          "replyFromAddress": {
            "type": "string"
          },
          "replyToAddress": {
            "type": "string",
            "description": true
          },
          "replyFromName": {
            "type": "string"
          },
          "fromName": {
            "type": "string"
          },
          "groupEmailFolder": {
            "type": "string",
            "description": true
          },
          "imapHandler": {
            "type": "string",
            "readOnly": true
          },
          "smtpHandler": {
            "type": "string",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          }
        },
        "description": "InboundEmail entity",
        "required": [
          "name",
          "emailAddress"
        ]
      },
      "InboundEmailInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "emailAddress": {
            "type": "string",
            "maxLength": 100,
            "required": true
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive"
            ],
            "default": "Active"
          },
          "host": {
            "type": "string"
          },
          "port": {
            "type": "integer",
            "default": 993
          },
          "security": {
            "type": "string",
            "enum": [
              "",
              "SSL",
              "TLS"
            ],
            "default": "SSL"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password",
            "writeOnly": true
          },
          "monitoredFolders": {
            "type": "array",
            "default": [
              "INBOX"
            ]
          },
          "fetchSince": {
            "type": "string",
            "format": "date"
          },
          "assignToUser": {
            "type": "string",
            "description": true
          },
          "team": {
            "type": "string",
            "description": true
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": true
          },
          "addAllTeamUsers": {
            "type": "boolean",
            "description": true,
            "default": true
          },
          "sentFolder": {
            "type": "string"
          },
          "storeSentEmails": {
            "type": "boolean",
            "description": true
          },
          "keepFetchedEmailsUnread": {
            "type": "boolean"
          },
          "excludeFromReply": {
            "type": "boolean",
            "description": true
          },
          "useImap": {
            "type": "boolean",
            "default": true
          },
          "useSmtp": {
            "type": "boolean",
            "description": true
          },
          "smtpIsShared": {
            "type": "boolean",
            "description": true
          },
          "smtpIsForMassEmail": {
            "type": "boolean",
            "description": true
          },
          "smtpHost": {
            "type": "string"
          },
          "smtpPort": {
            "type": "integer",
            "default": 587
          },
          "smtpAuth": {
            "type": "boolean",
            "default": true
          },
          "smtpSecurity": {
            "type": "string",
            "enum": [
              "",
              "SSL",
              "TLS"
            ],
            "default": "TLS"
          },
          "smtpUsername": {
            "type": "string"
          },
          "smtpPassword": {
            "type": "string",
            "format": "password",
            "writeOnly": true
          },
          "smtpAuthMechanism": {
            "type": "string",
            "enum": [
              "login",
              "crammd5",
              "plain"
            ],
            "default": "login"
          },
          "createCase": {
            "type": "boolean",
            "description": true
          },
          "caseDistribution": {
            "type": "string",
            "description": true,
            "enum": [
              "",
              "Direct-Assignment",
              "Round-Robin",
              "Least-Busy"
            ],
            "default": "Direct-Assignment"
          },
          "targetUserPosition": {
            "type": "string",
            "description": true
          },
          "reply": {
            "type": "boolean",
            "description": true
          },
          "replyEmailTemplate": {
            "type": "string",
            "description": "ID of related entity"
          },
          "replyFromAddress": {
            "type": "string"
          },
          "replyToAddress": {
            "type": "string",
            "description": true
          },
          "replyFromName": {
            "type": "string"
          },
          "fromName": {
            "type": "string"
          },
          "groupEmailFolder": {
            "type": "string",
            "description": true
          }
        },
        "description": "Input data for creating/updating InboundEmail",
        "required": [
          "name",
          "emailAddress"
        ]
      },
      "Integration": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the Integration"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of user who created this record",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of user who last modified this record",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "maxLength": 24
          },
          "data": {
            "type": "object"
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "description": "Integration entity"
      },
      "IntegrationInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the Integration"
          },
          "data": {
            "type": "object"
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "description": "Input data for creating/updating Integration"
      },
      "KnowledgeBaseArticle": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "status": {
            "type": "string",
            "enum": [
              "Draft",
              "In Review",
              "Published",
              "Archived"
            ],
            "default": "Draft"
          },
          "language": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "Article"
            ],
            "default": "Article"
          },
          "portals": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": true
          },
          "publishDate": {
            "type": "string",
            "format": "date"
          },
          "expirationDate": {
            "type": "string",
            "format": "date"
          },
          "order": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "assignedUser": {
            "type": "string",
            "description": "ID of related entity"
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "body": {
            "type": "string",
            "description": "HTML content"
          },
          "bodyPlain": {
            "type": "string",
            "readOnly": true
          }
        },
        "description": "KnowledgeBaseArticle entity",
        "required": [
          "name"
        ]
      },
      "KnowledgeBaseArticleInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "status": {
            "type": "string",
            "enum": [
              "Draft",
              "In Review",
              "Published",
              "Archived"
            ],
            "default": "Draft"
          },
          "language": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "Article"
            ],
            "default": "Article"
          },
          "portals": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": true
          },
          "publishDate": {
            "type": "string",
            "format": "date"
          },
          "expirationDate": {
            "type": "string",
            "format": "date"
          },
          "order": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "assignedUser": {
            "type": "string",
            "description": "ID of related entity"
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "body": {
            "type": "string",
            "description": "HTML content"
          }
        },
        "description": "Input data for creating/updating KnowledgeBaseArticle",
        "required": [
          "name"
        ]
      },
      "KnowledgeBaseCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "order": {
            "type": "integer",
            "required": true
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parent": {
            "type": "string",
            "description": "ID of related entity"
          },
          "childList": {
            "type": "array",
            "readOnly": true
          }
        },
        "description": "KnowledgeBaseCategory entity",
        "required": [
          "name",
          "order"
        ]
      },
      "KnowledgeBaseCategoryInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "description": {
            "type": "string"
          },
          "order": {
            "type": "integer",
            "required": true
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parent": {
            "type": "string",
            "description": "ID of related entity"
          }
        },
        "description": "Input data for creating/updating KnowledgeBaseCategory",
        "required": [
          "name",
          "order"
        ]
      },
      "LayoutSet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of user who created this record",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of user who last modified this record",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "maxLength": 100,
            "required": true
          },
          "layoutList": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          }
        },
        "description": "LayoutSet entity",
        "required": [
          "name"
        ]
      },
      "LayoutSetInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "maxLength": 100,
            "required": true
          },
          "layoutList": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Input data for creating/updating LayoutSet",
        "required": [
          "name"
        ]
      },
      "Lead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "object",
            "description": "Name/title of the record"
          },
          "salutationName": {
            "type": "string",
            "enum": [
              "",
              "Mr.",
              "Ms.",
              "Mrs.",
              "Dr."
            ]
          },
          "firstName": {
            "type": "string",
            "maxLength": 100
          },
          "lastName": {
            "type": "string",
            "maxLength": 100
          },
          "title": {
            "type": "string",
            "maxLength": 100
          },
          "status": {
            "type": "string",
            "enum": [
              "New",
              "Assigned",
              "In Process",
              "Converted",
              "Recycled",
              "Dead"
            ],
            "default": "New"
          },
          "source": {
            "type": "string",
            "enum": [
              "",
              "Call",
              "Email",
              "Existing Customer",
              "Partner",
              "Public Relations",
              "Web Site",
              "Campaign",
              "Other"
            ]
          },
          "industry": {
            "type": "string"
          },
          "opportunityAmount": {
            "type": "number",
            "format": "float"
          },
          "opportunityAmountConverted": {
            "type": "string",
            "readOnly": true
          },
          "website": {
            "type": "string",
            "format": "uri"
          },
          "address": {
            "type": "object"
          },
          "addressStreet": {
            "type": "string",
            "maxLength": 255
          },
          "addressCity": {
            "type": "string",
            "maxLength": 100
          },
          "addressState": {
            "type": "string",
            "maxLength": 100
          },
          "addressCountry": {
            "type": "string",
            "maxLength": 100
          },
          "addressPostalCode": {
            "type": "string",
            "maxLength": 40
          },
          "emailAddress": {
            "type": "string",
            "format": "email"
          },
          "phoneNumber": {
            "type": "string"
          },
          "doNotCall": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "convertedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "accountName": {
            "type": "string"
          },
          "assignedUser": {
            "type": "string",
            "description": "ID of related entity"
          },
          "acceptanceStatus": {
            "type": "string",
            "readOnly": true
          },
          "acceptanceStatusMeetings": {
            "type": "string",
            "readOnly": true
          },
          "acceptanceStatusCalls": {
            "type": "string",
            "readOnly": true
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "campaign": {
            "type": "string",
            "description": "ID of related entity"
          },
          "createdAccount": {
            "type": "string",
            "description": "ID of related entity"
          },
          "createdContact": {
            "type": "string",
            "description": "ID of related entity"
          },
          "createdOpportunity": {
            "type": "string",
            "description": "ID of related entity"
          },
          "targetLists": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "targetList": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "targetListIsOptedOut": {
            "type": "boolean",
            "readOnly": true
          },
          "originalEmail": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "middleName": {
            "type": "string",
            "maxLength": 100
          },
          "opportunityAmountCurrency": {
            "type": "string",
            "maxLength": 3
          },
          "addressMap": {
            "type": "object",
            "readOnly": true
          },
          "emailAddressIsOptedOut": {
            "type": "boolean",
            "readOnly": true
          },
          "emailAddressIsInvalid": {
            "type": "boolean",
            "readOnly": true
          },
          "phoneNumberIsOptedOut": {
            "type": "boolean",
            "readOnly": true
          },
          "phoneNumberIsInvalid": {
            "type": "boolean",
            "readOnly": true
          },
          "streamUpdatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Lead entity"
      },
      "LeadInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "object",
            "description": "Name/title of the record"
          },
          "salutationName": {
            "type": "string",
            "enum": [
              "",
              "Mr.",
              "Ms.",
              "Mrs.",
              "Dr."
            ]
          },
          "firstName": {
            "type": "string",
            "maxLength": 100
          },
          "lastName": {
            "type": "string",
            "maxLength": 100
          },
          "title": {
            "type": "string",
            "maxLength": 100
          },
          "status": {
            "type": "string",
            "enum": [
              "New",
              "Assigned",
              "In Process",
              "Converted",
              "Recycled",
              "Dead"
            ],
            "default": "New"
          },
          "source": {
            "type": "string",
            "enum": [
              "",
              "Call",
              "Email",
              "Existing Customer",
              "Partner",
              "Public Relations",
              "Web Site",
              "Campaign",
              "Other"
            ]
          },
          "industry": {
            "type": "string"
          },
          "opportunityAmount": {
            "type": "number",
            "format": "float"
          },
          "website": {
            "type": "string",
            "format": "uri"
          },
          "address": {
            "type": "object"
          },
          "addressStreet": {
            "type": "string",
            "maxLength": 255
          },
          "addressCity": {
            "type": "string",
            "maxLength": 100
          },
          "addressState": {
            "type": "string",
            "maxLength": 100
          },
          "addressCountry": {
            "type": "string",
            "maxLength": 100
          },
          "addressPostalCode": {
            "type": "string",
            "maxLength": 40
          },
          "emailAddress": {
            "type": "string",
            "format": "email"
          },
          "phoneNumber": {
            "type": "string"
          },
          "doNotCall": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "assignedUser": {
            "type": "string",
            "description": "ID of related entity"
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "campaign": {
            "type": "string",
            "description": "ID of related entity"
          },
          "createdAccount": {
            "type": "string",
            "description": "ID of related entity"
          },
          "createdContact": {
            "type": "string",
            "description": "ID of related entity"
          },
          "createdOpportunity": {
            "type": "string",
            "description": "ID of related entity"
          },
          "targetLists": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "middleName": {
            "type": "string",
            "maxLength": 100
          },
          "opportunityAmountCurrency": {
            "type": "string",
            "maxLength": 3
          }
        },
        "description": "Input data for creating/updating Lead"
      },
      "LeadCapture": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "maxLength": 100
          },
          "campaign": {
            "type": "string",
            "description": "ID of related entity"
          },
          "isActive": {
            "type": "boolean",
            "default": true
          },
          "subscribeToTargetList": {
            "type": "boolean",
            "default": true
          },
          "subscribeContactToTargetList": {
            "type": "boolean",
            "default": true
          },
          "targetList": {
            "type": "string",
            "description": "ID of related entity"
          },
          "fieldList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": true,
            "default": [
              "firstName",
              "lastName",
              "emailAddress"
            ]
          },
          "fieldParams": {
            "type": "object"
          },
          "duplicateCheck": {
            "type": "boolean",
            "default": true
          },
          "optInConfirmation": {
            "type": "boolean"
          },
          "optInConfirmationEmailTemplate": {
            "type": "string",
            "description": "ID of related entity"
          },
          "optInConfirmationLifetime": {
            "type": "integer",
            "default": 48
          },
          "optInConfirmationSuccessMessage": {
            "type": "string",
            "description": true
          },
          "createLeadBeforeOptInConfirmation": {
            "type": "boolean"
          },
          "skipOptInConfirmationIfSubscribed": {
            "type": "boolean"
          },
          "leadSource": {
            "type": "string",
            "default": "Web Site"
          },
          "apiKey": {
            "type": "string",
            "maxLength": 36,
            "readOnly": true
          },
          "formId": {
            "type": "string",
            "maxLength": 17,
            "readOnly": true
          },
          "formEnabled": {
            "type": "boolean"
          },
          "formTitle": {
            "type": "string",
            "maxLength": 80
          },
          "formTheme": {
            "type": "string",
            "maxLength": 64
          },
          "formText": {
            "type": "string",
            "description": "optInConfirmationSuccessMessage"
          },
          "formSuccessText": {
            "type": "string",
            "description": "optInConfirmationSuccessMessage"
          },
          "formSuccessRedirectUrl": {
            "type": "string",
            "format": "uri"
          },
          "formLanguage": {
            "type": "string",
            "maxLength": 5
          },
          "formFrameAncestors": {
            "type": "string"
          },
          "formCaptcha": {
            "type": "boolean",
            "description": true
          },
          "targetTeam": {
            "type": "string",
            "description": "ID of related entity"
          },
          "exampleRequestUrl": {
            "type": "string",
            "readOnly": true
          },
          "exampleRequestMethod": {
            "type": "string",
            "readOnly": true
          },
          "exampleRequestPayload": {
            "type": "string",
            "readOnly": true
          },
          "exampleRequestHeaders": {
            "type": "array",
            "readOnly": true
          },
          "formUrl": {
            "type": "string",
            "format": "uri",
            "readOnly": true
          },
          "inboundEmail": {
            "type": "string",
            "description": "ID of related entity"
          },
          "smtpAccount": {
            "type": "string",
            "readOnly": true
          },
          "phoneNumberCountry": {
            "type": "string",
            "maxLength": 2
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          }
        },
        "description": "LeadCapture entity",
        "required": [
          "fieldList"
        ]
      },
      "LeadCaptureInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "maxLength": 100
          },
          "campaign": {
            "type": "string",
            "description": "ID of related entity"
          },
          "isActive": {
            "type": "boolean",
            "default": true
          },
          "subscribeToTargetList": {
            "type": "boolean",
            "default": true
          },
          "subscribeContactToTargetList": {
            "type": "boolean",
            "default": true
          },
          "targetList": {
            "type": "string",
            "description": "ID of related entity"
          },
          "fieldList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": true,
            "default": [
              "firstName",
              "lastName",
              "emailAddress"
            ]
          },
          "fieldParams": {
            "type": "object"
          },
          "duplicateCheck": {
            "type": "boolean",
            "default": true
          },
          "optInConfirmation": {
            "type": "boolean"
          },
          "optInConfirmationEmailTemplate": {
            "type": "string",
            "description": "ID of related entity"
          },
          "optInConfirmationLifetime": {
            "type": "integer",
            "default": 48
          },
          "optInConfirmationSuccessMessage": {
            "type": "string",
            "description": true
          },
          "createLeadBeforeOptInConfirmation": {
            "type": "boolean"
          },
          "skipOptInConfirmationIfSubscribed": {
            "type": "boolean"
          },
          "leadSource": {
            "type": "string",
            "default": "Web Site"
          },
          "formEnabled": {
            "type": "boolean"
          },
          "formTitle": {
            "type": "string",
            "maxLength": 80
          },
          "formTheme": {
            "type": "string",
            "maxLength": 64
          },
          "formText": {
            "type": "string",
            "description": "optInConfirmationSuccessMessage"
          },
          "formSuccessText": {
            "type": "string",
            "description": "optInConfirmationSuccessMessage"
          },
          "formSuccessRedirectUrl": {
            "type": "string",
            "format": "uri"
          },
          "formLanguage": {
            "type": "string",
            "maxLength": 5
          },
          "formFrameAncestors": {
            "type": "string"
          },
          "formCaptcha": {
            "type": "boolean",
            "description": true
          },
          "targetTeam": {
            "type": "string",
            "description": "ID of related entity"
          },
          "inboundEmail": {
            "type": "string",
            "description": "ID of related entity"
          },
          "phoneNumberCountry": {
            "type": "string",
            "maxLength": 2
          }
        },
        "description": "Input data for creating/updating LeadCapture",
        "required": [
          "fieldList"
        ]
      },
      "LeadCaptureLogRecord": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of the LeadCaptureLogRecord"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of user who created this record",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of user who last modified this record",
            "readOnly": true
          },
          "number": {
            "type": "integer",
            "readOnly": true
          },
          "data": {
            "type": "object"
          },
          "isCreated": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "leadCapture": {
            "type": "string",
            "description": "ID of related entity"
          },
          "target": {
            "type": "object"
          }
        },
        "description": "LeadCaptureLogRecord entity"
      },
      "MassEmail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "status": {
            "type": "string",
            "enum": [
              "Draft",
              "Pending",
              "Complete",
              "In Process",
              "Failed"
            ],
            "default": "Pending"
          },
          "storeSentEmails": {
            "type": "boolean",
            "description": true,
            "default": false
          },
          "optOutEntirely": {
            "type": "boolean",
            "description": true,
            "default": false
          },
          "fromAddress": {
            "type": "string"
          },
          "fromName": {
            "type": "string"
          },
          "replyToAddress": {
            "type": "string"
          },
          "replyToName": {
            "type": "string"
          },
          "startAt": {
            "type": "string",
            "format": "date-time",
            "required": true
          },
          "emailTemplate": {
            "type": "string",
            "description": "ID of related entity",
            "required": true
          },
          "campaign": {
            "type": "string",
            "description": "ID of related entity"
          },
          "targetLists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": true,
            "required": true
          },
          "excludingTargetLists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": true
          },
          "inboundEmail": {
            "type": "string",
            "description": "ID of related entity"
          },
          "smtpAccount": {
            "type": "string",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          }
        },
        "description": "MassEmail entity",
        "required": [
          "name",
          "startAt",
          "emailTemplate",
          "targetLists"
        ]
      },
      "MassEmailInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "status": {
            "type": "string",
            "enum": [
              "Draft",
              "Pending",
              "Complete",
              "In Process",
              "Failed"
            ],
            "default": "Pending"
          },
          "storeSentEmails": {
            "type": "boolean",
            "description": true,
            "default": false
          },
          "optOutEntirely": {
            "type": "boolean",
            "description": true,
            "default": false
          },
          "fromAddress": {
            "type": "string"
          },
          "fromName": {
            "type": "string"
          },
          "replyToAddress": {
            "type": "string"
          },
          "replyToName": {
            "type": "string"
          },
          "startAt": {
            "type": "string",
            "format": "date-time",
            "required": true
          },
          "emailTemplate": {
            "type": "string",
            "description": "ID of related entity",
            "required": true
          },
          "campaign": {
            "type": "string",
            "description": "ID of related entity"
          },
          "targetLists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": true,
            "required": true
          },
          "excludingTargetLists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": true
          },
          "inboundEmail": {
            "type": "string",
            "description": "ID of related entity"
          }
        },
        "description": "Input data for creating/updating MassEmail",
        "required": [
          "name",
          "startAt",
          "emailTemplate",
          "targetLists"
        ]
      },
      "Meeting": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "status": {
            "type": "string",
            "enum": [
              "Planned",
              "Held",
              "Not Held"
            ],
            "default": "Planned"
          },
          "dateStart": {
            "type": "string",
            "required": true,
            "default": "javascript: return this.dateTime.getNow(15);"
          },
          "dateEnd": {
            "type": "string",
            "required": true
          },
          "isAllDay": {
            "type": "boolean"
          },
          "duration": {
            "type": "integer",
            "description": "Duration in seconds",
            "readOnly": true,
            "default": 3600
          },
          "reminders": {
            "type": "array",
            "readOnly": true
          },
          "description": {
            "type": "string"
          },
          "parent": {
            "type": "object"
          },
          "account": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "uid": {
            "type": "string",
            "maxLength": 255,
            "readOnly": true
          },
          "joinUrl": {
            "type": "string",
            "format": "uri",
            "maxLength": 320,
            "readOnly": true,
            "default": null
          },
          "acceptanceStatus": {
            "type": "string",
            "enum": [
              "None",
              "Accepted",
              "Tentative",
              "Declined"
            ],
            "readOnly": true
          },
          "users": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "leads": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sourceEmail": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "assignedUser": {
            "type": "string",
            "description": "ID of related entity",
            "required": true
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "streamUpdatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Meeting entity",
        "required": [
          "name",
          "dateStart",
          "dateEnd",
          "assignedUser"
        ]
      },
      "MeetingInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "status": {
            "type": "string",
            "enum": [
              "Planned",
              "Held",
              "Not Held"
            ],
            "default": "Planned"
          },
          "dateStart": {
            "type": "string",
            "required": true,
            "default": "javascript: return this.dateTime.getNow(15);"
          },
          "dateEnd": {
            "type": "string",
            "required": true
          },
          "isAllDay": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "parent": {
            "type": "object"
          },
          "users": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "leads": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "assignedUser": {
            "type": "string",
            "description": "ID of related entity",
            "required": true
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Input data for creating/updating Meeting",
        "required": [
          "name",
          "dateStart",
          "dateEnd",
          "assignedUser"
        ]
      },
      "Note": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of the Note"
          },
          "post": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "enum": [
              "Post",
              "Create",
              "CreateRelated",
              "Update",
              "Status",
              "Assign",
              "Relate",
              "Unrelate",
              "EmailReceived",
              "EmailSent"
            ],
            "maxLength": 24,
            "readOnly": true,
            "default": "Post"
          },
          "targetType": {
            "type": "string",
            "enum": [
              "self",
              "all",
              "teams",
              "users",
              "portals"
            ],
            "maxLength": 7
          },
          "parent": {
            "type": "object"
          },
          "related": {
            "type": "object",
            "readOnly": true
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "number": {
            "type": "integer",
            "readOnly": true
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "portals": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "users": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isGlobal": {
            "type": "boolean"
          },
          "createdByGender": {
            "type": "string",
            "readOnly": true,
            "description": "Foreign field value"
          },
          "notifiedUserIdList": {
            "type": "array",
            "readOnly": true
          },
          "isInternal": {
            "type": "boolean"
          },
          "isPinned": {
            "type": "boolean",
            "readOnly": true
          },
          "reactionCounts": {
            "type": "object",
            "readOnly": true
          },
          "myReactions": {
            "type": "array",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          }
        },
        "description": "Note entity"
      },
      "NoteInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the Note"
          },
          "post": {
            "type": "string"
          },
          "targetType": {
            "type": "string",
            "enum": [
              "self",
              "all",
              "teams",
              "users",
              "portals"
            ],
            "maxLength": 7
          },
          "parent": {
            "type": "object"
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "portals": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "users": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isGlobal": {
            "type": "boolean"
          },
          "isInternal": {
            "type": "boolean"
          }
        },
        "description": "Input data for creating/updating Note"
      },
      "Notification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of the Notification"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of user who last modified this record",
            "readOnly": true
          },
          "number": {
            "type": "integer",
            "readOnly": true
          },
          "data": {
            "type": "object"
          },
          "noteData": {
            "type": "object",
            "readOnly": true
          },
          "type": {
            "type": "string"
          },
          "read": {
            "type": "boolean"
          },
          "emailIsProcessed": {
            "type": "boolean"
          },
          "user": {
            "type": "string",
            "description": "ID of related entity"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "message": {
            "type": "string"
          },
          "related": {
            "type": "object",
            "readOnly": true
          },
          "relatedParent": {
            "type": "object",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          }
        },
        "description": "Notification entity"
      },
      "OAuthAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "maxLength": 100,
            "required": true
          },
          "provider": {
            "type": "string",
            "description": "ID of related entity",
            "required": true
          },
          "user": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "hasAccessToken": {
            "type": "boolean",
            "readOnly": true
          },
          "providerIsActive": {
            "type": "string",
            "readOnly": true,
            "description": "Foreign field value"
          },
          "data": {
            "type": "object",
            "readOnly": true
          },
          "accessToken": {
            "type": "string",
            "format": "password",
            "writeOnly": true,
            "readOnly": true
          },
          "refreshToken": {
            "type": "string",
            "format": "password",
            "writeOnly": true,
            "readOnly": true
          },
          "description": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          }
        },
        "description": "OAuthAccount entity",
        "required": [
          "name",
          "provider"
        ]
      },
      "OAuthAccountInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "maxLength": 100,
            "required": true
          },
          "provider": {
            "type": "string",
            "description": "ID of related entity",
            "required": true
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Input data for creating/updating OAuthAccount",
        "required": [
          "name",
          "provider"
        ]
      },
      "OAuthProvider": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "maxLength": 100,
            "required": true
          },
          "isActive": {
            "type": "boolean",
            "default": true
          },
          "clientId": {
            "type": "string",
            "maxLength": 150
          },
          "clientSecret": {
            "type": "string",
            "format": "password",
            "writeOnly": true,
            "maxLength": 512
          },
          "authorizationEndpoint": {
            "type": "string",
            "format": "uri",
            "maxLength": 512
          },
          "tokenEndpoint": {
            "type": "string",
            "format": "uri",
            "maxLength": 512
          },
          "authorizationRedirectUri": {
            "type": "string",
            "format": "uri",
            "readOnly": true
          },
          "authorizationPrompt": {
            "type": "string",
            "enum": [
              "none",
              "consent",
              "login",
              "select_account"
            ],
            "maxLength": 14,
            "default": "none"
          },
          "scopes": {
            "type": "array"
          },
          "authorizationParams": {
            "type": "object",
            "description": true
          },
          "scopeSeparator": {
            "type": "string",
            "maxLength": 1
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          }
        },
        "description": "OAuthProvider entity",
        "required": [
          "name"
        ]
      },
      "OAuthProviderInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "maxLength": 100,
            "required": true
          },
          "isActive": {
            "type": "boolean",
            "default": true
          },
          "clientId": {
            "type": "string",
            "maxLength": 150
          },
          "clientSecret": {
            "type": "string",
            "format": "password",
            "writeOnly": true,
            "maxLength": 512
          },
          "authorizationEndpoint": {
            "type": "string",
            "format": "uri",
            "maxLength": 512
          },
          "tokenEndpoint": {
            "type": "string",
            "format": "uri",
            "maxLength": 512
          },
          "authorizationPrompt": {
            "type": "string",
            "enum": [
              "none",
              "consent",
              "login",
              "select_account"
            ],
            "maxLength": 14,
            "default": "none"
          },
          "scopes": {
            "type": "array"
          },
          "authorizationParams": {
            "type": "object",
            "description": true
          },
          "scopeSeparator": {
            "type": "string",
            "maxLength": 1
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Input data for creating/updating OAuthProvider",
        "required": [
          "name"
        ]
      },
      "Opportunity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "amount": {
            "type": "number",
            "format": "float",
            "required": true
          },
          "amountConverted": {
            "type": "string",
            "readOnly": true
          },
          "amountWeightedConverted": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "account": {
            "type": "string",
            "description": "ID of related entity"
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contact": {
            "type": "string",
            "description": "ID of related entity"
          },
          "stage": {
            "type": "string",
            "enum": [
              "Prospecting",
              "Qualification",
              "Proposal",
              "Negotiation",
              "Closed Won",
              "Closed Lost"
            ],
            "default": "Prospecting"
          },
          "lastStage": {
            "type": "string"
          },
          "probability": {
            "type": "integer"
          },
          "leadSource": {
            "type": "string"
          },
          "closeDate": {
            "type": "string",
            "format": "date",
            "required": true
          },
          "description": {
            "type": "string"
          },
          "campaign": {
            "type": "string",
            "description": "ID of related entity"
          },
          "originalLead": {
            "type": "string",
            "readOnly": true
          },
          "contactRole": {
            "type": "string",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "assignedUser": {
            "type": "string",
            "description": "ID of related entity"
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "amountCurrency": {
            "type": "string",
            "maxLength": 3
          },
          "streamUpdatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Opportunity entity",
        "required": [
          "name",
          "amount",
          "closeDate"
        ]
      },
      "OpportunityInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "amount": {
            "type": "number",
            "format": "float",
            "required": true
          },
          "account": {
            "type": "string",
            "description": "ID of related entity"
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contact": {
            "type": "string",
            "description": "ID of related entity"
          },
          "stage": {
            "type": "string",
            "enum": [
              "Prospecting",
              "Qualification",
              "Proposal",
              "Negotiation",
              "Closed Won",
              "Closed Lost"
            ],
            "default": "Prospecting"
          },
          "lastStage": {
            "type": "string"
          },
          "probability": {
            "type": "integer"
          },
          "leadSource": {
            "type": "string"
          },
          "closeDate": {
            "type": "string",
            "format": "date",
            "required": true
          },
          "description": {
            "type": "string"
          },
          "campaign": {
            "type": "string",
            "description": "ID of related entity"
          },
          "assignedUser": {
            "type": "string",
            "description": "ID of related entity"
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "amountCurrency": {
            "type": "string",
            "maxLength": 3
          }
        },
        "description": "Input data for creating/updating Opportunity",
        "required": [
          "name",
          "amount",
          "closeDate"
        ]
      },
      "PhoneNumber": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of user who created this record",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of user who last modified this record",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "maxLength": 36,
            "required": true
          },
          "type": {
            "type": "string"
          },
          "numeric": {
            "type": "string",
            "maxLength": 36
          },
          "invalid": {
            "type": "boolean"
          },
          "optOut": {
            "type": "boolean"
          },
          "primary": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "description": "PhoneNumber entity",
        "required": [
          "name"
        ]
      },
      "Portal": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "maxLength": 100
          },
          "logo": {
            "type": "string",
            "description": "Image ID"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "readOnly": true
          },
          "customId": {
            "type": "string",
            "maxLength": 36
          },
          "isActive": {
            "type": "boolean",
            "default": true
          },
          "isDefault": {
            "type": "boolean",
            "readOnly": true,
            "default": false
          },
          "portalRoles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tabList": {
            "type": "array"
          },
          "quickCreateList": {
            "type": "array"
          },
          "applicationName": {
            "type": "string"
          },
          "companyLogo": {
            "type": "string",
            "description": "Image ID"
          },
          "theme": {
            "type": "string"
          },
          "themeParams": {
            "type": "object"
          },
          "language": {
            "type": "string"
          },
          "timeZone": {
            "type": "string"
          },
          "dateFormat": {
            "type": "string"
          },
          "timeFormat": {
            "type": "string"
          },
          "weekStart": {
            "type": "string",
            "default": -1
          },
          "defaultCurrency": {
            "type": "string"
          },
          "dashboardLayout": {
            "type": "array"
          },
          "dashletsOptions": {
            "type": "object"
          },
          "customUrl": {
            "type": "string",
            "format": "uri"
          },
          "layoutSet": {
            "type": "string",
            "description": true
          },
          "authenticationProvider": {
            "type": "string",
            "description": "ID of related entity"
          },
          "authTokenLifetime": {
            "type": "number",
            "format": "float",
            "description": "Settings.authTokenMaxIdleTime"
          },
          "authTokenMaxIdleTime": {
            "type": "number",
            "format": "float",
            "description": "Settings.authTokenMaxIdleTime"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          }
        },
        "description": "Portal entity"
      },
      "PortalInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "maxLength": 100
          },
          "logo": {
            "type": "string",
            "description": "Image ID"
          },
          "customId": {
            "type": "string",
            "maxLength": 36
          },
          "isActive": {
            "type": "boolean",
            "default": true
          },
          "portalRoles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tabList": {
            "type": "array"
          },
          "quickCreateList": {
            "type": "array"
          },
          "applicationName": {
            "type": "string"
          },
          "companyLogo": {
            "type": "string",
            "description": "Image ID"
          },
          "theme": {
            "type": "string"
          },
          "themeParams": {
            "type": "object"
          },
          "language": {
            "type": "string"
          },
          "timeZone": {
            "type": "string"
          },
          "dateFormat": {
            "type": "string"
          },
          "timeFormat": {
            "type": "string"
          },
          "weekStart": {
            "type": "string",
            "default": -1
          },
          "defaultCurrency": {
            "type": "string"
          },
          "dashboardLayout": {
            "type": "array"
          },
          "dashletsOptions": {
            "type": "object"
          },
          "customUrl": {
            "type": "string",
            "format": "uri"
          },
          "layoutSet": {
            "type": "string",
            "description": true
          },
          "authenticationProvider": {
            "type": "string",
            "description": "ID of related entity"
          },
          "authTokenLifetime": {
            "type": "number",
            "format": "float",
            "description": "Settings.authTokenMaxIdleTime"
          },
          "authTokenMaxIdleTime": {
            "type": "number",
            "format": "float",
            "description": "Settings.authTokenMaxIdleTime"
          }
        },
        "description": "Input data for creating/updating Portal"
      },
      "PortalRole": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of user who created this record",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of user who last modified this record",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "maxLength": 150,
            "required": true
          },
          "data": {
            "type": "object"
          },
          "fieldData": {
            "type": "object"
          },
          "exportPermission": {
            "type": "string",
            "description": "Role.exportPermission",
            "enum": [
              "not-set",
              "yes",
              "no"
            ],
            "default": "not-set"
          },
          "massUpdatePermission": {
            "type": "string",
            "description": "Role.massUpdatePermission",
            "enum": [
              "not-set",
              "yes",
              "no"
            ],
            "default": "not-set"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          }
        },
        "description": "PortalRole entity",
        "required": [
          "name"
        ]
      },
      "PortalRoleInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "maxLength": 150,
            "required": true
          },
          "data": {
            "type": "object"
          },
          "fieldData": {
            "type": "object"
          },
          "exportPermission": {
            "type": "string",
            "description": "Role.exportPermission",
            "enum": [
              "not-set",
              "yes",
              "no"
            ],
            "default": "not-set"
          },
          "massUpdatePermission": {
            "type": "string",
            "description": "Role.massUpdatePermission",
            "enum": [
              "not-set",
              "yes",
              "no"
            ],
            "default": "not-set"
          }
        },
        "description": "Input data for creating/updating PortalRole",
        "required": [
          "name"
        ]
      },
      "Reminder": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of the Reminder"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of user who created this record",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of user who last modified this record",
            "readOnly": true
          },
          "remindAt": {
            "type": "string",
            "format": "date-time"
          },
          "startAt": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string",
            "enum": [
              "Popup",
              "Email"
            ],
            "maxLength": 36,
            "default": "Popup"
          },
          "seconds": {
            "type": "string",
            "default": 0
          },
          "user": {
            "type": "string",
            "description": "ID of related entity"
          },
          "entity": {
            "type": "object"
          },
          "isSubmitted": {
            "type": "boolean"
          }
        },
        "description": "Reminder entity"
      },
      "ReminderInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the Reminder"
          },
          "remindAt": {
            "type": "string",
            "format": "date-time"
          },
          "startAt": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string",
            "enum": [
              "Popup",
              "Email"
            ],
            "maxLength": 36,
            "default": "Popup"
          },
          "seconds": {
            "type": "string",
            "default": 0
          },
          "user": {
            "type": "string",
            "description": "ID of related entity"
          },
          "entity": {
            "type": "object"
          },
          "isSubmitted": {
            "type": "boolean"
          }
        },
        "description": "Input data for creating/updating Reminder"
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of user who created this record",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of user who last modified this record",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "maxLength": 150,
            "required": true
          },
          "assignmentPermission": {
            "type": "string",
            "description": true,
            "enum": [
              "not-set",
              "all",
              "team",
              "no"
            ],
            "default": "not-set"
          },
          "userPermission": {
            "type": "string",
            "description": true,
            "enum": [
              "not-set",
              "all",
              "team",
              "no"
            ],
            "default": "not-set"
          },
          "messagePermission": {
            "type": "string",
            "description": true,
            "enum": [
              "not-set",
              "all",
              "team",
              "no"
            ],
            "default": "not-set"
          },
          "portalPermission": {
            "type": "string",
            "description": true,
            "enum": [
              "not-set",
              "yes",
              "no"
            ],
            "default": "not-set"
          },
          "groupEmailAccountPermission": {
            "type": "string",
            "description": true,
            "enum": [
              "not-set",
              "all",
              "team",
              "no"
            ],
            "default": "not-set"
          },
          "exportPermission": {
            "type": "string",
            "description": true,
            "enum": [
              "not-set",
              "yes",
              "no"
            ],
            "default": "not-set"
          },
          "massUpdatePermission": {
            "type": "string",
            "description": true,
            "enum": [
              "not-set",
              "yes",
              "no"
            ],
            "default": "not-set"
          },
          "dataPrivacyPermission": {
            "type": "string",
            "description": true,
            "enum": [
              "not-set",
              "yes",
              "no"
            ],
            "default": "not-set"
          },
          "followerManagementPermission": {
            "type": "string",
            "description": true,
            "enum": [
              "not-set",
              "all",
              "team",
              "no"
            ],
            "default": "not-set"
          },
          "auditPermission": {
            "type": "string",
            "description": true,
            "enum": [
              "not-set",
              "yes",
              "no"
            ],
            "default": "not-set"
          },
          "mentionPermission": {
            "type": "string",
            "description": true,
            "enum": [
              "not-set",
              "all",
              "team",
              "no"
            ],
            "default": "not-set"
          },
          "userCalendarPermission": {
            "type": "string",
            "description": true,
            "enum": [
              "not-set",
              "all",
              "team",
              "no"
            ],
            "default": "not-set"
          },
          "data": {
            "type": "object"
          },
          "fieldData": {
            "type": "object"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          }
        },
        "description": "Role entity",
        "required": [
          "name"
        ]
      },
      "RoleInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "maxLength": 150,
            "required": true
          },
          "assignmentPermission": {
            "type": "string",
            "description": true,
            "enum": [
              "not-set",
              "all",
              "team",
              "no"
            ],
            "default": "not-set"
          },
          "userPermission": {
            "type": "string",
            "description": true,
            "enum": [
              "not-set",
              "all",
              "team",
              "no"
            ],
            "default": "not-set"
          },
          "messagePermission": {
            "type": "string",
            "description": true,
            "enum": [
              "not-set",
              "all",
              "team",
              "no"
            ],
            "default": "not-set"
          },
          "portalPermission": {
            "type": "string",
            "description": true,
            "enum": [
              "not-set",
              "yes",
              "no"
            ],
            "default": "not-set"
          },
          "groupEmailAccountPermission": {
            "type": "string",
            "description": true,
            "enum": [
              "not-set",
              "all",
              "team",
              "no"
            ],
            "default": "not-set"
          },
          "exportPermission": {
            "type": "string",
            "description": true,
            "enum": [
              "not-set",
              "yes",
              "no"
            ],
            "default": "not-set"
          },
          "massUpdatePermission": {
            "type": "string",
            "description": true,
            "enum": [
              "not-set",
              "yes",
              "no"
            ],
            "default": "not-set"
          },
          "dataPrivacyPermission": {
            "type": "string",
            "description": true,
            "enum": [
              "not-set",
              "yes",
              "no"
            ],
            "default": "not-set"
          },
          "followerManagementPermission": {
            "type": "string",
            "description": true,
            "enum": [
              "not-set",
              "all",
              "team",
              "no"
            ],
            "default": "not-set"
          },
          "auditPermission": {
            "type": "string",
            "description": true,
            "enum": [
              "not-set",
              "yes",
              "no"
            ],
            "default": "not-set"
          },
          "mentionPermission": {
            "type": "string",
            "description": true,
            "enum": [
              "not-set",
              "all",
              "team",
              "no"
            ],
            "default": "not-set"
          },
          "userCalendarPermission": {
            "type": "string",
            "description": true,
            "enum": [
              "not-set",
              "all",
              "team",
              "no"
            ],
            "default": "not-set"
          },
          "data": {
            "type": "object"
          },
          "fieldData": {
            "type": "object"
          }
        },
        "description": "Input data for creating/updating Role",
        "required": [
          "name"
        ]
      },
      "ScheduledJob": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "job": {
            "type": "string",
            "required": true
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive"
            ],
            "default": "Active"
          },
          "scheduling": {
            "type": "string",
            "description": true,
            "required": true
          },
          "lastRun": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          }
        },
        "description": "ScheduledJob entity",
        "required": [
          "name",
          "job",
          "scheduling"
        ]
      },
      "ScheduledJobInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "job": {
            "type": "string",
            "required": true
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive"
            ],
            "default": "Active"
          },
          "scheduling": {
            "type": "string",
            "description": true,
            "required": true
          }
        },
        "description": "Input data for creating/updating ScheduledJob",
        "required": [
          "name",
          "job",
          "scheduling"
        ]
      },
      "ScheduledJobLogRecord": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of user who created this record",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of user who last modified this record",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true,
            "readOnly": true
          },
          "status": {
            "type": "string",
            "enum": [
              "Success",
              "Failed"
            ],
            "readOnly": true
          },
          "executionTime": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "scheduledJob": {
            "type": "string",
            "description": "ID of related entity"
          },
          "target": {
            "type": "object"
          }
        },
        "description": "ScheduledJobLogRecord entity",
        "required": [
          "name"
        ]
      },
      "Sms": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of the Sms"
          },
          "from": {
            "type": "string",
            "required": true,
            "readOnly": true
          },
          "fromName": {
            "type": "string"
          },
          "to": {
            "type": "string",
            "required": true,
            "readOnly": true
          },
          "fromPhoneNumber": {
            "type": "string",
            "description": "ID of related entity"
          },
          "toPhoneNumbers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "body": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "Draft",
              "Sending",
              "Sent",
              "Archived",
              "Failed"
            ],
            "default": "Archived"
          },
          "parent": {
            "type": "object"
          },
          "dateSent": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "replied": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "replies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Sms entity",
        "required": [
          "from",
          "to"
        ]
      },
      "SmsInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the Sms"
          },
          "fromName": {
            "type": "string"
          },
          "fromPhoneNumber": {
            "type": "string",
            "description": "ID of related entity"
          },
          "toPhoneNumbers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "body": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "Draft",
              "Sending",
              "Sent",
              "Archived",
              "Failed"
            ],
            "default": "Archived"
          },
          "parent": {
            "type": "object"
          },
          "dateSent": {
            "type": "string",
            "format": "date-time"
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Input data for creating/updating Sms"
      },
      "TargetList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "category": {
            "type": "string",
            "description": "ID of related entity"
          },
          "entryCount": {
            "type": "integer",
            "readOnly": true
          },
          "optedOutCount": {
            "type": "integer",
            "readOnly": true
          },
          "description": {
            "type": "string"
          },
          "sourceCampaign": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "assignedUser": {
            "type": "string",
            "description": "ID of related entity"
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "includingActionList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "excludingActionList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "targetStatus": {
            "type": "string",
            "enum": [
              "Listed",
              "Opted Out"
            ],
            "readOnly": true
          },
          "isOptedOut": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "description": "TargetList entity",
        "required": [
          "name"
        ]
      },
      "TargetListInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "category": {
            "type": "string",
            "description": "ID of related entity"
          },
          "description": {
            "type": "string"
          },
          "assignedUser": {
            "type": "string",
            "description": "ID of related entity"
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Input data for creating/updating TargetList",
        "required": [
          "name"
        ]
      },
      "TargetListCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "order": {
            "type": "integer",
            "required": true
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parent": {
            "type": "string",
            "description": "ID of related entity"
          },
          "childList": {
            "type": "array",
            "readOnly": true
          }
        },
        "description": "TargetListCategory entity",
        "required": [
          "name",
          "order"
        ]
      },
      "TargetListCategoryInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "order": {
            "type": "integer",
            "required": true
          },
          "description": {
            "type": "string"
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parent": {
            "type": "string",
            "description": "ID of related entity"
          }
        },
        "description": "Input data for creating/updating TargetListCategory",
        "required": [
          "name",
          "order"
        ]
      },
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "status": {
            "type": "string",
            "enum": [
              "Not Started",
              "Started",
              "Completed",
              "Canceled",
              "Deferred"
            ],
            "default": "Not Started"
          },
          "priority": {
            "type": "string",
            "enum": [
              "Low",
              "Normal",
              "High",
              "Urgent"
            ],
            "default": "Normal"
          },
          "dateStart": {
            "type": "string"
          },
          "dateEnd": {
            "type": "string"
          },
          "dateCompleted": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "isOverdue": {
            "type": "boolean",
            "readOnly": true
          },
          "reminders": {
            "type": "array",
            "readOnly": true
          },
          "description": {
            "type": "string"
          },
          "parent": {
            "type": "object"
          },
          "account": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "contact": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "originalEmail": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "assignedUser": {
            "type": "string",
            "description": "ID of related entity",
            "required": true
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "streamUpdatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "description": "Task entity",
        "required": [
          "name",
          "assignedUser"
        ]
      },
      "TaskInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "status": {
            "type": "string",
            "enum": [
              "Not Started",
              "Started",
              "Completed",
              "Canceled",
              "Deferred"
            ],
            "default": "Not Started"
          },
          "priority": {
            "type": "string",
            "enum": [
              "Low",
              "Normal",
              "High",
              "Urgent"
            ],
            "default": "Normal"
          },
          "dateStart": {
            "type": "string"
          },
          "dateEnd": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "parent": {
            "type": "object"
          },
          "assignedUser": {
            "type": "string",
            "description": "ID of related entity",
            "required": true
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Input data for creating/updating Task",
        "required": [
          "name",
          "assignedUser"
        ]
      },
      "Team": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of user who created this record",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of user who last modified this record",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "maxLength": 100
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": true
          },
          "positionList": {
            "type": "array",
            "description": true
          },
          "userRole": {
            "type": "string",
            "readOnly": true
          },
          "layoutSet": {
            "type": "string",
            "description": true
          },
          "workingTimeCalendar": {
            "type": "string",
            "description": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          }
        },
        "description": "Team entity"
      },
      "TeamInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "maxLength": 100
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": true
          },
          "positionList": {
            "type": "array",
            "description": true
          },
          "layoutSet": {
            "type": "string",
            "description": true
          },
          "workingTimeCalendar": {
            "type": "string",
            "description": true
          }
        },
        "description": "Input data for creating/updating Team"
      },
      "Template": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "body": {
            "type": "string",
            "description": "HTML content"
          },
          "header": {
            "type": "string",
            "description": "HTML content"
          },
          "footer": {
            "type": "string",
            "description": true
          },
          "entityType": {
            "type": "string",
            "required": true
          },
          "leftMargin": {
            "type": "number",
            "format": "float",
            "default": 10
          },
          "rightMargin": {
            "type": "number",
            "format": "float",
            "default": 10
          },
          "topMargin": {
            "type": "number",
            "format": "float",
            "default": 10
          },
          "bottomMargin": {
            "type": "number",
            "format": "float",
            "default": 20
          },
          "printFooter": {
            "type": "boolean"
          },
          "printHeader": {
            "type": "boolean"
          },
          "footerPosition": {
            "type": "number",
            "format": "float",
            "default": 10
          },
          "headerPosition": {
            "type": "number",
            "format": "float",
            "default": 0
          },
          "style": {
            "type": "string"
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "variables": {
            "type": "string",
            "description": true,
            "readOnly": true
          },
          "pageOrientation": {
            "type": "string",
            "enum": [
              "Portrait",
              "Landscape"
            ],
            "default": "Portrait"
          },
          "pageFormat": {
            "type": "string",
            "enum": [
              "A3",
              "A4",
              "A5",
              "A6",
              "A7",
              "Custom"
            ],
            "default": "A4"
          },
          "pageWidth": {
            "type": "number",
            "format": "float"
          },
          "pageHeight": {
            "type": "number",
            "format": "float"
          },
          "fontFace": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "description": "Template entity",
        "required": [
          "name",
          "entityType"
        ]
      },
      "TemplateInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "body": {
            "type": "string",
            "description": "HTML content"
          },
          "header": {
            "type": "string",
            "description": "HTML content"
          },
          "footer": {
            "type": "string",
            "description": true
          },
          "entityType": {
            "type": "string",
            "required": true
          },
          "leftMargin": {
            "type": "number",
            "format": "float",
            "default": 10
          },
          "rightMargin": {
            "type": "number",
            "format": "float",
            "default": 10
          },
          "topMargin": {
            "type": "number",
            "format": "float",
            "default": 10
          },
          "bottomMargin": {
            "type": "number",
            "format": "float",
            "default": 20
          },
          "printFooter": {
            "type": "boolean"
          },
          "printHeader": {
            "type": "boolean"
          },
          "footerPosition": {
            "type": "number",
            "format": "float",
            "default": 10
          },
          "headerPosition": {
            "type": "number",
            "format": "float",
            "default": 0
          },
          "style": {
            "type": "string"
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pageOrientation": {
            "type": "string",
            "enum": [
              "Portrait",
              "Landscape"
            ],
            "default": "Portrait"
          },
          "pageFormat": {
            "type": "string",
            "enum": [
              "A3",
              "A4",
              "A5",
              "A6",
              "A7",
              "Custom"
            ],
            "default": "A4"
          },
          "pageWidth": {
            "type": "number",
            "format": "float"
          },
          "pageHeight": {
            "type": "number",
            "format": "float"
          },
          "fontFace": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "description": "Input data for creating/updating Template",
        "required": [
          "name",
          "entityType"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of user who last modified this record",
            "readOnly": true
          },
          "userName": {
            "type": "string",
            "description": true,
            "maxLength": 50,
            "required": true
          },
          "name": {
            "type": "object",
            "description": "Name/title of the record"
          },
          "type": {
            "type": "string",
            "enum": [
              "regular",
              "admin",
              "portal",
              "system",
              "super-admin",
              "api"
            ],
            "maxLength": 24,
            "default": "regular"
          },
          "password": {
            "type": "string",
            "format": "password",
            "writeOnly": true,
            "maxLength": 150
          },
          "passwordConfirm": {
            "type": "string",
            "format": "password",
            "writeOnly": true,
            "maxLength": 150,
            "readOnly": true
          },
          "authMethod": {
            "type": "string",
            "enum": [
              "",
              "ApiKey",
              "Hmac"
            ],
            "maxLength": 24
          },
          "apiKey": {
            "type": "string",
            "maxLength": 100,
            "readOnly": true
          },
          "secretKey": {
            "type": "string",
            "maxLength": 100,
            "readOnly": true
          },
          "salutationName": {
            "type": "string",
            "enum": [
              "",
              "Mr.",
              "Ms.",
              "Mrs.",
              "Dr."
            ]
          },
          "firstName": {
            "type": "string",
            "maxLength": 100
          },
          "lastName": {
            "type": "string",
            "maxLength": 100,
            "required": true
          },
          "isActive": {
            "type": "boolean",
            "description": true,
            "default": true
          },
          "title": {
            "type": "string",
            "maxLength": 100
          },
          "position": {
            "type": "string",
            "maxLength": 100,
            "readOnly": true
          },
          "emailAddress": {
            "type": "string",
            "format": "email"
          },
          "phoneNumber": {
            "type": "string"
          },
          "token": {
            "type": "string",
            "readOnly": true
          },
          "authTokenId": {
            "type": "string",
            "readOnly": true
          },
          "authLogRecordId": {
            "type": "string",
            "readOnly": true
          },
          "ipAddress": {
            "type": "string",
            "readOnly": true
          },
          "defaultTeam": {
            "type": "string",
            "description": true
          },
          "acceptanceStatus": {
            "type": "string",
            "readOnly": true
          },
          "acceptanceStatusMeetings": {
            "type": "string",
            "readOnly": true
          },
          "acceptanceStatusCalls": {
            "type": "string",
            "readOnly": true
          },
          "teamRole": {
            "type": "string",
            "readOnly": true
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": true,
            "default": "javascript: return {teamsIds: []}"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": true
          },
          "portals": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": true
          },
          "portalRoles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": true
          },
          "contact": {
            "type": "string",
            "description": "ID of related entity"
          },
          "accounts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "account": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "portal": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "avatar": {
            "type": "string",
            "description": "Image ID"
          },
          "avatarColor": {
            "type": "string",
            "pattern": "^#[0-9A-Fa-f]{6}$"
          },
          "sendAccessInfo": {
            "type": "boolean",
            "readOnly": true
          },
          "gender": {
            "type": "string",
            "enum": [
              "",
              "Male",
              "Female",
              "Neutral"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "dashboardTemplate": {
            "type": "string",
            "description": "ID of related entity"
          },
          "workingTimeCalendar": {
            "type": "string",
            "description": "ID of related entity"
          },
          "layoutSet": {
            "type": "string",
            "description": true
          },
          "auth2FA": {
            "type": "string",
            "readOnly": true,
            "description": "Foreign field value"
          },
          "userData": {
            "type": "string"
          },
          "lastAccess": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "emailAddressList": {
            "type": "array",
            "readOnly": true
          },
          "userEmailAddressList": {
            "type": "array",
            "readOnly": true
          },
          "excludeFromReplyEmailAddressList": {
            "type": "array",
            "readOnly": true
          },
          "recordAccessLevels": {
            "type": "object",
            "readOnly": true
          },
          "targetListIsOptedOut": {
            "type": "boolean",
            "readOnly": true
          },
          "middleName": {
            "type": "string",
            "maxLength": 100
          },
          "emailAddressIsOptedOut": {
            "type": "boolean",
            "readOnly": true
          },
          "emailAddressIsInvalid": {
            "type": "boolean",
            "readOnly": true
          },
          "phoneNumberIsOptedOut": {
            "type": "boolean",
            "readOnly": true
          },
          "phoneNumberIsInvalid": {
            "type": "boolean",
            "readOnly": true
          },
          "deleteId": {
            "type": "string",
            "maxLength": 17,
            "readOnly": true,
            "default": "0"
          }
        },
        "description": "User entity",
        "required": [
          "userName",
          "lastName"
        ]
      },
      "UserInput": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "description": true,
            "maxLength": 50,
            "required": true
          },
          "name": {
            "type": "object",
            "description": "Name/title of the record"
          },
          "type": {
            "type": "string",
            "enum": [
              "regular",
              "admin",
              "portal",
              "system",
              "super-admin",
              "api"
            ],
            "maxLength": 24,
            "default": "regular"
          },
          "password": {
            "type": "string",
            "format": "password",
            "writeOnly": true,
            "maxLength": 150
          },
          "authMethod": {
            "type": "string",
            "enum": [
              "",
              "ApiKey",
              "Hmac"
            ],
            "maxLength": 24
          },
          "salutationName": {
            "type": "string",
            "enum": [
              "",
              "Mr.",
              "Ms.",
              "Mrs.",
              "Dr."
            ]
          },
          "firstName": {
            "type": "string",
            "maxLength": 100
          },
          "lastName": {
            "type": "string",
            "maxLength": 100,
            "required": true
          },
          "isActive": {
            "type": "boolean",
            "description": true,
            "default": true
          },
          "title": {
            "type": "string",
            "maxLength": 100
          },
          "emailAddress": {
            "type": "string",
            "format": "email"
          },
          "phoneNumber": {
            "type": "string"
          },
          "defaultTeam": {
            "type": "string",
            "description": true
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": true,
            "default": "javascript: return {teamsIds: []}"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": true
          },
          "portals": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": true
          },
          "portalRoles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": true
          },
          "contact": {
            "type": "string",
            "description": "ID of related entity"
          },
          "accounts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "avatar": {
            "type": "string",
            "description": "Image ID"
          },
          "avatarColor": {
            "type": "string",
            "pattern": "^#[0-9A-Fa-f]{6}$"
          },
          "gender": {
            "type": "string",
            "enum": [
              "",
              "Male",
              "Female",
              "Neutral"
            ]
          },
          "dashboardTemplate": {
            "type": "string",
            "description": "ID of related entity"
          },
          "workingTimeCalendar": {
            "type": "string",
            "description": "ID of related entity"
          },
          "layoutSet": {
            "type": "string",
            "description": true
          },
          "userData": {
            "type": "string"
          },
          "middleName": {
            "type": "string",
            "maxLength": 100
          }
        },
        "description": "Input data for creating/updating User",
        "required": [
          "userName",
          "lastName"
        ]
      },
      "Webhook": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of the Webhook"
          },
          "event": {
            "type": "string",
            "maxLength": 100,
            "required": true
          },
          "url": {
            "type": "string",
            "maxLength": 512,
            "required": true
          },
          "isActive": {
            "type": "boolean",
            "default": true
          },
          "user": {
            "type": "string",
            "description": "ID of related entity"
          },
          "entityType": {
            "type": "string",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "enum": [
              "create",
              "update",
              "fieldUpdate",
              "delete"
            ],
            "readOnly": true
          },
          "field": {
            "type": "string",
            "readOnly": true
          },
          "secretKey": {
            "type": "string",
            "maxLength": 100,
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          }
        },
        "description": "Webhook entity",
        "required": [
          "event",
          "url"
        ]
      },
      "WebhookInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the Webhook"
          },
          "event": {
            "type": "string",
            "maxLength": 100,
            "required": true
          },
          "url": {
            "type": "string",
            "maxLength": 512,
            "required": true
          },
          "isActive": {
            "type": "boolean",
            "default": true
          },
          "user": {
            "type": "string",
            "description": "ID of related entity"
          }
        },
        "description": "Input data for creating/updating Webhook",
        "required": [
          "event",
          "url"
        ]
      },
      "WorkingTimeCalendar": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "description": {
            "type": "string"
          },
          "timeZone": {
            "type": "string",
            "default": ""
          },
          "timeRanges": {
            "type": "array",
            "required": true,
            "default": [
              [
                "9:00",
                "17:00"
              ]
            ]
          },
          "weekday0": {
            "type": "boolean",
            "default": false
          },
          "weekday1": {
            "type": "boolean",
            "default": true
          },
          "weekday2": {
            "type": "boolean",
            "default": true
          },
          "weekday3": {
            "type": "boolean",
            "default": true
          },
          "weekday4": {
            "type": "boolean",
            "default": true
          },
          "weekday5": {
            "type": "boolean",
            "default": true
          },
          "weekday6": {
            "type": "boolean",
            "default": false
          },
          "weekday0TimeRanges": {
            "type": "array",
            "default": null
          },
          "weekday1TimeRanges": {
            "type": "array",
            "default": null
          },
          "weekday2TimeRanges": {
            "type": "array",
            "default": null
          },
          "weekday3TimeRanges": {
            "type": "array",
            "default": null
          },
          "weekday4TimeRanges": {
            "type": "array",
            "default": null
          },
          "weekday5TimeRanges": {
            "type": "array",
            "default": null
          },
          "weekday6TimeRanges": {
            "type": "array",
            "default": null
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          }
        },
        "description": "WorkingTimeCalendar entity",
        "required": [
          "name",
          "timeRanges"
        ]
      },
      "WorkingTimeCalendarInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name/title of the record",
            "required": true
          },
          "description": {
            "type": "string"
          },
          "timeZone": {
            "type": "string",
            "default": ""
          },
          "timeRanges": {
            "type": "array",
            "required": true,
            "default": [
              [
                "9:00",
                "17:00"
              ]
            ]
          },
          "weekday0": {
            "type": "boolean",
            "default": false
          },
          "weekday1": {
            "type": "boolean",
            "default": true
          },
          "weekday2": {
            "type": "boolean",
            "default": true
          },
          "weekday3": {
            "type": "boolean",
            "default": true
          },
          "weekday4": {
            "type": "boolean",
            "default": true
          },
          "weekday5": {
            "type": "boolean",
            "default": true
          },
          "weekday6": {
            "type": "boolean",
            "default": false
          },
          "weekday0TimeRanges": {
            "type": "array",
            "default": null
          },
          "weekday1TimeRanges": {
            "type": "array",
            "default": null
          },
          "weekday2TimeRanges": {
            "type": "array",
            "default": null
          },
          "weekday3TimeRanges": {
            "type": "array",
            "default": null
          },
          "weekday4TimeRanges": {
            "type": "array",
            "default": null
          },
          "weekday5TimeRanges": {
            "type": "array",
            "default": null
          },
          "weekday6TimeRanges": {
            "type": "array",
            "default": null
          }
        },
        "description": "Input data for creating/updating WorkingTimeCalendar",
        "required": [
          "name",
          "timeRanges"
        ]
      },
      "WorkingTimeRange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "readOnly": true
          },
          "timeRanges": {
            "type": "array",
            "default": null
          },
          "dateStart": {
            "type": "string",
            "format": "date",
            "required": true
          },
          "dateEnd": {
            "type": "string",
            "format": "date",
            "required": true
          },
          "type": {
            "type": "string",
            "enum": [
              "Non-working",
              "Working"
            ],
            "maxLength": 11,
            "default": "Non-working"
          },
          "name": {
            "type": "string",
            "description": "Name/title of the record"
          },
          "description": {
            "type": "string"
          },
          "calendars": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": true
          },
          "users": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "readOnly": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "ID of related entity",
            "readOnly": true
          }
        },
        "description": "WorkingTimeRange entity",
        "required": [
          "dateStart",
          "dateEnd"
        ]
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Api-Key",
        "description": "API Key authentication"
      },
      "BasicAuth": {
        "type": "http",
        "scheme": "basic",
        "description": "Basic HTTP authentication"
      }
    },
    "parameters": {
      "offset": {
        "name": "offset",
        "in": "query",
        "description": "Offset for pagination",
        "schema": {
          "type": "integer",
          "minimum": 0,
          "default": 0
        }
      },
      "maxSize": {
        "name": "maxSize",
        "in": "query",
        "description": "Maximum number of records to return",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 200,
          "default": 20
        }
      },
      "orderBy": {
        "name": "orderBy",
        "in": "query",
        "description": "Field to order by",
        "schema": {
          "type": "string"
        }
      },
      "order": {
        "name": "order",
        "in": "query",
        "description": "Sort order",
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ],
          "default": "asc"
        }
      },
      "where": {
        "name": "where",
        "in": "query",
        "description": "Search conditions (JSON array)",
        "schema": {
          "type": "string"
        }
      },
      "select": {
        "name": "select",
        "in": "query",
        "description": "Fields to select (comma-separated)",
        "schema": {
          "type": "string"
        }
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    },
    {
      "BasicAuth": []
    }
  ]
}