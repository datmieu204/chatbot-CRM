{
  "entities": {
    "ActionHistoryRecord": {
      "name": "ActionHistoryRecord",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/ActionHistoryRecord",
          "summary": "Get list of ActionHistoryRecord",
          "tags": [
            "ActionHistoryRecord"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of ActionHistoryRecord",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ActionHistoryRecord"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/ActionHistoryRecord",
          "summary": "Create a new ActionHistoryRecord",
          "tags": [
            "ActionHistoryRecord"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionHistoryRecord"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "ActionHistoryRecord created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/ActionHistoryRecord/{id}",
          "summary": "Get ActionHistoryRecord by ID",
          "tags": [
            "ActionHistoryRecord"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "ActionHistoryRecord details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ActionHistoryRecord"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/ActionHistoryRecord/{id}",
          "summary": "Update ActionHistoryRecord by ID",
          "tags": [
            "ActionHistoryRecord"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionHistoryRecord"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "ActionHistoryRecord updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/ActionHistoryRecord/{id}",
          "summary": "Delete ActionHistoryRecord by ID",
          "tags": [
            "ActionHistoryRecord"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "ActionHistoryRecord deleted",
              "content": {}
            }
          }
        }
      }
    },
    "AddressCountry": {
      "name": "AddressCountry",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/AddressCountry",
          "summary": "Get list of AddressCountry",
          "tags": [
            "AddressCountry"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of AddressCountry",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/AddressCountry"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/AddressCountry",
          "summary": "Create a new AddressCountry",
          "tags": [
            "AddressCountry"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressCountry"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "AddressCountry created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/AddressCountry/{id}",
          "summary": "Get AddressCountry by ID",
          "tags": [
            "AddressCountry"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "AddressCountry details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AddressCountry"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/AddressCountry/{id}",
          "summary": "Update AddressCountry by ID",
          "tags": [
            "AddressCountry"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressCountry"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "AddressCountry updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/AddressCountry/{id}",
          "summary": "Delete AddressCountry by ID",
          "tags": [
            "AddressCountry"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "AddressCountry deleted",
              "content": {}
            }
          }
        }
      }
    },
    "AppLogRecord": {
      "name": "AppLogRecord",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/AppLogRecord",
          "summary": "Get list of AppLogRecord",
          "tags": [
            "AppLogRecord"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of AppLogRecord",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/AppLogRecord"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/AppLogRecord",
          "summary": "Create a new AppLogRecord",
          "tags": [
            "AppLogRecord"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppLogRecord"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "AppLogRecord created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/AppLogRecord/{id}",
          "summary": "Get AppLogRecord by ID",
          "tags": [
            "AppLogRecord"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "AppLogRecord details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AppLogRecord"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/AppLogRecord/{id}",
          "summary": "Update AppLogRecord by ID",
          "tags": [
            "AppLogRecord"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppLogRecord"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "AppLogRecord updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/AppLogRecord/{id}",
          "summary": "Delete AppLogRecord by ID",
          "tags": [
            "AppLogRecord"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "AppLogRecord deleted",
              "content": {}
            }
          }
        }
      }
    },
    "AppSecret": {
      "name": "AppSecret",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/AppSecret",
          "summary": "Get list of AppSecret",
          "tags": [
            "AppSecret"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of AppSecret",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/AppSecret"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/AppSecret",
          "summary": "Create a new AppSecret",
          "tags": [
            "AppSecret"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppSecret"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "AppSecret created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/AppSecret/{id}",
          "summary": "Get AppSecret by ID",
          "tags": [
            "AppSecret"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "AppSecret details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AppSecret"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/AppSecret/{id}",
          "summary": "Update AppSecret by ID",
          "tags": [
            "AppSecret"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppSecret"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "AppSecret updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/AppSecret/{id}",
          "summary": "Delete AppSecret by ID",
          "tags": [
            "AppSecret"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "AppSecret deleted",
              "content": {}
            }
          }
        }
      }
    },
    "ArrayValue": {
      "name": "ArrayValue",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/ArrayValue",
          "summary": "Get list of ArrayValue",
          "tags": [
            "ArrayValue"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of ArrayValue",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ArrayValue"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/ArrayValue",
          "summary": "Create a new ArrayValue",
          "tags": [
            "ArrayValue"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayValue"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "ArrayValue created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/ArrayValue/{id}",
          "summary": "Get ArrayValue by ID",
          "tags": [
            "ArrayValue"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "ArrayValue details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ArrayValue"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/ArrayValue/{id}",
          "summary": "Update ArrayValue by ID",
          "tags": [
            "ArrayValue"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayValue"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "ArrayValue updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/ArrayValue/{id}",
          "summary": "Delete ArrayValue by ID",
          "tags": [
            "ArrayValue"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "ArrayValue deleted",
              "content": {}
            }
          }
        }
      }
    },
    "Attachment": {
      "name": "Attachment",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/Attachment",
          "summary": "Get list of Attachment",
          "tags": [
            "Attachment"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of Attachment",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Attachment"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/Attachment",
          "summary": "Create a new Attachment",
          "tags": [
            "Attachment"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Attachment created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/Attachment/{id}",
          "summary": "Get Attachment by ID",
          "tags": [
            "Attachment"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "Attachment details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Attachment"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/Attachment/{id}",
          "summary": "Update Attachment by ID",
          "tags": [
            "Attachment"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Attachment updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/Attachment/{id}",
          "summary": "Delete Attachment by ID",
          "tags": [
            "Attachment"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "Attachment deleted",
              "content": {}
            }
          }
        }
      }
    },
    "AuthLogRecord": {
      "name": "AuthLogRecord",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/AuthLogRecord",
          "summary": "Get list of AuthLogRecord",
          "tags": [
            "AuthLogRecord"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of AuthLogRecord",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/AuthLogRecord"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/AuthLogRecord",
          "summary": "Create a new AuthLogRecord",
          "tags": [
            "AuthLogRecord"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthLogRecord"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "AuthLogRecord created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/AuthLogRecord/{id}",
          "summary": "Get AuthLogRecord by ID",
          "tags": [
            "AuthLogRecord"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "AuthLogRecord details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AuthLogRecord"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/AuthLogRecord/{id}",
          "summary": "Update AuthLogRecord by ID",
          "tags": [
            "AuthLogRecord"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthLogRecord"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "AuthLogRecord updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/AuthLogRecord/{id}",
          "summary": "Delete AuthLogRecord by ID",
          "tags": [
            "AuthLogRecord"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "AuthLogRecord deleted",
              "content": {}
            }
          }
        }
      }
    },
    "AuthToken": {
      "name": "AuthToken",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/AuthToken",
          "summary": "Get list of AuthToken",
          "tags": [
            "AuthToken"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of AuthToken",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/AuthToken"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/AuthToken",
          "summary": "Create a new AuthToken",
          "tags": [
            "AuthToken"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthToken"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "AuthToken created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/AuthToken/{id}",
          "summary": "Get AuthToken by ID",
          "tags": [
            "AuthToken"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "AuthToken details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AuthToken"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/AuthToken/{id}",
          "summary": "Update AuthToken by ID",
          "tags": [
            "AuthToken"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthToken"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "AuthToken updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/AuthToken/{id}",
          "summary": "Delete AuthToken by ID",
          "tags": [
            "AuthToken"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "AuthToken deleted",
              "content": {}
            }
          }
        }
      }
    },
    "AuthenticationProvider": {
      "name": "AuthenticationProvider",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/AuthenticationProvider",
          "summary": "Get list of AuthenticationProvider",
          "tags": [
            "AuthenticationProvider"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of AuthenticationProvider",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/AuthenticationProvider"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/AuthenticationProvider",
          "summary": "Create a new AuthenticationProvider",
          "tags": [
            "AuthenticationProvider"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationProvider"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "AuthenticationProvider created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/AuthenticationProvider/{id}",
          "summary": "Get AuthenticationProvider by ID",
          "tags": [
            "AuthenticationProvider"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "AuthenticationProvider details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AuthenticationProvider"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/AuthenticationProvider/{id}",
          "summary": "Update AuthenticationProvider by ID",
          "tags": [
            "AuthenticationProvider"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationProvider"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "AuthenticationProvider updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/AuthenticationProvider/{id}",
          "summary": "Delete AuthenticationProvider by ID",
          "tags": [
            "AuthenticationProvider"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "AuthenticationProvider deleted",
              "content": {}
            }
          }
        }
      }
    },
    "Autofollow": {
      "name": "Autofollow",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/Autofollow",
          "summary": "Get list of Autofollow",
          "tags": [
            "Autofollow"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of Autofollow",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Autofollow"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/Autofollow",
          "summary": "Create a new Autofollow",
          "tags": [
            "Autofollow"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Autofollow"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Autofollow created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/Autofollow/{id}",
          "summary": "Get Autofollow by ID",
          "tags": [
            "Autofollow"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "Autofollow details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Autofollow"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/Autofollow/{id}",
          "summary": "Update Autofollow by ID",
          "tags": [
            "Autofollow"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Autofollow"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Autofollow updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/Autofollow/{id}",
          "summary": "Delete Autofollow by ID",
          "tags": [
            "Autofollow"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "Autofollow deleted",
              "content": {}
            }
          }
        }
      }
    },
    "Currency": {
      "name": "Currency",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/Currency",
          "summary": "Get list of Currency",
          "tags": [
            "Currency"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of Currency",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Currency"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/Currency",
          "summary": "Create a new Currency",
          "tags": [
            "Currency"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Currency created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/Currency/{id}",
          "summary": "Get Currency by ID",
          "tags": [
            "Currency"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "Currency details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Currency"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/Currency/{id}",
          "summary": "Update Currency by ID",
          "tags": [
            "Currency"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Currency updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/Currency/{id}",
          "summary": "Delete Currency by ID",
          "tags": [
            "Currency"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "Currency deleted",
              "content": {}
            }
          }
        }
      }
    },
    "DashboardTemplate": {
      "name": "DashboardTemplate",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/DashboardTemplate",
          "summary": "Get list of DashboardTemplate",
          "tags": [
            "DashboardTemplate"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of DashboardTemplate",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DashboardTemplate"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/DashboardTemplate",
          "summary": "Create a new DashboardTemplate",
          "tags": [
            "DashboardTemplate"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardTemplate"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "DashboardTemplate created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/DashboardTemplate/{id}",
          "summary": "Get DashboardTemplate by ID",
          "tags": [
            "DashboardTemplate"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "DashboardTemplate details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DashboardTemplate"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/DashboardTemplate/{id}",
          "summary": "Update DashboardTemplate by ID",
          "tags": [
            "DashboardTemplate"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardTemplate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "DashboardTemplate updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/DashboardTemplate/{id}",
          "summary": "Delete DashboardTemplate by ID",
          "tags": [
            "DashboardTemplate"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "DashboardTemplate deleted",
              "content": {}
            }
          }
        }
      }
    },
    "Email": {
      "name": "Email",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/Email",
          "summary": "Get list of Email",
          "tags": [
            "Email"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of Email",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Email"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/Email",
          "summary": "Create a new Email",
          "tags": [
            "Email"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Email created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/Email/{id}",
          "summary": "Get Email by ID",
          "tags": [
            "Email"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "Email details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Email"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/Email/{id}",
          "summary": "Update Email by ID",
          "tags": [
            "Email"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Email updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/Email/{id}",
          "summary": "Delete Email by ID",
          "tags": [
            "Email"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "Email deleted",
              "content": {}
            }
          }
        }
      }
    },
    "EmailAccount": {
      "name": "EmailAccount",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/EmailAccount",
          "summary": "Get list of EmailAccount",
          "tags": [
            "EmailAccount"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of EmailAccount",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/EmailAccount"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/EmailAccount",
          "summary": "Create a new EmailAccount",
          "tags": [
            "EmailAccount"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailAccount"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "EmailAccount created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/EmailAccount/{id}",
          "summary": "Get EmailAccount by ID",
          "tags": [
            "EmailAccount"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "EmailAccount details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EmailAccount"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/EmailAccount/{id}",
          "summary": "Update EmailAccount by ID",
          "tags": [
            "EmailAccount"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailAccount"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "EmailAccount updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/EmailAccount/{id}",
          "summary": "Delete EmailAccount by ID",
          "tags": [
            "EmailAccount"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "EmailAccount deleted",
              "content": {}
            }
          }
        }
      }
    },
    "EmailAddress": {
      "name": "EmailAddress",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/EmailAddress",
          "summary": "Get list of EmailAddress",
          "tags": [
            "EmailAddress"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of EmailAddress",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/EmailAddress"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/EmailAddress",
          "summary": "Create a new EmailAddress",
          "tags": [
            "EmailAddress"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailAddress"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "EmailAddress created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/EmailAddress/{id}",
          "summary": "Get EmailAddress by ID",
          "tags": [
            "EmailAddress"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "EmailAddress details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EmailAddress"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/EmailAddress/{id}",
          "summary": "Update EmailAddress by ID",
          "tags": [
            "EmailAddress"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailAddress"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "EmailAddress updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/EmailAddress/{id}",
          "summary": "Delete EmailAddress by ID",
          "tags": [
            "EmailAddress"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "EmailAddress deleted",
              "content": {}
            }
          }
        }
      }
    },
    "EmailFilter": {
      "name": "EmailFilter",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/EmailFilter",
          "summary": "Get list of EmailFilter",
          "tags": [
            "EmailFilter"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of EmailFilter",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/EmailFilter"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/EmailFilter",
          "summary": "Create a new EmailFilter",
          "tags": [
            "EmailFilter"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailFilter"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "EmailFilter created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/EmailFilter/{id}",
          "summary": "Get EmailFilter by ID",
          "tags": [
            "EmailFilter"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "EmailFilter details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EmailFilter"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/EmailFilter/{id}",
          "summary": "Update EmailFilter by ID",
          "tags": [
            "EmailFilter"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailFilter"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "EmailFilter updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/EmailFilter/{id}",
          "summary": "Delete EmailFilter by ID",
          "tags": [
            "EmailFilter"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "EmailFilter deleted",
              "content": {}
            }
          }
        }
      }
    },
    "EmailFolder": {
      "name": "EmailFolder",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/EmailFolder",
          "summary": "Get list of EmailFolder",
          "tags": [
            "EmailFolder"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of EmailFolder",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/EmailFolder"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/EmailFolder",
          "summary": "Create a new EmailFolder",
          "tags": [
            "EmailFolder"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailFolder"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "EmailFolder created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/EmailFolder/{id}",
          "summary": "Get EmailFolder by ID",
          "tags": [
            "EmailFolder"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "EmailFolder details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EmailFolder"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/EmailFolder/{id}",
          "summary": "Update EmailFolder by ID",
          "tags": [
            "EmailFolder"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailFolder"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "EmailFolder updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/EmailFolder/{id}",
          "summary": "Delete EmailFolder by ID",
          "tags": [
            "EmailFolder"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "EmailFolder deleted",
              "content": {}
            }
          }
        }
      }
    },
    "EmailTemplate": {
      "name": "EmailTemplate",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/EmailTemplate",
          "summary": "Get list of EmailTemplate",
          "tags": [
            "EmailTemplate"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of EmailTemplate",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/EmailTemplate"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/EmailTemplate",
          "summary": "Create a new EmailTemplate",
          "tags": [
            "EmailTemplate"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplate"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "EmailTemplate created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/EmailTemplate/{id}",
          "summary": "Get EmailTemplate by ID",
          "tags": [
            "EmailTemplate"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "EmailTemplate details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EmailTemplate"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/EmailTemplate/{id}",
          "summary": "Update EmailTemplate by ID",
          "tags": [
            "EmailTemplate"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "EmailTemplate updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/EmailTemplate/{id}",
          "summary": "Delete EmailTemplate by ID",
          "tags": [
            "EmailTemplate"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "EmailTemplate deleted",
              "content": {}
            }
          }
        }
      }
    },
    "EmailTemplateCategory": {
      "name": "EmailTemplateCategory",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/EmailTemplateCategory",
          "summary": "Get list of EmailTemplateCategory",
          "tags": [
            "EmailTemplateCategory"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of EmailTemplateCategory",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/EmailTemplateCategory"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/EmailTemplateCategory",
          "summary": "Create a new EmailTemplateCategory",
          "tags": [
            "EmailTemplateCategory"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplateCategory"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "EmailTemplateCategory created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/EmailTemplateCategory/{id}",
          "summary": "Get EmailTemplateCategory by ID",
          "tags": [
            "EmailTemplateCategory"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "EmailTemplateCategory details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EmailTemplateCategory"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/EmailTemplateCategory/{id}",
          "summary": "Update EmailTemplateCategory by ID",
          "tags": [
            "EmailTemplateCategory"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplateCategory"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "EmailTemplateCategory updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/EmailTemplateCategory/{id}",
          "summary": "Delete EmailTemplateCategory by ID",
          "tags": [
            "EmailTemplateCategory"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "EmailTemplateCategory deleted",
              "content": {}
            }
          }
        }
      }
    },
    "Export": {
      "name": "Export",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/Export",
          "summary": "Get list of Export",
          "tags": [
            "Export"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of Export",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Export"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/Export",
          "summary": "Create a new Export",
          "tags": [
            "Export"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Export"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Export created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/Export/{id}",
          "summary": "Get Export by ID",
          "tags": [
            "Export"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "Export details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Export"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/Export/{id}",
          "summary": "Update Export by ID",
          "tags": [
            "Export"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Export"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Export updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/Export/{id}",
          "summary": "Delete Export by ID",
          "tags": [
            "Export"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "Export deleted",
              "content": {}
            }
          }
        }
      }
    },
    "Extension": {
      "name": "Extension",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/Extension",
          "summary": "Get list of Extension",
          "tags": [
            "Extension"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of Extension",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Extension"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/Extension",
          "summary": "Create a new Extension",
          "tags": [
            "Extension"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Extension created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/Extension/{id}",
          "summary": "Get Extension by ID",
          "tags": [
            "Extension"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "Extension details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Extension"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/Extension/{id}",
          "summary": "Update Extension by ID",
          "tags": [
            "Extension"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Extension updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/Extension/{id}",
          "summary": "Delete Extension by ID",
          "tags": [
            "Extension"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "Extension deleted",
              "content": {}
            }
          }
        }
      }
    },
    "ExternalAccount": {
      "name": "ExternalAccount",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/ExternalAccount",
          "summary": "Get list of ExternalAccount",
          "tags": [
            "ExternalAccount"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of ExternalAccount",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ExternalAccount"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/ExternalAccount",
          "summary": "Create a new ExternalAccount",
          "tags": [
            "ExternalAccount"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalAccount"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "ExternalAccount created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/ExternalAccount/{id}",
          "summary": "Get ExternalAccount by ID",
          "tags": [
            "ExternalAccount"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "ExternalAccount details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ExternalAccount"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/ExternalAccount/{id}",
          "summary": "Update ExternalAccount by ID",
          "tags": [
            "ExternalAccount"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalAccount"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "ExternalAccount updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/ExternalAccount/{id}",
          "summary": "Delete ExternalAccount by ID",
          "tags": [
            "ExternalAccount"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "ExternalAccount deleted",
              "content": {}
            }
          }
        }
      }
    },
    "GroupEmailFolder": {
      "name": "GroupEmailFolder",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/GroupEmailFolder",
          "summary": "Get list of GroupEmailFolder",
          "tags": [
            "GroupEmailFolder"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of GroupEmailFolder",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/GroupEmailFolder"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/GroupEmailFolder",
          "summary": "Create a new GroupEmailFolder",
          "tags": [
            "GroupEmailFolder"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupEmailFolder"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "GroupEmailFolder created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/GroupEmailFolder/{id}",
          "summary": "Get GroupEmailFolder by ID",
          "tags": [
            "GroupEmailFolder"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "GroupEmailFolder details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GroupEmailFolder"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/GroupEmailFolder/{id}",
          "summary": "Update GroupEmailFolder by ID",
          "tags": [
            "GroupEmailFolder"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupEmailFolder"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "GroupEmailFolder updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/GroupEmailFolder/{id}",
          "summary": "Delete GroupEmailFolder by ID",
          "tags": [
            "GroupEmailFolder"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "GroupEmailFolder deleted",
              "content": {}
            }
          }
        }
      }
    },
    "Import": {
      "name": "Import",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/Import",
          "summary": "Get list of Import",
          "tags": [
            "Import"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of Import",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Import"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/Import",
          "summary": "Create a new Import",
          "tags": [
            "Import"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Import"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Import created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/Import/{id}",
          "summary": "Get Import by ID",
          "tags": [
            "Import"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "Import details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Import"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/Import/{id}",
          "summary": "Update Import by ID",
          "tags": [
            "Import"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Import"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Import updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/Import/{id}",
          "summary": "Delete Import by ID",
          "tags": [
            "Import"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "Import deleted",
              "content": {}
            }
          }
        }
      }
    },
    "ImportEml": {
      "name": "ImportEml",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/ImportEml",
          "summary": "Get list of ImportEml",
          "tags": [
            "ImportEml"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of ImportEml",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ImportEml"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/ImportEml",
          "summary": "Create a new ImportEml",
          "tags": [
            "ImportEml"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportEml"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "ImportEml created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/ImportEml/{id}",
          "summary": "Get ImportEml by ID",
          "tags": [
            "ImportEml"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "ImportEml details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ImportEml"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/ImportEml/{id}",
          "summary": "Update ImportEml by ID",
          "tags": [
            "ImportEml"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportEml"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "ImportEml updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/ImportEml/{id}",
          "summary": "Delete ImportEml by ID",
          "tags": [
            "ImportEml"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "ImportEml deleted",
              "content": {}
            }
          }
        }
      }
    },
    "ImportEntity": {
      "name": "ImportEntity",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/ImportEntity",
          "summary": "Get list of ImportEntity",
          "tags": [
            "ImportEntity"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of ImportEntity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ImportEntity"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/ImportEntity",
          "summary": "Create a new ImportEntity",
          "tags": [
            "ImportEntity"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportEntity"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "ImportEntity created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/ImportEntity/{id}",
          "summary": "Get ImportEntity by ID",
          "tags": [
            "ImportEntity"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "ImportEntity details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ImportEntity"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/ImportEntity/{id}",
          "summary": "Update ImportEntity by ID",
          "tags": [
            "ImportEntity"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportEntity"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "ImportEntity updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/ImportEntity/{id}",
          "summary": "Delete ImportEntity by ID",
          "tags": [
            "ImportEntity"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "ImportEntity deleted",
              "content": {}
            }
          }
        }
      }
    },
    "ImportError": {
      "name": "ImportError",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/ImportError",
          "summary": "Get list of ImportError",
          "tags": [
            "ImportError"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of ImportError",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ImportError"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/ImportError",
          "summary": "Create a new ImportError",
          "tags": [
            "ImportError"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportError"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "ImportError created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/ImportError/{id}",
          "summary": "Get ImportError by ID",
          "tags": [
            "ImportError"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "ImportError details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ImportError"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/ImportError/{id}",
          "summary": "Update ImportError by ID",
          "tags": [
            "ImportError"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportError"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "ImportError updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/ImportError/{id}",
          "summary": "Delete ImportError by ID",
          "tags": [
            "ImportError"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "ImportError deleted",
              "content": {}
            }
          }
        }
      }
    },
    "InboundEmail": {
      "name": "InboundEmail",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/InboundEmail",
          "summary": "Get list of InboundEmail",
          "tags": [
            "InboundEmail"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of InboundEmail",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/InboundEmail"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/InboundEmail",
          "summary": "Create a new InboundEmail",
          "tags": [
            "InboundEmail"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboundEmail"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "InboundEmail created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/InboundEmail/{id}",
          "summary": "Get InboundEmail by ID",
          "tags": [
            "InboundEmail"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "InboundEmail details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/InboundEmail"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/InboundEmail/{id}",
          "summary": "Update InboundEmail by ID",
          "tags": [
            "InboundEmail"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboundEmail"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "InboundEmail updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/InboundEmail/{id}",
          "summary": "Delete InboundEmail by ID",
          "tags": [
            "InboundEmail"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "InboundEmail deleted",
              "content": {}
            }
          }
        }
      }
    },
    "Integration": {
      "name": "Integration",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/Integration",
          "summary": "Get list of Integration",
          "tags": [
            "Integration"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of Integration",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Integration"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/Integration",
          "summary": "Create a new Integration",
          "tags": [
            "Integration"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Integration created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/Integration/{id}",
          "summary": "Get Integration by ID",
          "tags": [
            "Integration"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "Integration details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Integration"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/Integration/{id}",
          "summary": "Update Integration by ID",
          "tags": [
            "Integration"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Integration updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/Integration/{id}",
          "summary": "Delete Integration by ID",
          "tags": [
            "Integration"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "Integration deleted",
              "content": {}
            }
          }
        }
      }
    },
    "Job": {
      "name": "Job",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/Job",
          "summary": "Get list of Job",
          "tags": [
            "Job"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of Job",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Job"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/Job",
          "summary": "Create a new Job",
          "tags": [
            "Job"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Job created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/Job/{id}",
          "summary": "Get Job by ID",
          "tags": [
            "Job"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "Job details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Job"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/Job/{id}",
          "summary": "Update Job by ID",
          "tags": [
            "Job"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Job updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/Job/{id}",
          "summary": "Delete Job by ID",
          "tags": [
            "Job"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "Job deleted",
              "content": {}
            }
          }
        }
      }
    },
    "KanbanOrder": {
      "name": "KanbanOrder",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/KanbanOrder",
          "summary": "Get list of KanbanOrder",
          "tags": [
            "KanbanOrder"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of KanbanOrder",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/KanbanOrder"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/KanbanOrder",
          "summary": "Create a new KanbanOrder",
          "tags": [
            "KanbanOrder"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KanbanOrder"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "KanbanOrder created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/KanbanOrder/{id}",
          "summary": "Get KanbanOrder by ID",
          "tags": [
            "KanbanOrder"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "KanbanOrder details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/KanbanOrder"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/KanbanOrder/{id}",
          "summary": "Update KanbanOrder by ID",
          "tags": [
            "KanbanOrder"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KanbanOrder"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "KanbanOrder updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/KanbanOrder/{id}",
          "summary": "Delete KanbanOrder by ID",
          "tags": [
            "KanbanOrder"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "KanbanOrder deleted",
              "content": {}
            }
          }
        }
      }
    },
    "LayoutRecord": {
      "name": "LayoutRecord",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/LayoutRecord",
          "summary": "Get list of LayoutRecord",
          "tags": [
            "LayoutRecord"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of LayoutRecord",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/LayoutRecord"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/LayoutRecord",
          "summary": "Create a new LayoutRecord",
          "tags": [
            "LayoutRecord"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutRecord"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "LayoutRecord created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/LayoutRecord/{id}",
          "summary": "Get LayoutRecord by ID",
          "tags": [
            "LayoutRecord"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "LayoutRecord details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LayoutRecord"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/LayoutRecord/{id}",
          "summary": "Update LayoutRecord by ID",
          "tags": [
            "LayoutRecord"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutRecord"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "LayoutRecord updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/LayoutRecord/{id}",
          "summary": "Delete LayoutRecord by ID",
          "tags": [
            "LayoutRecord"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "LayoutRecord deleted",
              "content": {}
            }
          }
        }
      }
    },
    "LayoutSet": {
      "name": "LayoutSet",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/LayoutSet",
          "summary": "Get list of LayoutSet",
          "tags": [
            "LayoutSet"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of LayoutSet",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/LayoutSet"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/LayoutSet",
          "summary": "Create a new LayoutSet",
          "tags": [
            "LayoutSet"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutSet"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "LayoutSet created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/LayoutSet/{id}",
          "summary": "Get LayoutSet by ID",
          "tags": [
            "LayoutSet"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "LayoutSet details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LayoutSet"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/LayoutSet/{id}",
          "summary": "Update LayoutSet by ID",
          "tags": [
            "LayoutSet"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutSet"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "LayoutSet updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/LayoutSet/{id}",
          "summary": "Delete LayoutSet by ID",
          "tags": [
            "LayoutSet"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "LayoutSet deleted",
              "content": {}
            }
          }
        }
      }
    },
    "LeadCapture": {
      "name": "LeadCapture",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/LeadCapture",
          "summary": "Get list of LeadCapture",
          "tags": [
            "LeadCapture"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of LeadCapture",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/LeadCapture"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/LeadCapture",
          "summary": "Create a new LeadCapture",
          "tags": [
            "LeadCapture"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeadCapture"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "LeadCapture created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/LeadCapture/{id}",
          "summary": "Get LeadCapture by ID",
          "tags": [
            "LeadCapture"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "LeadCapture details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LeadCapture"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/LeadCapture/{id}",
          "summary": "Update LeadCapture by ID",
          "tags": [
            "LeadCapture"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeadCapture"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "LeadCapture updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/LeadCapture/{id}",
          "summary": "Delete LeadCapture by ID",
          "tags": [
            "LeadCapture"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "LeadCapture deleted",
              "content": {}
            }
          }
        }
      }
    },
    "LeadCaptureLogRecord": {
      "name": "LeadCaptureLogRecord",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/LeadCaptureLogRecord",
          "summary": "Get list of LeadCaptureLogRecord",
          "tags": [
            "LeadCaptureLogRecord"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of LeadCaptureLogRecord",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/LeadCaptureLogRecord"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/LeadCaptureLogRecord",
          "summary": "Create a new LeadCaptureLogRecord",
          "tags": [
            "LeadCaptureLogRecord"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeadCaptureLogRecord"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "LeadCaptureLogRecord created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/LeadCaptureLogRecord/{id}",
          "summary": "Get LeadCaptureLogRecord by ID",
          "tags": [
            "LeadCaptureLogRecord"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "LeadCaptureLogRecord details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LeadCaptureLogRecord"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/LeadCaptureLogRecord/{id}",
          "summary": "Update LeadCaptureLogRecord by ID",
          "tags": [
            "LeadCaptureLogRecord"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeadCaptureLogRecord"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "LeadCaptureLogRecord updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/LeadCaptureLogRecord/{id}",
          "summary": "Delete LeadCaptureLogRecord by ID",
          "tags": [
            "LeadCaptureLogRecord"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "LeadCaptureLogRecord deleted",
              "content": {}
            }
          }
        }
      }
    },
    "MassAction": {
      "name": "MassAction",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/MassAction",
          "summary": "Get list of MassAction",
          "tags": [
            "MassAction"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of MassAction",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/MassAction"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/MassAction",
          "summary": "Create a new MassAction",
          "tags": [
            "MassAction"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MassAction"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "MassAction created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/MassAction/{id}",
          "summary": "Get MassAction by ID",
          "tags": [
            "MassAction"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "MassAction details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/MassAction"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/MassAction/{id}",
          "summary": "Update MassAction by ID",
          "tags": [
            "MassAction"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MassAction"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "MassAction updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/MassAction/{id}",
          "summary": "Delete MassAction by ID",
          "tags": [
            "MassAction"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "MassAction deleted",
              "content": {}
            }
          }
        }
      }
    },
    "NextNumber": {
      "name": "NextNumber",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/NextNumber",
          "summary": "Get list of NextNumber",
          "tags": [
            "NextNumber"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of NextNumber",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/NextNumber"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/NextNumber",
          "summary": "Create a new NextNumber",
          "tags": [
            "NextNumber"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NextNumber"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "NextNumber created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/NextNumber/{id}",
          "summary": "Get NextNumber by ID",
          "tags": [
            "NextNumber"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "NextNumber details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NextNumber"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/NextNumber/{id}",
          "summary": "Update NextNumber by ID",
          "tags": [
            "NextNumber"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NextNumber"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "NextNumber updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/NextNumber/{id}",
          "summary": "Delete NextNumber by ID",
          "tags": [
            "NextNumber"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "NextNumber deleted",
              "content": {}
            }
          }
        }
      }
    },
    "Note": {
      "name": "Note",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/Note",
          "summary": "Get list of Note",
          "tags": [
            "Note"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of Note",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Note"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/Note",
          "summary": "Create a new Note",
          "tags": [
            "Note"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Note"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Note created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/Note/{id}",
          "summary": "Get Note by ID",
          "tags": [
            "Note"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "Note details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/Note/{id}",
          "summary": "Update Note by ID",
          "tags": [
            "Note"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Note"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Note updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/Note/{id}",
          "summary": "Delete Note by ID",
          "tags": [
            "Note"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "Note deleted",
              "content": {}
            }
          }
        }
      }
    },
    "Notification": {
      "name": "Notification",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/Notification",
          "summary": "Get list of Notification",
          "tags": [
            "Notification"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of Notification",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Notification"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/Notification",
          "summary": "Create a new Notification",
          "tags": [
            "Notification"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Notification created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/Notification/{id}",
          "summary": "Get Notification by ID",
          "tags": [
            "Notification"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "Notification details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/Notification/{id}",
          "summary": "Update Notification by ID",
          "tags": [
            "Notification"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Notification updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/Notification/{id}",
          "summary": "Delete Notification by ID",
          "tags": [
            "Notification"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "Notification deleted",
              "content": {}
            }
          }
        }
      }
    },
    "OAuthAccount": {
      "name": "OAuthAccount",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/OAuthAccount",
          "summary": "Get list of OAuthAccount",
          "tags": [
            "OAuthAccount"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of OAuthAccount",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/OAuthAccount"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/OAuthAccount",
          "summary": "Create a new OAuthAccount",
          "tags": [
            "OAuthAccount"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthAccount"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "OAuthAccount created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/OAuthAccount/{id}",
          "summary": "Get OAuthAccount by ID",
          "tags": [
            "OAuthAccount"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "OAuthAccount details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/OAuthAccount"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/OAuthAccount/{id}",
          "summary": "Update OAuthAccount by ID",
          "tags": [
            "OAuthAccount"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthAccount"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OAuthAccount updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/OAuthAccount/{id}",
          "summary": "Delete OAuthAccount by ID",
          "tags": [
            "OAuthAccount"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "OAuthAccount deleted",
              "content": {}
            }
          }
        }
      }
    },
    "OAuthProvider": {
      "name": "OAuthProvider",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/OAuthProvider",
          "summary": "Get list of OAuthProvider",
          "tags": [
            "OAuthProvider"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of OAuthProvider",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/OAuthProvider"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/OAuthProvider",
          "summary": "Create a new OAuthProvider",
          "tags": [
            "OAuthProvider"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthProvider"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "OAuthProvider created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/OAuthProvider/{id}",
          "summary": "Get OAuthProvider by ID",
          "tags": [
            "OAuthProvider"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "OAuthProvider details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/OAuthProvider"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/OAuthProvider/{id}",
          "summary": "Update OAuthProvider by ID",
          "tags": [
            "OAuthProvider"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthProvider"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OAuthProvider updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/OAuthProvider/{id}",
          "summary": "Delete OAuthProvider by ID",
          "tags": [
            "OAuthProvider"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "OAuthProvider deleted",
              "content": {}
            }
          }
        }
      }
    },
    "PasswordChangeRequest": {
      "name": "PasswordChangeRequest",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/PasswordChangeRequest",
          "summary": "Get list of PasswordChangeRequest",
          "tags": [
            "PasswordChangeRequest"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of PasswordChangeRequest",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PasswordChangeRequest"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/PasswordChangeRequest",
          "summary": "Create a new PasswordChangeRequest",
          "tags": [
            "PasswordChangeRequest"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordChangeRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "PasswordChangeRequest created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/PasswordChangeRequest/{id}",
          "summary": "Get PasswordChangeRequest by ID",
          "tags": [
            "PasswordChangeRequest"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "PasswordChangeRequest details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PasswordChangeRequest"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/PasswordChangeRequest/{id}",
          "summary": "Update PasswordChangeRequest by ID",
          "tags": [
            "PasswordChangeRequest"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordChangeRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "PasswordChangeRequest updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/PasswordChangeRequest/{id}",
          "summary": "Delete PasswordChangeRequest by ID",
          "tags": [
            "PasswordChangeRequest"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "PasswordChangeRequest deleted",
              "content": {}
            }
          }
        }
      }
    },
    "PhoneNumber": {
      "name": "PhoneNumber",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/PhoneNumber",
          "summary": "Get list of PhoneNumber",
          "tags": [
            "PhoneNumber"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of PhoneNumber",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PhoneNumber"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/PhoneNumber",
          "summary": "Create a new PhoneNumber",
          "tags": [
            "PhoneNumber"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneNumber"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "PhoneNumber created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/PhoneNumber/{id}",
          "summary": "Get PhoneNumber by ID",
          "tags": [
            "PhoneNumber"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "PhoneNumber details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PhoneNumber"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/PhoneNumber/{id}",
          "summary": "Update PhoneNumber by ID",
          "tags": [
            "PhoneNumber"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneNumber"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "PhoneNumber updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/PhoneNumber/{id}",
          "summary": "Delete PhoneNumber by ID",
          "tags": [
            "PhoneNumber"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "PhoneNumber deleted",
              "content": {}
            }
          }
        }
      }
    },
    "Portal": {
      "name": "Portal",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/Portal",
          "summary": "Get list of Portal",
          "tags": [
            "Portal"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of Portal",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Portal"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/Portal",
          "summary": "Create a new Portal",
          "tags": [
            "Portal"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Portal"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Portal created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/Portal/{id}",
          "summary": "Get Portal by ID",
          "tags": [
            "Portal"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "Portal details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Portal"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/Portal/{id}",
          "summary": "Update Portal by ID",
          "tags": [
            "Portal"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Portal"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Portal updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/Portal/{id}",
          "summary": "Delete Portal by ID",
          "tags": [
            "Portal"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "Portal deleted",
              "content": {}
            }
          }
        }
      }
    },
    "PortalRole": {
      "name": "PortalRole",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/PortalRole",
          "summary": "Get list of PortalRole",
          "tags": [
            "PortalRole"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of PortalRole",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PortalRole"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/PortalRole",
          "summary": "Create a new PortalRole",
          "tags": [
            "PortalRole"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortalRole"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "PortalRole created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/PortalRole/{id}",
          "summary": "Get PortalRole by ID",
          "tags": [
            "PortalRole"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "PortalRole details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PortalRole"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/PortalRole/{id}",
          "summary": "Update PortalRole by ID",
          "tags": [
            "PortalRole"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortalRole"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "PortalRole updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/PortalRole/{id}",
          "summary": "Delete PortalRole by ID",
          "tags": [
            "PortalRole"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "PortalRole deleted",
              "content": {}
            }
          }
        }
      }
    },
    "Preferences": {
      "name": "Preferences",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/Preferences",
          "summary": "Get list of Preferences",
          "tags": [
            "Preferences"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of Preferences",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Preferences"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/Preferences",
          "summary": "Create a new Preferences",
          "tags": [
            "Preferences"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Preferences"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Preferences created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/Preferences/{id}",
          "summary": "Get Preferences by ID",
          "tags": [
            "Preferences"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "Preferences details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Preferences"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/Preferences/{id}",
          "summary": "Update Preferences by ID",
          "tags": [
            "Preferences"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Preferences"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Preferences updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/Preferences/{id}",
          "summary": "Delete Preferences by ID",
          "tags": [
            "Preferences"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "Preferences deleted",
              "content": {}
            }
          }
        }
      }
    },
    "Role": {
      "name": "Role",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/Role",
          "summary": "Get list of Role",
          "tags": [
            "Role"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of Role",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Role"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/Role",
          "summary": "Create a new Role",
          "tags": [
            "Role"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Role created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/Role/{id}",
          "summary": "Get Role by ID",
          "tags": [
            "Role"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "Role details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/Role/{id}",
          "summary": "Update Role by ID",
          "tags": [
            "Role"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Role updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/Role/{id}",
          "summary": "Delete Role by ID",
          "tags": [
            "Role"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "Role deleted",
              "content": {}
            }
          }
        }
      }
    },
    "ScheduledJob": {
      "name": "ScheduledJob",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/ScheduledJob",
          "summary": "Get list of ScheduledJob",
          "tags": [
            "ScheduledJob"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of ScheduledJob",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ScheduledJob"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/ScheduledJob",
          "summary": "Create a new ScheduledJob",
          "tags": [
            "ScheduledJob"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledJob"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "ScheduledJob created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/ScheduledJob/{id}",
          "summary": "Get ScheduledJob by ID",
          "tags": [
            "ScheduledJob"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "ScheduledJob details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ScheduledJob"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/ScheduledJob/{id}",
          "summary": "Update ScheduledJob by ID",
          "tags": [
            "ScheduledJob"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledJob"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "ScheduledJob updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/ScheduledJob/{id}",
          "summary": "Delete ScheduledJob by ID",
          "tags": [
            "ScheduledJob"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "ScheduledJob deleted",
              "content": {}
            }
          }
        }
      }
    },
    "ScheduledJobLogRecord": {
      "name": "ScheduledJobLogRecord",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/ScheduledJobLogRecord",
          "summary": "Get list of ScheduledJobLogRecord",
          "tags": [
            "ScheduledJobLogRecord"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of ScheduledJobLogRecord",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ScheduledJobLogRecord"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/ScheduledJobLogRecord",
          "summary": "Create a new ScheduledJobLogRecord",
          "tags": [
            "ScheduledJobLogRecord"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledJobLogRecord"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "ScheduledJobLogRecord created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/ScheduledJobLogRecord/{id}",
          "summary": "Get ScheduledJobLogRecord by ID",
          "tags": [
            "ScheduledJobLogRecord"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "ScheduledJobLogRecord details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ScheduledJobLogRecord"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/ScheduledJobLogRecord/{id}",
          "summary": "Update ScheduledJobLogRecord by ID",
          "tags": [
            "ScheduledJobLogRecord"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledJobLogRecord"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "ScheduledJobLogRecord updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/ScheduledJobLogRecord/{id}",
          "summary": "Delete ScheduledJobLogRecord by ID",
          "tags": [
            "ScheduledJobLogRecord"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "ScheduledJobLogRecord deleted",
              "content": {}
            }
          }
        }
      }
    },
    "Settings": {
      "name": "Settings",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/Settings",
          "summary": "Get list of Settings",
          "tags": [
            "Settings"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of Settings",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Settings"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/Settings",
          "summary": "Create a new Settings",
          "tags": [
            "Settings"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Settings"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Settings created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/Settings/{id}",
          "summary": "Get Settings by ID",
          "tags": [
            "Settings"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "Settings details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Settings"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/Settings/{id}",
          "summary": "Update Settings by ID",
          "tags": [
            "Settings"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Settings"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Settings updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/Settings/{id}",
          "summary": "Delete Settings by ID",
          "tags": [
            "Settings"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "Settings deleted",
              "content": {}
            }
          }
        }
      }
    },
    "Sms": {
      "name": "Sms",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/Sms",
          "summary": "Get list of Sms",
          "tags": [
            "Sms"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of Sms",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Sms"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/Sms",
          "summary": "Create a new Sms",
          "tags": [
            "Sms"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sms"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Sms created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/Sms/{id}",
          "summary": "Get Sms by ID",
          "tags": [
            "Sms"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "Sms details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Sms"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/Sms/{id}",
          "summary": "Update Sms by ID",
          "tags": [
            "Sms"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sms"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Sms updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/Sms/{id}",
          "summary": "Delete Sms by ID",
          "tags": [
            "Sms"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "Sms deleted",
              "content": {}
            }
          }
        }
      }
    },
    "StarSubscription": {
      "name": "StarSubscription",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/StarSubscription",
          "summary": "Get list of StarSubscription",
          "tags": [
            "StarSubscription"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of StarSubscription",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/StarSubscription"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/StarSubscription",
          "summary": "Create a new StarSubscription",
          "tags": [
            "StarSubscription"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarSubscription"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "StarSubscription created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/StarSubscription/{id}",
          "summary": "Get StarSubscription by ID",
          "tags": [
            "StarSubscription"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "StarSubscription details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/StarSubscription"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/StarSubscription/{id}",
          "summary": "Update StarSubscription by ID",
          "tags": [
            "StarSubscription"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StarSubscription"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "StarSubscription updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/StarSubscription/{id}",
          "summary": "Delete StarSubscription by ID",
          "tags": [
            "StarSubscription"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "StarSubscription deleted",
              "content": {}
            }
          }
        }
      }
    },
    "StreamSubscription": {
      "name": "StreamSubscription",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/StreamSubscription",
          "summary": "Get list of StreamSubscription",
          "tags": [
            "StreamSubscription"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of StreamSubscription",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/StreamSubscription"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/StreamSubscription",
          "summary": "Create a new StreamSubscription",
          "tags": [
            "StreamSubscription"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamSubscription"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "StreamSubscription created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/StreamSubscription/{id}",
          "summary": "Get StreamSubscription by ID",
          "tags": [
            "StreamSubscription"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "StreamSubscription details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/StreamSubscription"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/StreamSubscription/{id}",
          "summary": "Update StreamSubscription by ID",
          "tags": [
            "StreamSubscription"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamSubscription"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "StreamSubscription updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/StreamSubscription/{id}",
          "summary": "Delete StreamSubscription by ID",
          "tags": [
            "StreamSubscription"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "StreamSubscription deleted",
              "content": {}
            }
          }
        }
      }
    },
    "SystemData": {
      "name": "SystemData",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/SystemData",
          "summary": "Get list of SystemData",
          "tags": [
            "SystemData"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of SystemData",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SystemData"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/SystemData",
          "summary": "Create a new SystemData",
          "tags": [
            "SystemData"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemData"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "SystemData created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/SystemData/{id}",
          "summary": "Get SystemData by ID",
          "tags": [
            "SystemData"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "SystemData details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SystemData"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/SystemData/{id}",
          "summary": "Update SystemData by ID",
          "tags": [
            "SystemData"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemData"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "SystemData updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/SystemData/{id}",
          "summary": "Delete SystemData by ID",
          "tags": [
            "SystemData"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "SystemData deleted",
              "content": {}
            }
          }
        }
      }
    },
    "Team": {
      "name": "Team",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/Team",
          "summary": "Get list of Team",
          "tags": [
            "Team"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of Team",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Team"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/Team",
          "summary": "Create a new Team",
          "tags": [
            "Team"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Team created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/Team/{id}",
          "summary": "Get Team by ID",
          "tags": [
            "Team"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "Team details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/Team/{id}",
          "summary": "Update Team by ID",
          "tags": [
            "Team"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Team updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/Team/{id}",
          "summary": "Delete Team by ID",
          "tags": [
            "Team"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "Team deleted",
              "content": {}
            }
          }
        }
      }
    },
    "Template": {
      "name": "Template",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/Template",
          "summary": "Get list of Template",
          "tags": [
            "Template"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of Template",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Template"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/Template",
          "summary": "Create a new Template",
          "tags": [
            "Template"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Template"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Template created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/Template/{id}",
          "summary": "Get Template by ID",
          "tags": [
            "Template"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "Template details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Template"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/Template/{id}",
          "summary": "Update Template by ID",
          "tags": [
            "Template"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Template"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Template updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/Template/{id}",
          "summary": "Delete Template by ID",
          "tags": [
            "Template"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "Template deleted",
              "content": {}
            }
          }
        }
      }
    },
    "TwoFactorCode": {
      "name": "TwoFactorCode",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/TwoFactorCode",
          "summary": "Get list of TwoFactorCode",
          "tags": [
            "TwoFactorCode"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of TwoFactorCode",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TwoFactorCode"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/TwoFactorCode",
          "summary": "Create a new TwoFactorCode",
          "tags": [
            "TwoFactorCode"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwoFactorCode"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "TwoFactorCode created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/TwoFactorCode/{id}",
          "summary": "Get TwoFactorCode by ID",
          "tags": [
            "TwoFactorCode"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "TwoFactorCode details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TwoFactorCode"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/TwoFactorCode/{id}",
          "summary": "Update TwoFactorCode by ID",
          "tags": [
            "TwoFactorCode"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwoFactorCode"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "TwoFactorCode updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/TwoFactorCode/{id}",
          "summary": "Delete TwoFactorCode by ID",
          "tags": [
            "TwoFactorCode"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "TwoFactorCode deleted",
              "content": {}
            }
          }
        }
      }
    },
    "UniqueId": {
      "name": "UniqueId",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/UniqueId",
          "summary": "Get list of UniqueId",
          "tags": [
            "UniqueId"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of UniqueId",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UniqueId"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/UniqueId",
          "summary": "Create a new UniqueId",
          "tags": [
            "UniqueId"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UniqueId"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "UniqueId created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/UniqueId/{id}",
          "summary": "Get UniqueId by ID",
          "tags": [
            "UniqueId"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "UniqueId details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UniqueId"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/UniqueId/{id}",
          "summary": "Update UniqueId by ID",
          "tags": [
            "UniqueId"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UniqueId"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "UniqueId updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/UniqueId/{id}",
          "summary": "Delete UniqueId by ID",
          "tags": [
            "UniqueId"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "UniqueId deleted",
              "content": {}
            }
          }
        }
      }
    },
    "User": {
      "name": "User",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/User",
          "summary": "Get list of User",
          "tags": [
            "User"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of User",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/User",
          "summary": "Create a new User",
          "tags": [
            "User"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/User/{id}",
          "summary": "Get User by ID",
          "tags": [
            "User"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "User details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/User/{id}",
          "summary": "Update User by ID",
          "tags": [
            "User"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "User updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/User/{id}",
          "summary": "Delete User by ID",
          "tags": [
            "User"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "User deleted",
              "content": {}
            }
          }
        }
      }
    },
    "UserData": {
      "name": "UserData",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/UserData",
          "summary": "Get list of UserData",
          "tags": [
            "UserData"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of UserData",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UserData"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/UserData",
          "summary": "Create a new UserData",
          "tags": [
            "UserData"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserData"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "UserData created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/UserData/{id}",
          "summary": "Get UserData by ID",
          "tags": [
            "UserData"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "UserData details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserData"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/UserData/{id}",
          "summary": "Update UserData by ID",
          "tags": [
            "UserData"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserData"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "UserData updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/UserData/{id}",
          "summary": "Delete UserData by ID",
          "tags": [
            "UserData"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "UserData deleted",
              "content": {}
            }
          }
        }
      }
    },
    "UserReaction": {
      "name": "UserReaction",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/UserReaction",
          "summary": "Get list of UserReaction",
          "tags": [
            "UserReaction"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of UserReaction",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UserReaction"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/UserReaction",
          "summary": "Create a new UserReaction",
          "tags": [
            "UserReaction"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserReaction"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "UserReaction created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/UserReaction/{id}",
          "summary": "Get UserReaction by ID",
          "tags": [
            "UserReaction"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "UserReaction details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserReaction"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/UserReaction/{id}",
          "summary": "Update UserReaction by ID",
          "tags": [
            "UserReaction"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserReaction"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "UserReaction updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/UserReaction/{id}",
          "summary": "Delete UserReaction by ID",
          "tags": [
            "UserReaction"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "UserReaction deleted",
              "content": {}
            }
          }
        }
      }
    },
    "Webhook": {
      "name": "Webhook",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/Webhook",
          "summary": "Get list of Webhook",
          "tags": [
            "Webhook"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of Webhook",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Webhook"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/Webhook",
          "summary": "Create a new Webhook",
          "tags": [
            "Webhook"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Webhook created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/Webhook/{id}",
          "summary": "Get Webhook by ID",
          "tags": [
            "Webhook"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "Webhook details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Webhook"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/Webhook/{id}",
          "summary": "Update Webhook by ID",
          "tags": [
            "Webhook"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Webhook updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/Webhook/{id}",
          "summary": "Delete Webhook by ID",
          "tags": [
            "Webhook"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "Webhook deleted",
              "content": {}
            }
          }
        }
      }
    },
    "WebhookEventQueueItem": {
      "name": "WebhookEventQueueItem",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/WebhookEventQueueItem",
          "summary": "Get list of WebhookEventQueueItem",
          "tags": [
            "WebhookEventQueueItem"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of WebhookEventQueueItem",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/WebhookEventQueueItem"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/WebhookEventQueueItem",
          "summary": "Create a new WebhookEventQueueItem",
          "tags": [
            "WebhookEventQueueItem"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookEventQueueItem"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "WebhookEventQueueItem created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/WebhookEventQueueItem/{id}",
          "summary": "Get WebhookEventQueueItem by ID",
          "tags": [
            "WebhookEventQueueItem"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "WebhookEventQueueItem details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WebhookEventQueueItem"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/WebhookEventQueueItem/{id}",
          "summary": "Update WebhookEventQueueItem by ID",
          "tags": [
            "WebhookEventQueueItem"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookEventQueueItem"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "WebhookEventQueueItem updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/WebhookEventQueueItem/{id}",
          "summary": "Delete WebhookEventQueueItem by ID",
          "tags": [
            "WebhookEventQueueItem"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "WebhookEventQueueItem deleted",
              "content": {}
            }
          }
        }
      }
    },
    "WebhookQueueItem": {
      "name": "WebhookQueueItem",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/WebhookQueueItem",
          "summary": "Get list of WebhookQueueItem",
          "tags": [
            "WebhookQueueItem"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of WebhookQueueItem",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/WebhookQueueItem"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/WebhookQueueItem",
          "summary": "Create a new WebhookQueueItem",
          "tags": [
            "WebhookQueueItem"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookQueueItem"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "WebhookQueueItem created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/WebhookQueueItem/{id}",
          "summary": "Get WebhookQueueItem by ID",
          "tags": [
            "WebhookQueueItem"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "WebhookQueueItem details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WebhookQueueItem"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/WebhookQueueItem/{id}",
          "summary": "Update WebhookQueueItem by ID",
          "tags": [
            "WebhookQueueItem"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookQueueItem"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "WebhookQueueItem updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/WebhookQueueItem/{id}",
          "summary": "Delete WebhookQueueItem by ID",
          "tags": [
            "WebhookQueueItem"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "WebhookQueueItem deleted",
              "content": {}
            }
          }
        }
      }
    },
    "WorkingTimeCalendar": {
      "name": "WorkingTimeCalendar",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/WorkingTimeCalendar",
          "summary": "Get list of WorkingTimeCalendar",
          "tags": [
            "WorkingTimeCalendar"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of WorkingTimeCalendar",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/WorkingTimeCalendar"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/WorkingTimeCalendar",
          "summary": "Create a new WorkingTimeCalendar",
          "tags": [
            "WorkingTimeCalendar"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkingTimeCalendar"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "WorkingTimeCalendar created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/WorkingTimeCalendar/{id}",
          "summary": "Get WorkingTimeCalendar by ID",
          "tags": [
            "WorkingTimeCalendar"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "WorkingTimeCalendar details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WorkingTimeCalendar"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/WorkingTimeCalendar/{id}",
          "summary": "Update WorkingTimeCalendar by ID",
          "tags": [
            "WorkingTimeCalendar"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkingTimeCalendar"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "WorkingTimeCalendar updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/WorkingTimeCalendar/{id}",
          "summary": "Delete WorkingTimeCalendar by ID",
          "tags": [
            "WorkingTimeCalendar"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "WorkingTimeCalendar deleted",
              "content": {}
            }
          }
        }
      }
    },
    "WorkingTimeRange": {
      "name": "WorkingTimeRange",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/WorkingTimeRange",
          "summary": "Get list of WorkingTimeRange",
          "tags": [
            "WorkingTimeRange"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of WorkingTimeRange",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/WorkingTimeRange"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/WorkingTimeRange",
          "summary": "Create a new WorkingTimeRange",
          "tags": [
            "WorkingTimeRange"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkingTimeRange"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "WorkingTimeRange created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/WorkingTimeRange/{id}",
          "summary": "Get WorkingTimeRange by ID",
          "tags": [
            "WorkingTimeRange"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "WorkingTimeRange details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WorkingTimeRange"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/WorkingTimeRange/{id}",
          "summary": "Update WorkingTimeRange by ID",
          "tags": [
            "WorkingTimeRange"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkingTimeRange"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "WorkingTimeRange updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/WorkingTimeRange/{id}",
          "summary": "Delete WorkingTimeRange by ID",
          "tags": [
            "WorkingTimeRange"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "WorkingTimeRange deleted",
              "content": {}
            }
          }
        }
      }
    },
    "Account": {
      "name": "Account",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/Account",
          "summary": "Get list of Account",
          "tags": [
            "Account"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of Account",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Account"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/Account",
          "summary": "Create a new Account",
          "tags": [
            "Account"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Account created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/Account/{id}",
          "summary": "Get Account by ID",
          "tags": [
            "Account"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "Account details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Account"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/Account/{id}",
          "summary": "Update Account by ID",
          "tags": [
            "Account"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Account updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/Account/{id}",
          "summary": "Delete Account by ID",
          "tags": [
            "Account"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "Account deleted",
              "content": {}
            }
          }
        }
      }
    },
    "Call": {
      "name": "Call",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/Call",
          "summary": "Get list of Call",
          "tags": [
            "Call"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of Call",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Call"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/Call",
          "summary": "Create a new Call",
          "tags": [
            "Call"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Call"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Call created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/Call/{id}",
          "summary": "Get Call by ID",
          "tags": [
            "Call"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "Call details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Call"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/Call/{id}",
          "summary": "Update Call by ID",
          "tags": [
            "Call"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Call"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Call updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/Call/{id}",
          "summary": "Delete Call by ID",
          "tags": [
            "Call"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "Call deleted",
              "content": {}
            }
          }
        }
      }
    },
    "Campaign": {
      "name": "Campaign",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/Campaign",
          "summary": "Get list of Campaign",
          "tags": [
            "Campaign"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of Campaign",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Campaign"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/Campaign",
          "summary": "Create a new Campaign",
          "tags": [
            "Campaign"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Campaign"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Campaign created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/Campaign/{id}",
          "summary": "Get Campaign by ID",
          "tags": [
            "Campaign"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "Campaign details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Campaign"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/Campaign/{id}",
          "summary": "Update Campaign by ID",
          "tags": [
            "Campaign"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Campaign"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Campaign updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/Campaign/{id}",
          "summary": "Delete Campaign by ID",
          "tags": [
            "Campaign"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "Campaign deleted",
              "content": {}
            }
          }
        }
      }
    },
    "CampaignLogRecord": {
      "name": "CampaignLogRecord",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/CampaignLogRecord",
          "summary": "Get list of CampaignLogRecord",
          "tags": [
            "CampaignLogRecord"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of CampaignLogRecord",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CampaignLogRecord"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/CampaignLogRecord",
          "summary": "Create a new CampaignLogRecord",
          "tags": [
            "CampaignLogRecord"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignLogRecord"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "CampaignLogRecord created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/CampaignLogRecord/{id}",
          "summary": "Get CampaignLogRecord by ID",
          "tags": [
            "CampaignLogRecord"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "CampaignLogRecord details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CampaignLogRecord"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/CampaignLogRecord/{id}",
          "summary": "Update CampaignLogRecord by ID",
          "tags": [
            "CampaignLogRecord"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignLogRecord"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "CampaignLogRecord updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/CampaignLogRecord/{id}",
          "summary": "Delete CampaignLogRecord by ID",
          "tags": [
            "CampaignLogRecord"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "CampaignLogRecord deleted",
              "content": {}
            }
          }
        }
      }
    },
    "CampaignTrackingUrl": {
      "name": "CampaignTrackingUrl",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/CampaignTrackingUrl",
          "summary": "Get list of CampaignTrackingUrl",
          "tags": [
            "CampaignTrackingUrl"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of CampaignTrackingUrl",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CampaignTrackingUrl"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/CampaignTrackingUrl",
          "summary": "Create a new CampaignTrackingUrl",
          "tags": [
            "CampaignTrackingUrl"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignTrackingUrl"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "CampaignTrackingUrl created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/CampaignTrackingUrl/{id}",
          "summary": "Get CampaignTrackingUrl by ID",
          "tags": [
            "CampaignTrackingUrl"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "CampaignTrackingUrl details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CampaignTrackingUrl"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/CampaignTrackingUrl/{id}",
          "summary": "Update CampaignTrackingUrl by ID",
          "tags": [
            "CampaignTrackingUrl"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignTrackingUrl"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "CampaignTrackingUrl updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/CampaignTrackingUrl/{id}",
          "summary": "Delete CampaignTrackingUrl by ID",
          "tags": [
            "CampaignTrackingUrl"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "CampaignTrackingUrl deleted",
              "content": {}
            }
          }
        }
      }
    },
    "Case": {
      "name": "Case",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/Case",
          "summary": "Get list of Case",
          "tags": [
            "Case"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of Case",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Case"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/Case",
          "summary": "Create a new Case",
          "tags": [
            "Case"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Case"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Case created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/Case/{id}",
          "summary": "Get Case by ID",
          "tags": [
            "Case"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "Case details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Case"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/Case/{id}",
          "summary": "Update Case by ID",
          "tags": [
            "Case"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Case"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Case updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/Case/{id}",
          "summary": "Delete Case by ID",
          "tags": [
            "Case"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "Case deleted",
              "content": {}
            }
          }
        }
      }
    },
    "Contact": {
      "name": "Contact",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/Contact",
          "summary": "Get list of Contact",
          "tags": [
            "Contact"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of Contact",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Contact"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/Contact",
          "summary": "Create a new Contact",
          "tags": [
            "Contact"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Contact created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/Contact/{id}",
          "summary": "Get Contact by ID",
          "tags": [
            "Contact"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "Contact details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Contact"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/Contact/{id}",
          "summary": "Update Contact by ID",
          "tags": [
            "Contact"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Contact updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/Contact/{id}",
          "summary": "Delete Contact by ID",
          "tags": [
            "Contact"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "Contact deleted",
              "content": {}
            }
          }
        }
      }
    },
    "Document": {
      "name": "Document",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/Document",
          "summary": "Get list of Document",
          "tags": [
            "Document"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of Document",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Document"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/Document",
          "summary": "Create a new Document",
          "tags": [
            "Document"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Document created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/Document/{id}",
          "summary": "Get Document by ID",
          "tags": [
            "Document"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "Document details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Document"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/Document/{id}",
          "summary": "Update Document by ID",
          "tags": [
            "Document"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Document updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/Document/{id}",
          "summary": "Delete Document by ID",
          "tags": [
            "Document"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "Document deleted",
              "content": {}
            }
          }
        }
      }
    },
    "DocumentFolder": {
      "name": "DocumentFolder",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/DocumentFolder",
          "summary": "Get list of DocumentFolder",
          "tags": [
            "DocumentFolder"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of DocumentFolder",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DocumentFolder"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/DocumentFolder",
          "summary": "Create a new DocumentFolder",
          "tags": [
            "DocumentFolder"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentFolder"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "DocumentFolder created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/DocumentFolder/{id}",
          "summary": "Get DocumentFolder by ID",
          "tags": [
            "DocumentFolder"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "DocumentFolder details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DocumentFolder"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/DocumentFolder/{id}",
          "summary": "Update DocumentFolder by ID",
          "tags": [
            "DocumentFolder"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentFolder"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "DocumentFolder updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/DocumentFolder/{id}",
          "summary": "Delete DocumentFolder by ID",
          "tags": [
            "DocumentFolder"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "DocumentFolder deleted",
              "content": {}
            }
          }
        }
      }
    },
    "EmailQueueItem": {
      "name": "EmailQueueItem",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/EmailQueueItem",
          "summary": "Get list of EmailQueueItem",
          "tags": [
            "EmailQueueItem"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of EmailQueueItem",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/EmailQueueItem"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/EmailQueueItem",
          "summary": "Create a new EmailQueueItem",
          "tags": [
            "EmailQueueItem"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailQueueItem"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "EmailQueueItem created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/EmailQueueItem/{id}",
          "summary": "Get EmailQueueItem by ID",
          "tags": [
            "EmailQueueItem"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "EmailQueueItem details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EmailQueueItem"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/EmailQueueItem/{id}",
          "summary": "Update EmailQueueItem by ID",
          "tags": [
            "EmailQueueItem"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailQueueItem"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "EmailQueueItem updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/EmailQueueItem/{id}",
          "summary": "Delete EmailQueueItem by ID",
          "tags": [
            "EmailQueueItem"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "EmailQueueItem deleted",
              "content": {}
            }
          }
        }
      }
    },
    "KnowledgeBaseArticle": {
      "name": "KnowledgeBaseArticle",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/KnowledgeBaseArticle",
          "summary": "Get list of KnowledgeBaseArticle",
          "tags": [
            "KnowledgeBaseArticle"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of KnowledgeBaseArticle",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/KnowledgeBaseArticle"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/KnowledgeBaseArticle",
          "summary": "Create a new KnowledgeBaseArticle",
          "tags": [
            "KnowledgeBaseArticle"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KnowledgeBaseArticle"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "KnowledgeBaseArticle created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/KnowledgeBaseArticle/{id}",
          "summary": "Get KnowledgeBaseArticle by ID",
          "tags": [
            "KnowledgeBaseArticle"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "KnowledgeBaseArticle details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/KnowledgeBaseArticle"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/KnowledgeBaseArticle/{id}",
          "summary": "Update KnowledgeBaseArticle by ID",
          "tags": [
            "KnowledgeBaseArticle"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KnowledgeBaseArticle"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "KnowledgeBaseArticle updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/KnowledgeBaseArticle/{id}",
          "summary": "Delete KnowledgeBaseArticle by ID",
          "tags": [
            "KnowledgeBaseArticle"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "KnowledgeBaseArticle deleted",
              "content": {}
            }
          }
        }
      }
    },
    "KnowledgeBaseCategory": {
      "name": "KnowledgeBaseCategory",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/KnowledgeBaseCategory",
          "summary": "Get list of KnowledgeBaseCategory",
          "tags": [
            "KnowledgeBaseCategory"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of KnowledgeBaseCategory",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/KnowledgeBaseCategory"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/KnowledgeBaseCategory",
          "summary": "Create a new KnowledgeBaseCategory",
          "tags": [
            "KnowledgeBaseCategory"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KnowledgeBaseCategory"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "KnowledgeBaseCategory created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/KnowledgeBaseCategory/{id}",
          "summary": "Get KnowledgeBaseCategory by ID",
          "tags": [
            "KnowledgeBaseCategory"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "KnowledgeBaseCategory details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/KnowledgeBaseCategory"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/KnowledgeBaseCategory/{id}",
          "summary": "Update KnowledgeBaseCategory by ID",
          "tags": [
            "KnowledgeBaseCategory"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KnowledgeBaseCategory"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "KnowledgeBaseCategory updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/KnowledgeBaseCategory/{id}",
          "summary": "Delete KnowledgeBaseCategory by ID",
          "tags": [
            "KnowledgeBaseCategory"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "KnowledgeBaseCategory deleted",
              "content": {}
            }
          }
        }
      }
    },
    "Lead": {
      "name": "Lead",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/Lead",
          "summary": "Get list of Lead",
          "tags": [
            "Lead"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of Lead",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Lead"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/Lead",
          "summary": "Create a new Lead",
          "tags": [
            "Lead"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Lead created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/Lead/{id}",
          "summary": "Get Lead by ID",
          "tags": [
            "Lead"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "Lead details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Lead"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/Lead/{id}",
          "summary": "Update Lead by ID",
          "tags": [
            "Lead"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Lead updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/Lead/{id}",
          "summary": "Delete Lead by ID",
          "tags": [
            "Lead"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "Lead deleted",
              "content": {}
            }
          }
        }
      }
    },
    "MassEmail": {
      "name": "MassEmail",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/MassEmail",
          "summary": "Get list of MassEmail",
          "tags": [
            "MassEmail"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of MassEmail",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/MassEmail"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/MassEmail",
          "summary": "Create a new MassEmail",
          "tags": [
            "MassEmail"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MassEmail"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "MassEmail created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/MassEmail/{id}",
          "summary": "Get MassEmail by ID",
          "tags": [
            "MassEmail"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "MassEmail details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/MassEmail"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/MassEmail/{id}",
          "summary": "Update MassEmail by ID",
          "tags": [
            "MassEmail"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MassEmail"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "MassEmail updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/MassEmail/{id}",
          "summary": "Delete MassEmail by ID",
          "tags": [
            "MassEmail"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "MassEmail deleted",
              "content": {}
            }
          }
        }
      }
    },
    "Meeting": {
      "name": "Meeting",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/Meeting",
          "summary": "Get list of Meeting",
          "tags": [
            "Meeting"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of Meeting",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Meeting"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/Meeting",
          "summary": "Create a new Meeting",
          "tags": [
            "Meeting"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Meeting"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Meeting created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/Meeting/{id}",
          "summary": "Get Meeting by ID",
          "tags": [
            "Meeting"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "Meeting details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Meeting"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/Meeting/{id}",
          "summary": "Update Meeting by ID",
          "tags": [
            "Meeting"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Meeting"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Meeting updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/Meeting/{id}",
          "summary": "Delete Meeting by ID",
          "tags": [
            "Meeting"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "Meeting deleted",
              "content": {}
            }
          }
        }
      }
    },
    "Opportunity": {
      "name": "Opportunity",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/Opportunity",
          "summary": "Get list of Opportunity",
          "tags": [
            "Opportunity"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of Opportunity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Opportunity"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/Opportunity",
          "summary": "Create a new Opportunity",
          "tags": [
            "Opportunity"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Opportunity"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Opportunity created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/Opportunity/{id}",
          "summary": "Get Opportunity by ID",
          "tags": [
            "Opportunity"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "Opportunity details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Opportunity"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/Opportunity/{id}",
          "summary": "Update Opportunity by ID",
          "tags": [
            "Opportunity"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Opportunity"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Opportunity updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/Opportunity/{id}",
          "summary": "Delete Opportunity by ID",
          "tags": [
            "Opportunity"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "Opportunity deleted",
              "content": {}
            }
          }
        }
      }
    },
    "Reminder": {
      "name": "Reminder",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/Reminder",
          "summary": "Get list of Reminder",
          "tags": [
            "Reminder"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of Reminder",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Reminder"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/Reminder",
          "summary": "Create a new Reminder",
          "tags": [
            "Reminder"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reminder"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Reminder created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/Reminder/{id}",
          "summary": "Get Reminder by ID",
          "tags": [
            "Reminder"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "Reminder details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Reminder"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/Reminder/{id}",
          "summary": "Update Reminder by ID",
          "tags": [
            "Reminder"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reminder"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Reminder updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/Reminder/{id}",
          "summary": "Delete Reminder by ID",
          "tags": [
            "Reminder"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "Reminder deleted",
              "content": {}
            }
          }
        }
      }
    },
    "Target": {
      "name": "Target",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/Target",
          "summary": "Get list of Target",
          "tags": [
            "Target"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of Target",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Target"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/Target",
          "summary": "Create a new Target",
          "tags": [
            "Target"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Target"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Target created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/Target/{id}",
          "summary": "Get Target by ID",
          "tags": [
            "Target"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "Target details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Target"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/Target/{id}",
          "summary": "Update Target by ID",
          "tags": [
            "Target"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Target"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Target updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/Target/{id}",
          "summary": "Delete Target by ID",
          "tags": [
            "Target"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "Target deleted",
              "content": {}
            }
          }
        }
      }
    },
    "TargetList": {
      "name": "TargetList",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/TargetList",
          "summary": "Get list of TargetList",
          "tags": [
            "TargetList"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of TargetList",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TargetList"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/TargetList",
          "summary": "Create a new TargetList",
          "tags": [
            "TargetList"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetList"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "TargetList created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/TargetList/{id}",
          "summary": "Get TargetList by ID",
          "tags": [
            "TargetList"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "TargetList details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TargetList"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/TargetList/{id}",
          "summary": "Update TargetList by ID",
          "tags": [
            "TargetList"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetList"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "TargetList updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/TargetList/{id}",
          "summary": "Delete TargetList by ID",
          "tags": [
            "TargetList"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "TargetList deleted",
              "content": {}
            }
          }
        }
      }
    },
    "TargetListCategory": {
      "name": "TargetListCategory",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/TargetListCategory",
          "summary": "Get list of TargetListCategory",
          "tags": [
            "TargetListCategory"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of TargetListCategory",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TargetListCategory"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/TargetListCategory",
          "summary": "Create a new TargetListCategory",
          "tags": [
            "TargetListCategory"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetListCategory"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "TargetListCategory created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/TargetListCategory/{id}",
          "summary": "Get TargetListCategory by ID",
          "tags": [
            "TargetListCategory"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "TargetListCategory details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TargetListCategory"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/TargetListCategory/{id}",
          "summary": "Update TargetListCategory by ID",
          "tags": [
            "TargetListCategory"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetListCategory"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "TargetListCategory updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/TargetListCategory/{id}",
          "summary": "Delete TargetListCategory by ID",
          "tags": [
            "TargetListCategory"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "TargetListCategory deleted",
              "content": {}
            }
          }
        }
      }
    },
    "Task": {
      "name": "Task",
      "operations": {
        "get": {
          "method": "GET",
          "path": "/Task",
          "summary": "Get list of Task",
          "tags": [
            "Task"
          ],
          "parameters": [],
          "request_body": {},
          "responses": {
            "200": {
              "description": "List of Task",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Task"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "method": "POST",
          "path": "/Task",
          "summary": "Create a new Task",
          "tags": [
            "Task"
          ],
          "parameters": [],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Task created",
              "content": {}
            }
          }
        },
        "get_by_id": {
          "method": "GET",
          "path": "/Task/{id}",
          "summary": "Get Task by ID",
          "tags": [
            "Task"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "200": {
              "description": "Task details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {}
            }
          }
        },
        "patch": {
          "method": "PATCH",
          "path": "/Task/{id}",
          "summary": "Update Task by ID",
          "tags": [
            "Task"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Task updated",
              "content": {}
            }
          }
        },
        "delete": {
          "method": "DELETE",
          "path": "/Task/{id}",
          "summary": "Delete Task by ID",
          "tags": [
            "Task"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "request_body": {},
          "responses": {
            "204": {
              "description": "Task deleted",
              "content": {}
            }
          }
        }
      }
    }
  },
  "schemas": {
    "ActionHistoryRecord": {
      "type": "object",
      "properties": {
        "number": {
          "type": "integer",
          "format": "int64",
          "description": "Số thứ tự tự tăng"
        },
        "targetType": {
          "type": "string",
          "description": "Loại đối tượng target (scope name)"
        },
        "target": {
          "$ref": "#/components/schemas/Target"
        },
        "data": {
          "type": "object",
          "additionalProperties": true,
          "description": "Dữ liệu JSON tùy biến"
        },
        "action": {
          "type": "string",
          "enum": [
            "read",
            "update",
            "create",
            "delete"
          ],
          "description": "Loại hành động"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Thời điểm tạo"
        },
        "user": {
          "$ref": "#/components/schemas/User"
        },
        "userType": {
          "type": "string",
          "description": "Kiểu user (foreign từ user.type, không lưu DB)"
        },
        "ipAddress": {
          "type": "string",
          "maxLength": 39,
          "description": "IPv4 hoặc IPv6"
        },
        "authToken": {
          "$ref": "#/components/schemas/AuthToken"
        },
        "authLogRecord": {
          "$ref": "#/components/schemas/AuthLogRecord"
        }
      },
      "required": [
        "number",
        "action",
        "createdAt",
        "user"
      ]
    },
    "AddressCountry": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 100,
          "description": "Tên quốc gia (unique, required)"
        },
        "code": {
          "type": "string",
          "maxLength": 2,
          "pattern": "^[A-Z]{2}$",
          "enum": [
            "AF",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AU",
            "AT",
            "AZ",
            "BS",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BM",
            "BT",
            "BO",
            "BA",
            "BW",
            "BV",
            "BR",
            "IO",
            "BN",
            "BG",
            "BF",
            "BI",
            "KH",
            "CM",
            "CA",
            "CV",
            "KY",
            "CF",
            "TD",
            "CL",
            "CN",
            "CX",
            "CC",
            "CO",
            "KM",
            "CG",
            "CD",
            "CK",
            "CR",
            "CI",
            "HR",
            "CU",
            "CY",
            "CZ",
            "DK",
            "DJ",
            "DM",
            "DO",
            "EC",
            "EG",
            "SV",
            "GQ",
            "ER",
            "EE",
            "ET",
            "FK",
            "FO",
            "FJ",
            "FI",
            "FR",
            "GF",
            "PF",
            "TF",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GW",
            "GY",
            "HT",
            "HM",
            "VA",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IR",
            "IQ",
            "IE",
            "IM",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KR",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MK",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MH",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "FM",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "AN",
            "NC",
            "NZ",
            "NI",
            "NE",
            "NG",
            "NU",
            "NF",
            "MP",
            false,
            "OM",
            "PK",
            "PW",
            "PS",
            "PA",
            "PG",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "PR",
            "QA",
            "RE",
            "RO",
            "RU",
            "RW",
            "BL",
            "SH",
            "KN",
            "LC",
            "MF",
            "PM",
            "VC",
            "WS",
            "SM",
            "ST",
            "SA",
            "SN",
            "RS",
            "SC",
            "SL",
            "SG",
            "SK",
            "SI",
            "SB",
            "SO",
            "ZA",
            "GS",
            "ES",
            "LK",
            "SD",
            "SR",
            "SJ",
            "SZ",
            "SE",
            "CH",
            "SY",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TN",
            "TR",
            "TM",
            "TC",
            "TV",
            "UG",
            "UA",
            "AE",
            "GB",
            "US",
            "UM",
            "UY",
            "UZ",
            "VU",
            "VE",
            "VN",
            "VG",
            "VI",
            "WF",
            "EH",
            "YE",
            "ZM",
            "ZW"
          ],
          "description": "Mã quốc gia ISO 3166-1 alpha-2"
        },
        "isPreferred": {
          "type": "boolean",
          "description": "Đánh dấu quốc gia ưu tiên"
        },
        "preferredName": {
          "type": "string",
          "readOnly": true,
          "description": "Tên hiển thị (không lưu DB, chỉ dùng cho UI)"
        }
      },
      "required": [
        "name",
        "code"
      ]
    },
    "AppLogRecord": {
      "type": "object",
      "properties": {
        "number": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "Số thứ tự tự tăng (primary key)"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Thời điểm log được ghi"
        },
        "message": {
          "type": "string",
          "readOnly": true,
          "description": "Nội dung log"
        },
        "level": {
          "type": "string",
          "enum": [
            "Debug",
            "Info",
            "Notice",
            "Warning",
            "Error",
            "Critical",
            "Alert",
            "Emergency"
          ],
          "maxLength": 9,
          "readOnly": true,
          "description": "Mức độ log"
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "Mã lỗi (nếu có)"
        },
        "exceptionClass": {
          "type": "string",
          "maxLength": 512,
          "readOnly": true,
          "description": "Tên class Exception"
        },
        "file": {
          "type": "string",
          "maxLength": 512,
          "readOnly": true,
          "description": "Tên file xảy ra lỗi"
        },
        "line": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "Số dòng trong file"
        },
        "requestMethod": {
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "UPDATE",
            "DELETE",
            "PATCH",
            "HEAD",
            "OPTIONS",
            "TRACE"
          ],
          "maxLength": 7,
          "readOnly": true,
          "description": "HTTP method của request"
        },
        "requestResourcePath": {
          "type": "string",
          "maxLength": 255,
          "readOnly": true,
          "description": "Resource path trong request"
        },
        "requestUrl": {
          "type": "string",
          "maxLength": 512,
          "readOnly": true,
          "description": "Đường dẫn đầy đủ của request"
        }
      },
      "required": [
        "number",
        "createdAt",
        "message",
        "level"
      ]
    },
    "AppSecret": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 100,
          "pattern": "^[a-zA-Z]{1}[a-zA-Z0-9_]+$",
          "description": "Tên secret (unique theo cặp name + deleteId)"
        },
        "value": {
          "type": "string",
          "description": "Giá trị secret"
        },
        "description": {
          "type": "string",
          "description": "Mô tả secret"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Thời điểm tạo"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Thời điểm cập nhật"
        },
        "createdBy": {
          "allOf": [
            {
              "$ref": "#/components/schemas/User"
            },
            {
              "type": "object",
              "readOnly": true,
              "description": "Người tạo"
            }
          ]
        },
        "modifiedBy": {
          "allOf": [
            {
              "$ref": "#/components/schemas/User"
            },
            {
              "type": "object",
              "readOnly": true,
              "description": "Người sửa cuối"
            }
          ]
        },
        "deleteId": {
          "type": "string",
          "maxLength": 17,
          "readOnly": true,
          "description": "ID dùng cho soft-delete (mặc định '0')"
        }
      },
      "required": [
        "name",
        "value",
        "deleteId"
      ]
    },
    "ArrayValue": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 100,
          "description": "Giá trị lưu trong array (bắt buộc)"
        },
        "entity": {
          "type": "object",
          "description": "Liên kết đến entity cha (polymorphic linkParent)"
        },
        "attribute": {
          "type": "string",
          "maxLength": 100,
          "description": "Tên thuộc tính gắn với value"
        }
      },
      "required": [
        "value"
      ]
    },
    "Attachment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID duy nhất của file đính kèm"
        },
        "name": {
          "type": "string",
          "maxLength": 255,
          "description": "Tên file đính kèm"
        },
        "type": {
          "type": "string",
          "maxLength": 100,
          "description": "MIME type của file (ví dụ:application/pdf, image/png)"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "minimum": 0,
          "description": "Kích thước file (bytes)"
        },
        "parent": {
          "type": "object",
          "description": "Entity cha mà file đính kèm"
        },
        "related": {
          "type": "object",
          "description": "Entity liên quan khác"
        },
        "source": {
          "type": "string",
          "readOnly": true,
          "description": "Nguồn gốc file (hệ thống sinh ra)"
        },
        "field": {
          "type": "string",
          "description": "Tên field trong entity cha gắn với file này"
        },
        "isBeingUploaded": {
          "type": "boolean",
          "default": false,
          "description": "Trạng thái upload file"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Thời gian tạo"
        },
        "createdBy": {
          "allOf": [
            {
              "$ref": "#/components/schemas/User"
            },
            {
              "type": "object",
              "readOnly": true,
              "description": "Người tạo file"
            }
          ]
        },
        "contents": {
          "type": "string",
          "description": "Nội dung file (chỉ sử dụng tạm, không lưu DB)"
        },
        "role": {
          "type": "string",
          "maxLength": 36,
          "enum": [
            "Attachment",
            "Inline Attachment",
            "Import File",
            "Export File",
            "Mail Merge",
            "Mass Pdf"
          ],
          "description": "Loại file đính kèm"
        },
        "storage": {
          "type": "string",
          "maxLength": 24,
          "nullable": true,
          "description": "Hệ thống lưu file (FileSystem, Database, S3…)"
        },
        "storageFilePath": {
          "type": "string",
          "maxLength": 260,
          "nullable": true,
          "description": "Đường dẫn file trên storage"
        },
        "global": {
          "type": "boolean",
          "default": false,
          "description": "Đánh dấu file có phạm vi global"
        }
      },
      "required": [
        "name"
      ]
    },
    "AuthLogRecord": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "maxLength": 100,
          "readOnly": true,
          "description": "Tên đăng nhập"
        },
        "portal": {
          "allOf": [
            {
              "$ref": "#/components/schemas/Portal"
            },
            {
              "type": "object",
              "readOnly": true
            }
          ],
          "description": "Portal liên quan"
        },
        "user": {
          "allOf": [
            {
              "$ref": "#/components/schemas/User"
            },
            {
              "type": "object",
              "readOnly": true
            }
          ],
          "description": "Người dùng liên quan"
        },
        "authToken": {
          "allOf": [
            {
              "$ref": "#/components/schemas/AuthToken"
            },
            {
              "type": "object",
              "readOnly": true
            }
          ],
          "description": "Token xác thực"
        },
        "ipAddress": {
          "type": "string",
          "maxLength": 45,
          "readOnly": true,
          "description": "Địa chỉ IP"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Thời gian tạo log"
        },
        "isDenied": {
          "type": "boolean",
          "readOnly": true,
          "description": "Có bị từ chối đăng nhập không"
        },
        "denialReason": {
          "type": "string",
          "enum": [
            "",
            "CREDENTIALS",
            "INACTIVE_USER",
            "IS_PORTAL_USER",
            "IS_NOT_PORTAL_USER",
            "USER_IS_NOT_IN_PORTAL",
            "IS_SYSTEM_USER",
            "FORBIDDEN"
          ],
          "readOnly": true,
          "description": "Lý do từ chối đăng nhập"
        },
        "requestTime": {
          "type": "number",
          "format": "float",
          "readOnly": true,
          "description": "Thời gian xử lý request"
        },
        "requestUrl": {
          "type": "string",
          "readOnly": true,
          "description": "URL request"
        },
        "requestMethod": {
          "type": "string",
          "maxLength": 15,
          "readOnly": true,
          "description": "HTTP method"
        },
        "authTokenIsActive": {
          "type": "boolean",
          "readOnly": true,
          "description": "Trạng thái còn hiệu lực của authToken"
        },
        "authenticationMethod": {
          "type": "string",
          "description": "Phương thức xác thực (VD:Password, SSO)"
        }
      },
      "required": [
        "username",
        "createdAt",
        "requestMethod"
      ]
    },
    "AuthToken": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "maxLength": 36,
          "readOnly": true,
          "description": "Mã token duy nhất (UUID/chuỗi 36 ký tự)"
        },
        "hash": {
          "type": "string",
          "maxLength": 150,
          "readOnly": true,
          "description": "Hash của token để kiểm tra"
        },
        "secret": {
          "type": "string",
          "maxLength": 36,
          "readOnly": true,
          "description": "Secret kèm theo token"
        },
        "user": {
          "allOf": [
            {
              "$ref": "#/components/schemas/User"
            },
            {
              "type": "object",
              "readOnly": true
            }
          ],
          "description": "Người dùng sở hữu token"
        },
        "portal": {
          "allOf": [
            {
              "$ref": "#/components/schemas/Portal"
            },
            {
              "type": "object",
              "readOnly": true
            }
          ],
          "description": "Portal liên quan (nếu có)"
        },
        "ipAddress": {
          "type": "string",
          "maxLength": 45,
          "readOnly": true,
          "description": "Địa chỉ IP sử dụng token"
        },
        "isActive": {
          "type": "boolean",
          "default": true,
          "description": "Token có còn hiệu lực hay không"
        },
        "lastAccess": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Lần truy cập cuối"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Thời gian tạo token"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Thời gian chỉnh sửa cuối"
        }
      },
      "required": [
        "token",
        "hash",
        "secret",
        "isActive"
      ]
    },
    "AuthenticationProvider": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Tên nhà cung cấp xác thực"
        },
        "method": {
          "type": "string",
          "description": "Phương thức xác thực"
        },
        "oidcAuthorizationRedirectUri": {
          "type": "string",
          "readOnly": true,
          "description": "URI redirect OIDC (chỉ đọc, không lưu DB)"
        },
        "oidcClientId": {
          "type": "string",
          "description": "Client ID OIDC"
        },
        "oidcClientSecret": {
          "type": "string",
          "format": "password",
          "description": "Client Secret OIDC"
        },
        "oidcAuthorizationEndpoint": {
          "type": "string",
          "format": "uri",
          "description": "URL endpoint authorize OIDC"
        },
        "oidcUserInfoEndpoint": {
          "type": "string",
          "format": "uri",
          "description": "URL endpoint lấy thông tin user OIDC"
        },
        "oidcTokenEndpoint": {
          "type": "string",
          "format": "uri",
          "description": "URL endpoint lấy token OIDC"
        },
        "oidcJwksEndpoint": {
          "type": "string",
          "format": "uri",
          "description": "URL JWKS OIDC"
        },
        "oidcJwtSignatureAlgorithmList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "RS256"
          ],
          "description": "Danh sách thuật toán signature JWT"
        },
        "oidcScopes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "profile",
            "email",
            "phone"
          ],
          "description": "Danh sách scope OIDC"
        },
        "oidcCreateUser": {
          "type": "boolean",
          "description": "Tự động tạo user khi login OIDC"
        },
        "oidcUsernameClaim": {
          "type": "string",
          "default": "sub",
          "description": "Claim dùng làm username"
        },
        "oidcSync": {
          "type": "boolean",
          "description": "Đồng bộ thông tin user OIDC"
        },
        "oidcLogoutUrl": {
          "type": "string",
          "description": "URL logout OIDC"
        },
        "oidcAuthorizationPrompt": {
          "type": "string",
          "enum": [
            "none",
            "consent",
            "login",
            "select_account"
          ],
          "maxLength": 14,
          "description": "Prompt khi authorize OIDC"
        }
      },
      "required": [
        "name",
        "method"
      ]
    },
    "Autofollow": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "ID tự tăng"
        },
        "entityType": {
          "type": "string",
          "maxLength": 100,
          "description": "Loại entity mà user đang follow tự động"
        },
        "user": {
          "allOf": [
            {
              "$ref": "#/components/schemas/User"
            }
          ],
          "description": "Người dùng follow entity"
        }
      },
      "required": [
        "entityType",
        "user"
      ]
    },
    "Currency": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 3,
          "description": "Mã tiền tệ (ví dụ:USD, EUR)"
        },
        "rate": {
          "type": "number",
          "format": "float",
          "description": "Tỷ giá so với tiền tệ cơ sở"
        }
      },
      "required": [
        "id",
        "rate"
      ]
    },
    "DashboardTemplate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 100,
          "description": "Tên template dashboard"
        },
        "layout": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "description": "Cấu trúc layout của dashboard (JSON array)"
        },
        "dashletsOptions": {
          "type": "object",
          "description": "Tùy chọn dashlets (JSON object, disabled)"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Thời gian tạo"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Thời gian chỉnh sửa cuối"
        },
        "createdBy": {
          "allOf": [
            {
              "$ref": "#/components/schemas/User"
            },
            {
              "type": "object",
              "readOnly": true
            }
          ],
          "description": "Người tạo"
        },
        "modifiedBy": {
          "allOf": [
            {
              "$ref": "#/components/schemas/User"
            },
            {
              "type": "object",
              "readOnly": true
            }
          ],
          "description": "Người sửa cuối"
        }
      },
      "required": [
        "name",
        "layout"
      ]
    },
    "Email": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID duy nhất của email"
        },
        "name": {
          "type": "string",
          "description": "Tên email"
        },
        "subject": {
          "type": "string",
          "description": "Chủ đề email"
        },
        "from": {
          "type": "string",
          "description": "Email người gửi"
        },
        "to": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Danh sách email người nhận"
        },
        "cc": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Danh sách email CC"
        },
        "bcc": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Danh sách email BCC"
        },
        "replyTo": {
          "type": "string",
          "description": "Email reply-to"
        },
        "body": {
          "type": "string",
          "description": "Nội dung email HTML"
        },
        "bodyPlain": {
          "type": "string",
          "description": "Nội dung email plain text"
        },
        "isHtml": {
          "type": "boolean",
          "default": true,
          "description": "Email có phải HTML không"
        },
        "status": {
          "type": "string",
          "enum": [
            "Draft",
            "Sending",
            "Sent",
            "Archived",
            "Failed"
          ],
          "default": "Archived",
          "description": "Trạng thái email"
        },
        "hasAttachment": {
          "type": "boolean",
          "readOnly": true,
          "description": "Email có file đính kèm"
        },
        "dateSent": {
          "type": "string",
          "format": "date-time",
          "description": "Thời gian gửi"
        },
        "deliveryDate": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Thời gian giao email"
        },
        "sendAt": {
          "type": "string",
          "format": "date-time",
          "description": "Thời gian dự kiến gửi"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "createdBy": {
          "allOf": [
            {
              "$ref": "#/components/schemas/User"
            }
          ],
          "readOnly": true
        },
        "modifiedBy": {
          "allOf": [
            {
              "$ref": "#/components/schemas/User"
            }
          ],
          "readOnly": true
        },
        "assignedUser": {
          "allOf": [
            {
              "$ref": "#/components/schemas/User"
            }
          ]
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Attachment"
          },
          "description": "Danh sách file đính kèm"
        },
        "parent": {
          "type": "object",
          "description": "Entity cha của email (Account, Contact, Lead, Opportunity, Case)"
        },
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Task"
          },
          "description": "Task liên quan"
        }
      },
      "required": [
        "name",
        "subject",
        "from",
        "to"
      ]
    },
    "EmailAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Tên tài khoản email"
        },
        "emailAddress": {
          "type": "string",
          "maxLength": 100,
          "description": "Địa chỉ email"
        },
        "status": {
          "type": "string",
          "enum": [
            "Active",
            "Inactive"
          ],
          "default": "Active"
        },
        "host": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "minimum": 0,
          "maximum": 65535,
          "default": 993
        },
        "security": {
          "type": "string",
          "enum": [
            "",
            "SSL",
            "TLS"
          ],
          "default": "SSL"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "format": "password"
        },
        "monitoredFolders": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "INBOX"
          ]
        },
        "sentFolder": {
          "type": "string"
        },
        "storeSentEmails": {
          "type": "boolean"
        },
        "keepFetchedEmailsUnread": {
          "type": "boolean"
        },
        "fetchSince": {
          "type": "string",
          "format": "date"
        },
        "fetchData": {
          "type": "object",
          "readOnly": true
        },
        "emailFolder": {
          "$ref": "#/components/schemas/EmailFolder"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "assignedUser": {
          "$ref": "#/components/schemas/User"
        },
        "connectedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "useImap": {
          "type": "boolean",
          "default": true
        },
        "useSmtp": {
          "type": "boolean"
        },
        "smtpHost": {
          "type": "string"
        },
        "smtpPort": {
          "type": "integer",
          "minimum": 0,
          "maximum": 65535,
          "default": 587
        },
        "smtpAuth": {
          "type": "boolean",
          "default": true
        },
        "smtpSecurity": {
          "type": "string",
          "enum": [
            "",
            "SSL",
            "TLS"
          ],
          "default": "TLS"
        },
        "smtpUsername": {
          "type": "string"
        },
        "smtpPassword": {
          "type": "string",
          "format": "password"
        },
        "smtpAuthMechanism": {
          "type": "string",
          "enum": [
            "login",
            "crammd5",
            "plain"
          ],
          "default": "login"
        },
        "imapHandler": {
          "type": "string",
          "readOnly": true
        },
        "smtpHandler": {
          "type": "string",
          "readOnly": true
        },
        "createdBy": {
          "allOf": [
            {
              "$ref": "#/components/schemas/User"
            },
            {
              "readOnly": true
            }
          ]
        },
        "modifiedBy": {
          "allOf": [
            {
              "$ref": "#/components/schemas/User"
            },
            {
              "readOnly": true
            }
          ]
        }
      }
    },
    "EmailAddress": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "maxLength": 255
        },
        "lower": {
          "type": "string",
          "description": "Email viết thường"
        },
        "invalid": {
          "type": "boolean"
        },
        "optOut": {
          "type": "boolean"
        },
        "primary": {
          "type": "boolean",
          "readOnly": true
        }
      },
      "required": [
        "name",
        "lower"
      ]
    },
    "EmailFilter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 100,
          "description": "Tên bộ lọc email"
        },
        "from": {
          "type": "string",
          "maxLength": 255,
          "description": "Địa chỉ gửi"
        },
        "to": {
          "type": "string",
          "maxLength": 255,
          "description": "Địa chỉ nhận"
        },
        "subject": {
          "type": "string",
          "maxLength": 255,
          "description": "Chủ đề email"
        },
        "bodyContains": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Nội dung email chứa các từ khóa"
        },
        "bodyContainsAll": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Nội dung email phải chứa tất cả từ khóa"
        },
        "isGlobal": {
          "type": "boolean",
          "default": false,
          "description": "Bộ lọc có áp dụng toàn cục"
        },
        "parent": {
          "type": "object",
          "description": "Entity cha liên quan"
        },
        "action": {
          "type": "string",
          "default": "Skip",
          "enum": [
            "Skip",
            "Move to Folder",
            "Move to Group Folder",
            "None"
          ],
          "description": "Hành động khi email phù hợp"
        },
        "emailFolder": {
          "type": "object",
          "description": "Thư mục email đích"
        },
        "groupEmailFolder": {
          "type": "object",
          "description": "Thư mục nhóm đích"
        },
        "markAsRead": {
          "type": "boolean",
          "description": "Đánh dấu là đã đọc"
        },
        "skipNotification": {
          "type": "boolean",
          "description": "Bỏ qua thông báo"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Thời gian tạo"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Thời gian sửa"
        },
        "createdBy": {
          "allOf": [
            {
              "$ref": "#/components/schemas/User"
            },
            {
              "readOnly": true
            }
          ]
        },
        "modifiedBy": {
          "allOf": [
            {
              "$ref": "#/components/schemas/User"
            },
            {
              "readOnly": true
            }
          ]
        }
      },
      "required": [
        "name"
      ]
    },
    "EmailFolder": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 64,
          "description": "Tên thư mục email"
        },
        "order": {
          "type": "integer",
          "description": "Thứ tự hiển thị"
        },
        "assignedUser": {
          "allOf": [
            {
              "$ref": "#/components/schemas/User"
            },
            {
              "readOnly": true
            }
          ]
        },
        "skipNotifications": {
          "type": "boolean",
          "description": "Bỏ qua thông báo"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Thời gian tạo"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Thời gian sửa"
        },
        "createdBy": {
          "allOf": [
            {
              "$ref": "#/components/schemas/User"
            },
            {
              "readOnly": true
            }
          ]
        },
        "modifiedBy": {
          "allOf": [
            {
              "$ref": "#/components/schemas/User"
            },
            {
              "readOnly": true
            }
          ]
        }
      },
      "required": [
        "name"
      ]
    },
    "EmailTemplate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Tên template email"
        },
        "subject": {
          "type": "string",
          "description": "Tiêu đề email"
        },
        "body": {
          "type": "string",
          "description": "Nội dung email (wysiwyg)"
        },
        "isHtml": {
          "type": "boolean",
          "default": true,
          "description": "Email dạng HTML"
        },
        "oneOff": {
          "type": "boolean",
          "default": false,
          "description": "Template chỉ dùng một lần"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Attachment"
          }
        },
        "category": {
          "allOf": [
            {
              "$ref": "#/components/schemas/EmailTemplateCategory"
            }
          ]
        },
        "assignedUser": {
          "allOf": [
            {
              "$ref": "#/components/schemas/User"
            }
          ]
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Team"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "createdBy": {
          "allOf": [
            {
              "$ref": "#/components/schemas/User"
            },
            {
              "readOnly": true
            }
          ]
        },
        "modifiedBy": {
          "allOf": [
            {
              "$ref": "#/components/schemas/User"
            },
            {
              "readOnly": true
            }
          ]
        }
      },
      "required": [
        "name"
      ]
    },
    "EmailTemplateCategory": {
      "type": "object",
      "description": "Danh mục (category) chứa các mẫu email, hỗ trợ cây phân cấp",
      "properties": {
        "name": {
          "type": "string",
          "description": "Tên danh mục email"
        },
        "order": {
          "type": "integer",
          "minimum": 1,
          "description": "Thứ tự hiển thị trong danh sách"
        },
        "description": {
          "type": "string",
          "description": "Mô tả chi tiết về danh mục"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Ngày giờ tạo bản ghi"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Ngày giờ chỉnh sửa bản ghi cuối cùng"
        },
        "createdBy": {
          "allOf": [
            {
              "$ref": "#/components/schemas/User"
            },
            {
              "readOnly": true
            }
          ],
          "description": "Người tạo danh mục"
        },
        "modifiedBy": {
          "allOf": [
            {
              "$ref": "#/components/schemas/User"
            },
            {
              "readOnly": true
            }
          ],
          "description": "Người chỉnh sửa danh mục cuối cùng"
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Team"
          },
          "description": "Các team được gán quyền truy cập vào danh mục này"
        },
        "parent": {
          "allOf": [
            {
              "$ref": "#/components/schemas/EmailTemplateCategory"
            }
          ],
          "description": "Danh mục cha trong cây phân cấp"
        },
        "childList": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/EmailTemplateCategory"
          },
          "description": "Danh sách các danh mục con"
        }
      },
      "required": [
        "name",
        "order"
      ]
    },
    "Export": {
      "type": "object",
      "description": "Thông tin xuất dữ liệu và trạng thái xuất",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "Pending",
            "Running",
            "Success",
            "Failed"
          ],
          "default": "Pending",
          "description": "Trạng thái của quá trình xuất dữ liệu"
        },
        "params": {
          "type": "string",
          "description": "Các tham số được sử dụng khi xuất dữ liệu"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Ngày giờ tạo bản ghi xuất dữ liệu"
        },
        "createdBy": {
          "allOf": [
            {
              "$ref": "#/components/schemas/User"
            }
          ],
          "description": "Người tạo bản ghi xuất dữ liệu"
        },
        "notifyOnFinish": {
          "type": "boolean",
          "default": false,
          "description": "Có gửi thông báo khi quá trình xuất dữ liệu hoàn tất hay không"
        },
        "attachment": {
          "$ref": "#/components/schemas/Attachment",
          "description": "Tệp đính kèm kết quả xuất dữ liệu"
        }
      }
    },
    "Extension": {
      "type": "object",
      "description": "Thông tin về các extension cài đặt trong hệ thống",
      "properties": {
        "name": {
          "type": "string",
          "description": "Tên extension"
        },
        "version": {
          "type": "string",
          "maxLength": 50,
          "description": "Phiên bản của extension"
        },
        "fileList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Danh sách các file thuộc extension"
        },
        "licenseStatus": {
          "type": "string",
          "enum": [
            "",
            "Valid",
            "Invalid",
            "Expired",
            "Soft-Expired"
          ],
          "description": "Trạng thái bản quyền của extension"
        },
        "licenseStatusMessage": {
          "type": "string",
          "description": "Thông điệp liên quan đến trạng thái bản quyền"
        },
        "description": {
          "type": "string",
          "description": "Mô tả chi tiết về extension"
        },
        "isInstalled": {
          "type": "boolean",
          "default": false,
          "description": "Xác định extension đã được cài đặt hay chưa"
        },
        "checkVersionUrl": {
          "type": "string",
          "format": "url",
          "description": "URL để kiểm tra phiên bản mới của extension"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Ngày giờ tạo bản ghi extension"
        },
        "createdBy": {
          "allOf": [
            {
              "$ref": "#/components/schemas/User"
            }
          ],
          "description": "Người tạo bản ghi extension"
        }
      }
    },
    "ExternalAccount": {
      "type": "object",
      "description": "Thông tin về tài khoản bên ngoài được tích hợp với hệ thống",
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 64,
          "description": "ID duy nhất của tài khoản bên ngoài"
        },
        "data": {
          "type": "object",
          "description": "Dữ liệu bổ sung của tài khoản bên ngoài dưới dạng JSON"
        },
        "enabled": {
          "type": "boolean",
          "description": "Xác định tài khoản có đang kích hoạt hay không"
        },
        "isLocked": {
          "type": "boolean",
          "description": "Xác định tài khoản có bị khóa hay không"
        }
      }
    },
    "GroupEmailFolder": {
      "type": "object",
      "description": "Thư mục email nhóm, cho phép chia sẻ giữa các user/teams",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 64,
          "description": "Tên thư mục email nhóm"
        },
        "order": {
          "type": "integer",
          "description": "Thứ tự hiển thị thư mục"
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Team"
          },
          "description": "Các team được gán quyền truy cập vào thư mục"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Ngày giờ tạo thư mục"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Ngày giờ chỉnh sửa thư mục cuối cùng"
        },
        "createdBy": {
          "allOf": [
            {
              "$ref": "#/components/schemas/User"
            },
            {
              "readOnly": true
            }
          ],
          "description": "Người tạo thư mục"
        },
        "modifiedBy": {
          "allOf": [
            {
              "$ref": "#/components/schemas/User"
            },
            {
              "readOnly": true
            }
          ],
          "description": "Người chỉnh sửa thư mục cuối cùng"
        },
        "emails": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Email"
          },
          "description": "Danh sách các email thuộc thư mục này"
        }
      }
    },
    "Import": {
      "type": "object",
      "description": "Thông tin về quá trình nhập dữ liệu",
      "properties": {
        "entityType": {
          "type": "string",
          "description": "Loại thực thể (entity) được nhập"
        },
        "status": {
          "type": "string",
          "enum": [
            "Standby",
            "Pending",
            "In Process",
            "Complete",
            "Failed"
          ],
          "description": "Trạng thái hiện tại của quá trình nhập dữ liệu"
        },
        "file": {
          "type": "string",
          "description": "Tên hoặc đường dẫn tệp dữ liệu được nhập"
        },
        "importedCount": {
          "type": "integer",
          "description": "Số lượng bản ghi đã được nhập thành công"
        },
        "duplicateCount": {
          "type": "integer",
          "description": "Số lượng bản ghi trùng lặp bị bỏ qua"
        },
        "updatedCount": {
          "type": "integer",
          "description": "Số lượng bản ghi đã được cập nhật"
        },
        "lastIndex": {
          "type": "integer",
          "description": "Vị trí dòng cuối cùng được xử lý"
        },
        "params": {
          "type": "object",
          "description": "Các tham số bổ sung cho quá trình nhập"
        },
        "attributeList": {
          "type": "string",
          "description": "Danh sách các trường thuộc entity được nhập"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày giờ tạo bản ghi nhập dữ liệu"
        },
        "createdBy": {
          "type": "object",
          "description": "Người khởi tạo bản ghi nhập dữ liệu"
        }
      }
    },
    "ImportEml": {
      "type": "object",
      "description": "Thông tin về tệp email (.eml) được nhập",
      "properties": {
        "file": {
          "type": "string",
          "description": "Đường dẫn hoặc tên tệp EML"
        }
      }
    },
    "ImportEntity": {
      "type": "object",
      "description": "Trạng thái nhập từng bản ghi của entity",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID bản ghi nhập"
        },
        "entity": {
          "type": "object",
          "description": "Thông tin chi tiết bản ghi entity"
        },
        "import": {
          "type": "object",
          "description": "Thông tin quá trình import liên quan"
        },
        "isImported": {
          "type": "boolean",
          "description": "Xác định bản ghi đã được nhập thành công"
        },
        "isUpdated": {
          "type": "boolean",
          "description": "Xác định bản ghi đã được cập nhật"
        },
        "isDuplicate": {
          "type": "boolean",
          "description": "Xác định bản ghi là bản sao/trùng lặp"
        }
      }
    },
    "ImportError": {
      "type": "object",
      "description": "Thông tin lỗi xảy ra khi import dữ liệu",
      "properties": {
        "import": {
          "type": "object",
          "description": "Thông tin quá trình import liên quan"
        },
        "entityType": {
          "type": "object",
          "description": "Loại entity liên quan đến lỗi"
        },
        "rowIndex": {
          "type": "integer",
          "description": "Vị trí dòng trong dữ liệu import gây lỗi"
        },
        "exportRowIndex": {
          "type": "integer",
          "description": "Vị trí dòng tương ứng trong dữ liệu xuất (nếu có)"
        },
        "lineNumber": {
          "type": "integer",
          "description": "Số dòng trong file input gây lỗi"
        },
        "exportLineNumber": {
          "type": "integer",
          "description": "Số dòng tương ứng trong file xuất (nếu có)"
        },
        "type": {
          "type": "string",
          "enum": [
            "",
            "Validation",
            "No-Access",
            "Not-Found",
            "Integrity-Constraint-Violation"
          ],
          "description": "Loại lỗi xảy ra"
        },
        "validationFailures": {
          "type": "string",
          "description": "Mô tả các lỗi xác thực dữ liệu"
        },
        "row": {
          "type": "string",
          "description": "Nội dung dòng dữ liệu gây lỗi"
        }
      }
    },
    "InboundEmail": {
      "type": "object",
      "description": "Cấu hình và trạng thái của tài khoản email inbound",
      "properties": {
        "name": {
          "type": "string",
          "description": "Tên hiển thị của tài khoản email"
        },
        "emailAddress": {
          "type": "string",
          "maxLength": 100,
          "description": "Địa chỉ email của tài khoản"
        },
        "status": {
          "type": "string",
          "enum": [
            "Active",
            "Inactive"
          ],
          "description": "Trạng thái hoạt động của tài khoản email"
        },
        "host": {
          "type": "string",
          "description": "Địa chỉ máy chủ email"
        },
        "port": {
          "type": "integer",
          "description": "Cổng kết nối máy chủ email"
        },
        "security": {
          "type": "string",
          "enum": [
            "",
            "SSL",
            "TLS"
          ],
          "description": "Loại bảo mật kết nối"
        },
        "username": {
          "type": "string",
          "description": "Tên đăng nhập tài khoản email"
        },
        "password": {
          "type": "string",
          "description": "Mật khẩu tài khoản email"
        },
        "monitoredFolders": {
          "type": "string",
          "description": "Danh sách thư mục được theo dõi"
        },
        "fetchSince": {
          "type": "string",
          "description": "Ngày giờ bắt đầu lấy email"
        },
        "fetchData": {
          "type": "object",
          "description": "Dữ liệu fetch email hiện tại (read-only)"
        },
        "assignToUser": {
          "type": "object",
          "description": "Người dùng được gán nhận email"
        },
        "team": {
          "type": "object",
          "description": "Team được gán với tài khoản"
        },
        "teams": {
          "type": "string",
          "description": "Danh sách các team liên quan"
        },
        "addAllTeamUsers": {
          "type": "boolean",
          "description": "Có thêm tất cả thành viên team hay không"
        },
        "isSystem": {
          "type": "boolean",
          "description": "Xác định tài khoản là hệ thống hay không"
        },
        "sentFolder": {
          "type": "string",
          "description": "Thư mục lưu email đã gửi"
        },
        "storeSentEmails": {
          "type": "boolean",
          "description": "Có lưu email đã gửi hay không"
        },
        "keepFetchedEmailsUnread": {
          "type": "boolean",
          "description": "Có giữ email đã fetch ở trạng thái chưa đọc hay không"
        },
        "connectedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày giờ lần kết nối gần nhất"
        },
        "excludeFromReply": {
          "type": "boolean",
          "description": "Loại bỏ khỏi chức năng trả lời tự động hay không"
        },
        "useImap": {
          "type": "boolean",
          "description": "Có sử dụng IMAP không"
        },
        "useSmtp": {
          "type": "boolean",
          "description": "Có sử dụng SMTP không"
        },
        "smtpIsShared": {
          "type": "boolean",
          "description": "SMTP có chia sẻ giữa nhiều user không"
        },
        "smtpIsForMassEmail": {
          "type": "boolean",
          "description": "SMTP dùng cho gửi email hàng loạt không"
        },
        "smtpHost": {
          "type": "string",
          "description": "Máy chủ SMTP"
        },
        "smtpPort": {
          "type": "integer",
          "description": "Cổng SMTP"
        },
        "smtpAuth": {
          "type": "boolean",
          "description": "SMTP yêu cầu xác thực không"
        },
        "smtpSecurity": {
          "type": "string",
          "enum": [
            "",
            "SSL",
            "TLS"
          ],
          "description": "Loại bảo mật SMTP"
        },
        "smtpUsername": {
          "type": "string",
          "description": "Tên đăng nhập SMTP"
        },
        "smtpPassword": {
          "type": "string",
          "description": "Mật khẩu SMTP"
        },
        "smtpAuthMechanism": {
          "type": "string",
          "enum": [
            "login",
            "crammd5",
            "plain"
          ],
          "description": "Cơ chế xác thực SMTP"
        },
        "createCase": {
          "type": "boolean",
          "description": "Tự động tạo case khi nhận email"
        },
        "caseDistribution": {
          "type": "string",
          "enum": [
            "",
            "Direct-Assignment",
            "Round-Robin",
            "Least-Busy"
          ],
          "description": "Cách phân bổ case tự động"
        },
        "targetUserPosition": {
          "type": "string",
          "description": "Vị trí người nhận email/case"
        },
        "reply": {
          "type": "boolean",
          "description": "Cho phép trả lời email tự động không"
        },
        "replyEmailTemplate": {
          "type": "object",
          "description": "Mẫu email trả lời"
        },
        "replyFromAddress": {
          "type": "string",
          "description": "Địa chỉ email trả lời"
        },
        "replyToAddress": {
          "type": "string",
          "description": "Địa chỉ email nhận trả lời"
        },
        "replyFromName": {
          "type": "string",
          "description": "Tên người gửi trả lời"
        },
        "fromName": {
          "type": "string",
          "description": "Tên người gửi hiển thị"
        },
        "groupEmailFolder": {
          "type": "object",
          "description": "Thư mục email nhóm liên kết"
        },
        "imapHandler": {
          "type": "string",
          "description": "Handler IMAP (read-only)"
        },
        "smtpHandler": {
          "type": "string",
          "description": "Handler SMTP (read-only)"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày giờ tạo bản ghi"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày giờ chỉnh sửa bản ghi cuối cùng"
        },
        "createdBy": {
          "type": "object",
          "description": "Người tạo bản ghi"
        },
        "modifiedBy": {
          "type": "object",
          "description": "Người chỉnh sửa bản ghi cuối cùng"
        }
      }
    },
    "Integration": {
      "type": "object",
      "description": "Thông tin về tích hợp hệ thống hoặc ứng dụng bên ngoài",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID duy nhất của bản ghi tích hợp"
        },
        "data": {
          "type": "object",
          "description": "Dữ liệu cấu hình hoặc metadata của tích hợp"
        },
        "enabled": {
          "type": "boolean",
          "description": "Xác định tích hợp có đang hoạt động hay không"
        }
      }
    },
    "Job": {
      "type": "object",
      "description": "Thông tin về một job (tác vụ) chạy theo lịch hoặc theo yêu cầu",
      "properties": {
        "name": {
          "type": "string",
          "description": "Tên hiển thị của job"
        },
        "status": {
          "type": "string",
          "enum": [
            "Pending",
            "Ready",
            "Running",
            "Success",
            "Failed"
          ],
          "description": "Trạng thái hiện tại của job"
        },
        "executeTime": {
          "type": "string",
          "format": "date-time",
          "description": "Thời gian dự kiến thực thi job"
        },
        "number": {
          "type": "integer",
          "description": "Số thứ tự hoặc identifier nội bộ của job"
        },
        "className": {
          "type": "string",
          "maxLength": 255,
          "description": "Tên class thực thi job"
        },
        "serviceName": {
          "type": "string",
          "maxLength": 100,
          "description": "Tên service thực thi job"
        },
        "methodName": {
          "type": "string",
          "maxLength": 100,
          "description": "Tên phương thức thực thi job"
        },
        "job": {
          "type": "string",
          "description": "Tên hoặc mã job"
        },
        "data": {
          "type": "object",
          "description": "Dữ liệu bổ sung liên quan tới job"
        },
        "scheduledJob": {
          "type": "object",
          "description": "Thông tin job đã được lên lịch"
        },
        "scheduledJobJob": {
          "type": "object",
          "description": "Job liên kết với scheduled job"
        },
        "queue": {
          "type": "string",
          "maxLength": 36,
          "description": "Tên queue mà job đang chờ xử lý"
        },
        "group": {
          "type": "string",
          "maxLength": 128,
          "description": "Nhóm người dùng hoặc hệ thống liên quan tới job"
        },
        "targetGroup": {
          "type": "string",
          "maxLength": 128,
          "description": "Nhóm đích mà job tác động"
        },
        "startedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Thời gian job bắt đầu"
        },
        "executedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Thời gian job kết thúc thực tế"
        },
        "pid": {
          "type": "integer",
          "description": "Process ID của job nếu có"
        },
        "attempts": {
          "type": "integer",
          "description": "Số lần job đã được thử thực thi"
        },
        "targetId": {
          "type": "string",
          "maxLength": 48,
          "description": "ID của đối tượng mà job tác động"
        },
        "targetType": {
          "type": "string",
          "maxLength": 64,
          "description": "Loại đối tượng mà job tác động"
        },
        "failedAttempts": {
          "type": "integer",
          "description": "Số lần job thất bại"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày giờ tạo job"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày giờ chỉnh sửa job cuối cùng"
        }
      }
    },
    "KanbanOrder": {
      "type": "object",
      "description": "Thứ tự các entity trên bảng Kanban cho user hoặc nhóm",
      "properties": {
        "order": {
          "type": "integer",
          "description": "Vị trí sắp xếp của entity trên Kanban"
        },
        "entity": {
          "type": "object",
          "description": "Entity liên quan đến thứ tự Kanban"
        },
        "group": {
          "type": "string",
          "maxLength": 100,
          "description": "Nhóm liên quan tới thứ tự Kanban"
        },
        "user": {
          "type": "object",
          "description": "Người dùng liên quan tới thứ tự Kanban"
        }
      }
    },
    "LayoutRecord": {
      "type": "object",
      "description": "Bản ghi layout của một entity",
      "properties": {
        "name": {
          "type": "string",
          "description": "Tên bản ghi layout"
        },
        "layoutSet": {
          "type": "object",
          "description": "LayoutSet mà bản ghi này thuộc về"
        },
        "data": {
          "type": "string",
          "description": "Dữ liệu layout chi tiết (JSON hoặc string)"
        }
      }
    },
    "LayoutSet": {
      "type": "object",
      "description": "Tập hợp các layout dùng trong hệ thống",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 100,
          "description": "Tên layout set"
        },
        "layoutList": {
          "type": "string",
          "description": "Danh sách layout trong set (có thể là JSON hoặc string)"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày giờ tạo layout set"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày giờ chỉnh sửa layout set cuối cùng"
        }
      }
    },
    "LeadCapture": {
      "type": "object",
      "description": "Cấu hình và thông tin về Lead Capture form",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 100,
          "description": "Tên hiển thị của Lead Capture"
        },
        "campaign": {
          "type": "object",
          "description": "Chiến dịch liên kết với Lead Capture"
        },
        "isActive": {
          "type": "boolean",
          "description": "Xác định liệu Lead Capture có đang hoạt động hay không"
        },
        "subscribeToTargetList": {
          "type": "boolean",
          "description": "Tự động thêm người đăng ký vào target list"
        },
        "subscribeContactToTargetList": {
          "type": "boolean",
          "description": "Tự động thêm liên hệ đã tồn tại vào target list"
        },
        "targetList": {
          "type": "object",
          "description": "Target list mà Lead Capture sẽ thêm người đăng ký vào"
        },
        "fieldList": {
          "type": "string",
          "description": "Danh sách các field cần capture"
        },
        "fieldParams": {
          "type": "object",
          "description": "Thông số chi tiết cho các field"
        },
        "duplicateCheck": {
          "type": "boolean",
          "description": "Kiểm tra dữ liệu trùng lặp trước khi tạo lead"
        },
        "optInConfirmation": {
          "type": "boolean",
          "description": "Có yêu cầu người dùng xác nhận đăng ký hay không"
        },
        "optInConfirmationEmailTemplate": {
          "type": "object",
          "description": "Email template dùng để gửi xác nhận Opt-in"
        },
        "optInConfirmationLifetime": {
          "type": "integer",
          "description": "Thời gian hiệu lực của yêu cầu Opt-in (tính theo giờ)"
        },
        "optInConfirmationSuccessMessage": {
          "type": "string",
          "description": "Thông báo hiển thị khi Opt-in thành công"
        },
        "createLeadBeforeOptInConfirmation": {
          "type": "boolean",
          "description": "Tạo lead ngay cả trước khi người dùng xác nhận Opt-in"
        },
        "skipOptInConfirmationIfSubscribed": {
          "type": "boolean",
          "description": "Bỏ qua bước xác nhận Opt-in nếu người dùng đã đăng ký"
        },
        "leadSource": {
          "type": "string",
          "description": "Nguồn lead"
        },
        "apiKey": {
          "type": "string",
          "maxLength": 36,
          "description": "API key dùng để gửi dữ liệu từ bên ngoài"
        },
        "formId": {
          "type": "string",
          "maxLength": 17,
          "description": "ID duy nhất của form"
        },
        "formEnabled": {
          "type": "boolean",
          "description": "Xác định form có đang hoạt động hay không"
        },
        "formTitle": {
          "type": "string",
          "maxLength": 80,
          "description": "Tiêu đề hiển thị trên form"
        },
        "formTheme": {
          "type": "string",
          "description": "Theme hoặc giao diện của form"
        },
        "formText": {
          "type": "string",
          "description": "Nội dung văn bản hiển thị trên form"
        },
        "formSuccessText": {
          "type": "string",
          "description": "Thông báo khi submit form thành công"
        },
        "formSuccessRedirectUrl": {
          "type": "string",
          "description": "URL chuyển hướng sau khi submit form thành công"
        },
        "formLanguage": {
          "type": "string",
          "description": "Ngôn ngữ hiển thị trên form"
        },
        "formFrameAncestors": {
          "type": "string",
          "description": "Cấu hình security cho iframe (frame-ancestors)"
        },
        "formCaptcha": {
          "type": "boolean",
          "description": "Bật/tắt Captcha trên form"
        },
        "targetTeam": {
          "type": "object",
          "description": "Team nhận lead từ form"
        },
        "exampleRequestUrl": {
          "type": "string",
          "description": "URL ví dụ dùng để gửi request tới form"
        },
        "exampleRequestMethod": {
          "type": "string",
          "description": "Phương thức HTTP ví dụ (GET/POST)"
        },
        "exampleRequestPayload": {
          "type": "string",
          "description": "Payload ví dụ gửi tới form"
        },
        "exampleRequestHeaders": {
          "type": "string",
          "description": "Headers ví dụ gửi tới form"
        },
        "formUrl": {
          "type": "string",
          "description": "URL chính thức của form"
        },
        "inboundEmail": {
          "type": "object",
          "description": "Tài khoản email inbound liên kết với form"
        },
        "smtpAccount": {
          "type": "string",
          "description": "Tài khoản SMTP dùng gửi email từ form"
        },
        "phoneNumberCountry": {
          "type": "string",
          "description": "Quốc gia mặc định cho số điện thoại"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày giờ tạo Lead Capture"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày giờ chỉnh sửa Lead Capture"
        },
        "createdBy": {
          "type": "object",
          "description": "Người tạo Lead Capture"
        },
        "modifiedBy": {
          "type": "object",
          "description": "Người chỉnh sửa Lead Capture"
        }
      }
    },
    "LeadCaptureLogRecord": {
      "type": "object",
      "description": "Bản ghi log của Lead Capture",
      "properties": {
        "number": {
          "type": "integer",
          "format": "int64",
          "description": "Số thứ tự của bản ghi log"
        },
        "data": {
          "type": "object",
          "description": "Dữ liệu đã capture"
        },
        "isCreated": {
          "type": "boolean",
          "description": "Xác định liệu lead đã được tạo thành công hay chưa"
        },
        "description": {
          "type": "string",
          "description": "Mô tả chi tiết bản ghi log"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày giờ tạo bản ghi log"
        },
        "leadCapture": {
          "type": "object",
          "description": "Lead Capture liên quan"
        },
        "target": {
          "type": "object",
          "description": "Entity target liên quan đến log"
        }
      }
    },
    "MassAction": {
      "type": "object",
      "description": "Thông tin về một Mass Action trên các entity",
      "properties": {
        "entityType": {
          "type": "string",
          "description": "Loại entity mà Mass Action tác động"
        },
        "action": {
          "type": "string",
          "description": "Tên hành động"
        },
        "status": {
          "type": "string",
          "enum": [
            "Pending",
            "Running",
            "Success",
            "Failed"
          ],
          "description": "Trạng thái hiện tại của Mass Action"
        },
        "data": {
          "type": "object",
          "description": "Dữ liệu bổ sung cho Mass Action"
        },
        "params": {
          "type": "string",
          "description": "Tham số của Mass Action"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày giờ tạo Mass Action"
        },
        "createdBy": {
          "type": "object",
          "description": "Người tạo Mass Action"
        },
        "processedCount": {
          "type": "integer",
          "description": "Số lượng entity đã xử lý"
        },
        "notifyOnFinish": {
          "type": "boolean",
          "description": "Thông báo khi Mass Action hoàn tất"
        }
      }
    },
    "NextNumber": {
      "type": "object",
      "description": "Thông tin số thứ tự tiếp theo cho một entity",
      "properties": {
        "entityType": {
          "type": "string",
          "maxLength": 100,
          "description": "Loại entity"
        },
        "fieldName": {
          "type": "string",
          "maxLength": 100,
          "description": "Tên field lưu số thứ tự"
        },
        "value": {
          "type": "integer",
          "description": "Giá trị số thứ tự tiếp theo"
        }
      }
    },
    "Note": {
      "type": "object",
      "description": "Bản ghi note hoặc activity log",
      "properties": {
        "post": {
          "type": "string",
          "description": "Nội dung post hoặc note"
        },
        "data": {
          "type": "object",
          "description": "Dữ liệu liên quan"
        },
        "type": {
          "type": "string",
          "enum": [
            "Post",
            "Create",
            "CreateRelated",
            "Update",
            "Status",
            "Assign",
            "Relate",
            "Unrelate",
            "EmailReceived",
            "EmailSent"
          ],
          "description": "Loại note/activity"
        },
        "targetType": {
          "type": "string",
          "enum": [
            "self",
            "all",
            "teams",
            "users",
            "portals"
          ],
          "description": "Đối tượng nhận thông báo note"
        },
        "parent": {
          "type": "object",
          "description": "Entity cha của note"
        },
        "related": {
          "type": "object",
          "description": "Entity liên quan tới note"
        },
        "attachments": {
          "type": "string",
          "description": "Danh sách attachment liên kết với note"
        },
        "number": {
          "type": "integer",
          "format": "int64",
          "description": "Số thứ tự của note"
        },
        "teams": {
          "type": "string",
          "description": "Danh sách team liên quan"
        },
        "portals": {
          "type": "string",
          "description": "Danh sách portal liên quan"
        },
        "users": {
          "type": "string",
          "description": "Danh sách user liên quan"
        },
        "isGlobal": {
          "type": "boolean",
          "description": "Xác định note có là global hay không"
        },
        "createdByGender": {
          "type": "object",
          "description": "Giới tính người tạo note"
        },
        "notifiedUserIdList": {
          "type": "string",
          "description": "Danh sách user được thông báo"
        },
        "isInternal": {
          "type": "boolean",
          "description": "Xác định note là nội bộ hay công khai"
        },
        "isPinned": {
          "type": "boolean",
          "description": "Xác định note có được ghim hay không"
        },
        "reactionCounts": {
          "type": "object",
          "description": "Số lượt reaction của note"
        },
        "myReactions": {
          "type": "string",
          "description": "Reaction của người hiện tại"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày giờ tạo note"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày giờ chỉnh sửa note"
        },
        "createdBy": {
          "type": "object",
          "description": "Người tạo note"
        },
        "modifiedBy": {
          "type": "object",
          "description": "Người chỉnh sửa note"
        }
      }
    },
    "Notification": {
      "type": "object",
      "description": "Thông tin thông báo (notification) cho người dùng",
      "properties": {
        "number": {
          "type": "integer",
          "format": "int64",
          "description": "Số thứ tự của thông báo"
        },
        "data": {
          "type": "object",
          "description": "Dữ liệu bổ sung của thông báo"
        },
        "noteData": {
          "type": "object",
          "description": "Dữ liệu note liên quan đến thông báo"
        },
        "type": {
          "type": "string",
          "description": "Loại thông báo"
        },
        "read": {
          "type": "boolean",
          "description": "Trạng thái đã đọc hay chưa"
        },
        "emailIsProcessed": {
          "type": "boolean",
          "description": "Xác định email liên quan đã được xử lý chưa"
        },
        "user": {
          "type": "object",
          "description": "Người nhận thông báo"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày giờ tạo thông báo"
        },
        "message": {
          "type": "string",
          "description": "Nội dung thông báo"
        },
        "related": {
          "type": "object",
          "description": "Entity liên quan đến thông báo"
        },
        "relatedParent": {
          "type": "object",
          "description": "Entity cha liên quan đến thông báo"
        },
        "createdBy": {
          "type": "object",
          "description": "Người tạo thông báo"
        }
      }
    },
    "OAuthAccount": {
      "type": "object",
      "description": "Tài khoản OAuth liên kết với người dùng",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 100,
          "description": "Tên hiển thị tài khoản OAuth"
        },
        "provider": {
          "type": "object",
          "description": "Nhà cung cấp OAuth"
        },
        "user": {
          "type": "object",
          "description": "Người dùng sở hữu tài khoản OAuth"
        },
        "hasAccessToken": {
          "type": "boolean",
          "description": "Xác định liệu access token có tồn tại hay không"
        },
        "providerIsActive": {
          "type": "object",
          "description": "Trạng thái hoạt động của nhà cung cấp OAuth"
        },
        "data": {
          "type": "object",
          "description": "Dữ liệu bổ sung liên quan đến tài khoản OAuth"
        },
        "accessToken": {
          "type": "string",
          "description": "Access token của tài khoản"
        },
        "refreshToken": {
          "type": "string",
          "description": "Refresh token của tài khoản"
        },
        "description": {
          "type": "string",
          "description": "Mô tả tài khoản OAuth"
        },
        "expiresAt": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày giờ token hết hạn"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày giờ tạo tài khoản OAuth"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày giờ chỉnh sửa tài khoản OAuth"
        },
        "createdBy": {
          "type": "object",
          "description": "Người tạo tài khoản OAuth"
        },
        "modifiedBy": {
          "type": "object",
          "description": "Người chỉnh sửa tài khoản OAuth"
        }
      }
    },
    "OAuthProvider": {
      "type": "object",
      "description": "Nhà cung cấp OAuth",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 100,
          "description": "Tên nhà cung cấp"
        },
        "isActive": {
          "type": "boolean",
          "description": "Trạng thái hoạt động của nhà cung cấp"
        },
        "clientId": {
          "type": "string",
          "maxLength": 150,
          "description": "Client ID dùng cho OAuth"
        },
        "clientSecret": {
          "type": "string",
          "description": "Client Secret dùng cho OAuth"
        },
        "authorizationEndpoint": {
          "type": "string",
          "description": "URL endpoint để lấy authorization code"
        },
        "tokenEndpoint": {
          "type": "string",
          "description": "URL endpoint để lấy access token"
        },
        "authorizationRedirectUri": {
          "type": "string",
          "description": "Redirect URI sau khi xác thực OAuth"
        },
        "authorizationPrompt": {
          "type": "string",
          "enum": [
            "none",
            "consent",
            "login",
            "select_account"
          ],
          "description": "Cách yêu cầu xác thực từ người dùng"
        },
        "scopes": {
          "type": "string",
          "description": "Danh sách scope yêu cầu"
        },
        "authorizationParams": {
          "type": "object",
          "description": "Các tham số bổ sung cho quá trình authorization"
        },
        "scopeSeparator": {
          "type": "string",
          "maxLength": 1,
          "description": "Ký tự phân tách các scope"
        },
        "description": {
          "type": "string",
          "description": "Mô tả nhà cung cấp OAuth"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày giờ tạo nhà cung cấp OAuth"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày giờ chỉnh sửa nhà cung cấp OAuth"
        },
        "createdBy": {
          "type": "object",
          "description": "Người tạo nhà cung cấp OAuth"
        },
        "modifiedBy": {
          "type": "object",
          "description": "Người chỉnh sửa nhà cung cấp OAuth"
        }
      }
    },
    "PasswordChangeRequest": {
      "type": "object",
      "description": "Yêu cầu đổi mật khẩu của người dùng",
      "properties": {
        "requestId": {
          "type": "string",
          "maxLength": 64,
          "description": "ID duy nhất của yêu cầu đổi mật khẩu"
        },
        "user": {
          "type": "object",
          "description": "Người dùng thực hiện yêu cầu đổi mật khẩu"
        },
        "url": {
          "type": "string",
          "description": "URL để người dùng thực hiện đổi mật khẩu"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày giờ tạo yêu cầu đổi mật khẩu"
        }
      }
    },
    "PhoneNumber": {
      "type": "object",
      "description": "Thông tin số điện thoại của entity",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 36,
          "description": "Tên hoặc nhãn của số điện thoại"
        },
        "type": {
          "type": "string",
          "description": "Loại số điện thoại (ví dụ: mobile, home, work)"
        },
        "numeric": {
          "type": "string",
          "maxLength": 36,
          "description": "Số điện thoại dạng chuỗi số"
        },
        "invalid": {
          "type": "boolean",
          "description": "Xác định số điện thoại có hợp lệ hay không"
        },
        "optOut": {
          "type": "boolean",
          "description": "Xác định liệu người dùng đã từ chối nhận cuộc gọi/SMS"
        },
        "primary": {
          "type": "boolean",
          "description": "Xác định số điện thoại chính hay phụ"
        }
      }
    },
    "Portal": {
      "type": "object",
      "description": "Cấu hình portal của hệ thống",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 100,
          "description": "Tên portal"
        },
        "logo": {
          "type": "string",
          "description": "Logo portal"
        },
        "url": {
          "type": "string",
          "description": "URL truy cập portal"
        },
        "customId": {
          "type": "string",
          "maxLength": 36,
          "description": "ID tùy chỉnh của portal"
        },
        "isActive": {
          "type": "boolean",
          "description": "Xác định portal có đang hoạt động"
        },
        "isDefault": {
          "type": "boolean",
          "description": "Xác định portal mặc định"
        },
        "portalRoles": {
          "type": "string",
          "description": "Danh sách vai trò portal"
        },
        "tabList": {
          "type": "string",
          "description": "Danh sách tab hiển thị trên portal"
        },
        "quickCreateList": {
          "type": "string",
          "description": "Danh sách entity tạo nhanh"
        },
        "applicationName": {
          "type": "string",
          "description": "Tên ứng dụng"
        },
        "companyLogo": {
          "type": "string",
          "description": "Logo công ty"
        },
        "theme": {
          "type": "string",
          "description": "Theme giao diện portal"
        },
        "themeParams": {
          "type": "object",
          "description": "Các thông số theme"
        },
        "language": {
          "type": "string",
          "description": "Ngôn ngữ hiển thị portal"
        },
        "timeZone": {
          "type": "string",
          "description": "Múi giờ portal"
        },
        "dateFormat": {
          "type": "string",
          "description": "Định dạng ngày"
        },
        "timeFormat": {
          "type": "string",
          "description": "Định dạng giờ"
        },
        "weekStart": {
          "type": "string",
          "description": "Ngày bắt đầu tuần"
        },
        "defaultCurrency": {
          "type": "string",
          "description": "Tiền tệ mặc định"
        },
        "dashboardLayout": {
          "type": "string",
          "description": "Layout dashboard"
        },
        "dashletsOptions": {
          "type": "object",
          "description": "Cấu hình dashlets"
        },
        "customUrl": {
          "type": "string",
          "description": "URL tùy chỉnh"
        },
        "layoutSet": {
          "type": "object",
          "description": "Layout set liên kết"
        },
        "authenticationProvider": {
          "type": "object",
          "description": "Nhà cung cấp xác thực portal"
        },
        "authTokenLifetime": {
          "type": "string",
          "description": "Thời gian sống của auth token"
        },
        "authTokenMaxIdleTime": {
          "type": "string",
          "description": "Thời gian tối đa auth token không hoạt động"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày giờ chỉnh sửa portal"
        },
        "modifiedBy": {
          "type": "object",
          "description": "Người chỉnh sửa portal"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày giờ tạo portal"
        },
        "createdBy": {
          "type": "object",
          "description": "Người tạo portal"
        }
      }
    },
    "PortalRole": {
      "type": "object",
      "description": "Vai trò của người dùng trong portal",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 150,
          "description": "Tên vai trò"
        },
        "data": {
          "type": "object",
          "description": "Dữ liệu bổ sung của vai trò"
        },
        "fieldData": {
          "type": "object",
          "description": "Dữ liệu các field liên quan tới vai trò"
        },
        "exportPermission": {
          "type": "string",
          "enum": [
            "not-set",
            "yes",
            "no"
          ],
          "description": "Quyền export dữ liệu"
        },
        "massUpdatePermission": {
          "type": "string",
          "enum": [
            "not-set",
            "yes",
            "no"
          ],
          "description": "Quyền mass update"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày giờ tạo vai trò"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày giờ chỉnh sửa vai trò"
        }
      }
    },
    "Preferences": {
      "type": "object",
      "description": "Cấu hình và thiết lập cá nhân của người dùng",
      "properties": {
        "timeZone": {
          "type": "string",
          "description": "Múi giờ của người dùng"
        },
        "dateFormat": {
          "type": "string",
          "description": "Định dạng ngày"
        },
        "timeFormat": {
          "type": "string",
          "description": "Định dạng giờ"
        },
        "weekStart": {
          "type": "string",
          "description": "Ngày bắt đầu tuần"
        },
        "defaultCurrency": {
          "type": "string",
          "description": "Tiền tệ mặc định"
        },
        "thousandSeparator": {
          "type": "string",
          "maxLength": 1,
          "description": "Ký tự phân tách hàng nghìn"
        },
        "decimalMark": {
          "type": "string",
          "maxLength": 1,
          "description": "Ký tự phân cách thập phân"
        },
        "dashboardLayout": {
          "type": "string",
          "description": "Layout dashboard cá nhân"
        },
        "dashletsOptions": {
          "type": "object",
          "description": "Cấu hình dashlets của dashboard"
        },
        "dashboardLocked": {
          "type": "boolean",
          "description": "Xác định liệu dashboard có bị khóa hay không"
        },
        "importParams": {
          "type": "object",
          "description": "Tham số mặc định cho import dữ liệu"
        },
        "sharedCalendarUserList": {
          "type": "string",
          "description": "Danh sách người dùng được chia sẻ lịch"
        },
        "calendarViewDataList": {
          "type": "string",
          "description": "Dữ liệu cấu hình chế độ xem lịch"
        },
        "presetFilters": {
          "type": "object",
          "description": "Bộ lọc preset của người dùng"
        },
        "language": {
          "type": "string",
          "description": "Ngôn ngữ hiển thị"
        },
        "exportDelimiter": {
          "type": "string",
          "maxLength": 1,
          "description": "Ký tự phân cách dữ liệu khi export"
        },
        "receiveAssignmentEmailNotifications": {
          "type": "boolean",
          "description": "Nhận email thông báo khi được giao nhiệm vụ"
        },
        "receiveMentionEmailNotifications": {
          "type": "boolean",
          "description": "Nhận email khi được nhắc đến"
        },
        "receiveStreamEmailNotifications": {
          "type": "boolean",
          "description": "Nhận email thông báo từ stream"
        },
        "assignmentNotificationsIgnoreEntityTypeList": {
          "type": "string",
          "description": "Danh sách loại entity không nhận thông báo giao nhiệm vụ"
        },
        "assignmentEmailNotificationsIgnoreEntityTypeList": {
          "type": "string",
          "description": "Danh sách loại entity không nhận email thông báo giao nhiệm vụ"
        },
        "reactionNotifications": {
          "type": "boolean",
          "description": "Nhận thông báo khi có reaction"
        },
        "autoFollowEntityTypeList": {
          "type": "string",
          "description": "Danh sách loại entity tự động follow"
        },
        "signature": {
          "type": "string",
          "description": "Chữ ký email mặc định"
        },
        "defaultReminders": {
          "type": "string",
          "description": "Nhắc nhở mặc định cho các entity"
        },
        "defaultRemindersTask": {
          "type": "string",
          "description": "Nhắc nhở mặc định cho task"
        },
        "theme": {
          "type": "string",
          "description": "Theme giao diện người dùng"
        },
        "themeParams": {
          "type": "object",
          "description": "Các thông số theme"
        },
        "pageContentWidth": {
          "type": "string",
          "enum": [
            "",
            "Wide"
          ],
          "description": "Chiều rộng hiển thị nội dung trang"
        },
        "useCustomTabList": {
          "type": "boolean",
          "description": "Có sử dụng danh sách tab tùy chỉnh hay không"
        },
        "addCustomTabs": {
          "type": "boolean",
          "description": "Cho phép thêm tab tùy chỉnh"
        },
        "tabList": {
          "type": "string",
          "description": "Danh sách tab tùy chỉnh"
        },
        "emailReplyToAllByDefault": {
          "type": "boolean",
          "description": "Mặc định trả lời tất cả khi trả lời email"
        },
        "emailReplyForceHtml": {
          "type": "boolean",
          "description": "Ép định dạng HTML khi trả lời email"
        },
        "isPortalUser": {
          "type": "boolean",
          "description": "Xác định người dùng là portal user hay không"
        },
        "doNotFillAssignedUserIfNotRequired": {
          "type": "boolean",
          "description": "Không tự động điền assigned user nếu không bắt buộc"
        },
        "followEntityOnStreamPost": {
          "type": "boolean",
          "description": "Tự động follow entity khi post lên stream"
        },
        "followCreatedEntities": {
          "type": "boolean",
          "description": "Tự động follow các entity đã tạo"
        },
        "followCreatedEntityTypeList": {
          "type": "string",
          "description": "Danh sách loại entity tự động follow sau khi tạo"
        },
        "emailUseExternalClient": {
          "type": "boolean",
          "description": "Sử dụng client email bên ngoài"
        },
        "scopeColorsDisabled": {
          "type": "boolean",
          "description": "Tắt màu theo scope"
        },
        "tabColorsDisabled": {
          "type": "boolean",
          "description": "Tắt màu tab"
        },
        "textSearchStoringDisabled": {
          "type": "boolean",
          "description": "Tắt lưu kết quả tìm kiếm"
        },
        "calendarSlotDuration": {
          "type": "string",
          "description": "Thời lượng mỗi slot trong calendar"
        },
        "calendarScrollHour": {
          "type": "string",
          "description": "Giờ mặc định khi scroll lịch"
        }
      }
    },
    "Role": {
      "type": "object",
      "description": "Vai trò người dùng với các quyền hạn chi tiết",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 150,
          "description": "Tên vai trò"
        },
        "assignmentPermission": {
          "type": "string",
          "enum": [
            "not-set",
            "all",
            "team",
            "no"
          ],
          "description": "Quyền quản lý phân công nhiệm vụ"
        },
        "userPermission": {
          "type": "string",
          "enum": [
            "not-set",
            "all",
            "team",
            "no"
          ],
          "description": "Quyền quản lý người dùng"
        },
        "messagePermission": {
          "type": "string",
          "enum": [
            "not-set",
            "all",
            "team",
            "no"
          ],
          "description": "Quyền quản lý message"
        },
        "portalPermission": {
          "type": "string",
          "enum": [
            "not-set",
            "yes",
            "no"
          ],
          "description": "Quyền truy cập portal"
        },
        "groupEmailAccountPermission": {
          "type": "string",
          "enum": [
            "not-set",
            "all",
            "team",
            "no"
          ],
          "description": "Quyền truy cập nhóm email"
        },
        "exportPermission": {
          "type": "string",
          "enum": [
            "not-set",
            "yes",
            "no"
          ],
          "description": "Quyền xuất dữ liệu"
        },
        "massUpdatePermission": {
          "type": "string",
          "enum": [
            "not-set",
            "yes",
            "no"
          ],
          "description": "Quyền cập nhật hàng loạt"
        },
        "dataPrivacyPermission": {
          "type": "string",
          "enum": [
            "not-set",
            "yes",
            "no"
          ],
          "description": "Quyền quản lý dữ liệu riêng tư"
        },
        "followerManagementPermission": {
          "type": "string",
          "enum": [
            "not-set",
            "all",
            "team",
            "no"
          ],
          "description": "Quyền quản lý follower"
        },
        "auditPermission": {
          "type": "string",
          "enum": [
            "not-set",
            "yes",
            "no"
          ],
          "description": "Quyền audit"
        },
        "mentionPermission": {
          "type": "string",
          "enum": [
            "not-set",
            "all",
            "team",
            "no"
          ],
          "description": "Quyền nhắc đến người dùng"
        },
        "userCalendarPermission": {
          "type": "string",
          "enum": [
            "not-set",
            "all",
            "team",
            "no"
          ],
          "description": "Quyền truy cập calendar người dùng"
        },
        "data": {
          "type": "object",
          "description": "Dữ liệu bổ sung"
        },
        "fieldData": {
          "type": "object",
          "description": "Dữ liệu field của vai trò"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày tạo vai trò"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày chỉnh sửa vai trò"
        }
      }
    },
    "ScheduledJob": {
      "type": "object",
      "description": "Thông tin công việc được lập lịch",
      "properties": {
        "name": {
          "type": "string",
          "description": "Tên công việc"
        },
        "job": {
          "type": "string",
          "description": "Tên hoặc mã định danh của job"
        },
        "status": {
          "type": "string",
          "enum": [
            "Active",
            "Inactive"
          ],
          "description": "Trạng thái job"
        },
        "scheduling": {
          "type": "string",
          "description": "Cấu hình lập lịch"
        },
        "lastRun": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày giờ chạy lần cuối"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày tạo job"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày chỉnh sửa job"
        },
        "createdBy": {
          "type": "object",
          "description": "Người tạo job"
        },
        "modifiedBy": {
          "type": "object",
          "description": "Người chỉnh sửa job"
        },
        "isInternal": {
          "type": "boolean",
          "description": "Xác định job là nội bộ hệ thống hay không"
        }
      }
    },
    "ScheduledJobLogRecord": {
      "type": "object",
      "description": "Lịch sử thực thi các job đã lập lịch",
      "properties": {
        "name": {
          "type": "string",
          "description": "Tên bản ghi log"
        },
        "status": {
          "type": "string",
          "enum": [
            "Success",
            "Failed"
          ],
          "description": "Trạng thái thực thi job"
        },
        "executionTime": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày giờ thực thi"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày tạo log"
        },
        "scheduledJob": {
          "type": "object",
          "description": "Job được lập lịch liên quan đến bản ghi log"
        },
        "target": {
          "type": "object",
          "description": "Entity hoặc đối tượng được tác động bởi job"
        }
      }
    },
    "Settings": {
      "type": "object",
      "description": "Cấu hình hệ thống và thiết lập toàn cục",
      "properties": {
        "useCache": {
          "type": "boolean",
          "description": "Sử dụng cache hay không"
        },
        "recordsPerPage": {
          "type": "integer",
          "description": "Số bản ghi hiển thị trên trang chuẩn"
        },
        "recordsPerPageSmall": {
          "type": "integer",
          "description": "Số bản ghi hiển thị trên trang kích thước nhỏ"
        },
        "recordsPerPageSelect": {
          "type": "integer",
          "description": "Số bản ghi hiển thị trong dropdown select"
        },
        "recordsPerPageKanban": {
          "type": "integer",
          "description": "Số bản ghi hiển thị trên Kanban"
        },
        "timeZone": {
          "type": "string",
          "description": "Múi giờ hệ thống",
          "enum": [
            "..."
          ]
        },
        "dateFormat": {
          "type": "string",
          "description": "Định dạng ngày"
        },
        "timeFormat": {
          "type": "string",
          "description": "Định dạng giờ"
        },
        "weekStart": {
          "type": "string",
          "description": "Ngày bắt đầu tuần"
        },
        "fiscalYearShift": {
          "type": "string",
          "description": "Dịch chuyển ngày bắt đầu năm tài chính"
        },
        "thousandSeparator": {
          "type": "string",
          "maxLength": 1,
          "description": "Ký tự phân cách hàng nghìn"
        },
        "decimalMark": {
          "type": "string",
          "maxLength": 1,
          "description": "Ký tự phân cách thập phân"
        },
        "currencyList": {
          "type": "string",
          "description": "Danh sách các loại tiền tệ hỗ trợ"
        },
        "defaultCurrency": {
          "type": "string",
          "description": "Tiền tệ mặc định"
        },
        "baseCurrency": {
          "type": "string",
          "description": "Tiền tệ cơ sở"
        },
        "currencyRates": {
          "type": "string",
          "description": "Danh sách tỉ giá tiền tệ"
        },
        "outboundEmailIsShared": {
          "type": "boolean",
          "description": "Chia sẻ email gửi đi"
        },
        "outboundEmailFromName": {
          "type": "string",
          "description": "Tên hiển thị khi gửi email"
        },
        "outboundEmailFromAddress": {
          "type": "string",
          "description": "Địa chỉ email gửi đi"
        },
        "smtpServer": {
          "type": "string",
          "description": "SMTP server"
        },
        "smtpPort": {
          "type": "integer",
          "description": "Cổng SMTP"
        },
        "smtpAuth": {
          "type": "boolean",
          "description": "Yêu cầu xác thực SMTP"
        },
        "smtpSecurity": {
          "type": "string",
          "enum": [
            "",
            "SSL",
            "TLS"
          ],
          "description": "Cơ chế bảo mật SMTP"
        },
        "smtpUsername": {
          "type": "string",
          "description": "Tên đăng nhập SMTP"
        },
        "smtpPassword": {
          "type": "string",
          "description": "Mật khẩu SMTP"
        },
        "language": {
          "type": "string",
          "description": "Ngôn ngữ giao diện hệ thống"
        },
        "theme": {
          "type": "string",
          "description": "Theme hệ thống"
        },
        "themeParams": {
          "type": "object",
          "description": "Thông số theme"
        },
        "authTokenLifetime": {
          "type": "string",
          "description": "Thời gian sống của token xác thực"
        },
        "authTokenMaxIdleTime": {
          "type": "string",
          "description": "Thời gian tối đa token không hoạt động"
        },
        "authTokenPreventConcurrent": {
          "type": "boolean",
          "description": "Ngăn người dùng đăng nhập đồng thời nhiều nơi"
        },
        "dashboardLayout": {
          "type": "string",
          "description": "Cấu hình layout dashboard mặc định"
        },
        "dashletsOptions": {
          "type": "object",
          "description": "Cấu hình các dashlet"
        },
        "siteUrl": {
          "type": "string",
          "description": "URL trang chủ hệ thống"
        },
        "applicationName": {
          "type": "string",
          "description": "Tên ứng dụng"
        },
        "attachmentUploadMaxSize": {
          "type": "string",
          "description": "Kích thước tối đa tệp tải lên"
        },
        "attachmentUploadChunkSize": {
          "type": "string",
          "description": "Kích thước chunk upload"
        },
        "emailMessageMaxSize": {
          "type": "string",
          "description": "Kích thước tối đa email gửi đi"
        },
        "inboundEmailMaxPortionSize": {
          "type": "integer",
          "description": "Kích thước tối đa phần email nhận vào"
        },
        "personalEmailMaxPortionSize": {
          "type": "integer",
          "description": "Kích thước tối đa phần email cá nhân"
        },
        "maxEmailAccountCount": {
          "type": "integer",
          "description": "Số tài khoản email tối đa"
        },
        "massEmailMaxPerHourCount": {
          "type": "integer",
          "description": "Số email hàng loạt tối đa mỗi giờ"
        },
        "massEmailMaxPerBatchCount": {
          "type": "integer",
          "description": "Số email hàng loạt tối đa mỗi batch"
        },
        "massEmailVerp": {
          "type": "boolean",
          "description": "Sử dụng VERP cho email hàng loạt"
        },
        "pdfEngine": {
          "type": "string",
          "description": "Công cụ tạo PDF"
        },
        "authIpAddressCheck": {
          "type": "boolean",
          "description": "Kiểm tra IP khi đăng nhập"
        },
        "authIpAddressWhitelist": {
          "type": "string",
          "description": "Danh sách trắng IP"
        },
        "availableReactions": {
          "type": "string",
          "description": "Danh sách reaction có sẵn"
        },
        "addressPreviewStreet": {
          "type": "string",
          "maxLength": 255,
          "description": "Preview đường phố"
        },
        "addressPreviewCity": {
          "type": "string",
          "maxLength": 100,
          "description": "Preview thành phố"
        },
        "addressPreviewState": {
          "type": "string",
          "maxLength": 100,
          "description": "Preview bang/tỉnh"
        },
        "addressPreviewCountry": {
          "type": "string",
          "maxLength": 100,
          "description": "Preview quốc gia"
        },
        "addressPreviewPostalCode": {
          "type": "string",
          "maxLength": 40,
          "description": "Preview mã bưu chính"
        },
        "addressPreviewMap": {
          "type": "string",
          "description": "Preview bản đồ địa chỉ"
        }
      }
    },
    "Sms": {
      "type": "object",
      "description": "Thông tin SMS gửi đi",
      "properties": {
        "from": {
          "type": "string",
          "description": "Người gửi"
        },
        "fromName": {
          "type": "string",
          "description": "Tên hiển thị người gửi"
        },
        "to": {
          "type": "string",
          "description": "Người nhận"
        },
        "fromPhoneNumber": {
          "type": "object",
          "description": "Số điện thoại gửi"
        },
        "toPhoneNumbers": {
          "type": "string",
          "description": "Danh sách số điện thoại nhận"
        },
        "body": {
          "type": "string",
          "description": "Nội dung SMS"
        },
        "status": {
          "type": "string",
          "enum": [
            "Draft",
            "Sending",
            "Sent",
            "Archived",
            "Failed"
          ],
          "description": "Trạng thái SMS"
        },
        "parent": {
          "type": "object",
          "description": "Entity cha liên quan"
        },
        "dateSent": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày gửi SMS"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày tạo bản ghi SMS"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Ngày sửa bản ghi SMS"
        },
        "createdBy": {
          "type": "object",
          "description": "Người tạo SMS"
        },
        "modifiedBy": {
          "type": "object",
          "description": "Người sửa SMS"
        },
        "replied": {
          "type": "object",
          "description": "SMS phản hồi"
        },
        "replies": {
          "type": "string",
          "description": "Danh sách SMS phản hồi"
        },
        "teams": {
          "type": "string",
          "description": "Các team liên quan"
        }
      }
    },
    "StarSubscription": {
      "type": "object",
      "description": "Thông tin subscription theo dõi bookmark/star",
      "properties": {
        "id": {
          "type": "string"
        },
        "entity": {
          "type": "object"
        },
        "user": {
          "type": "object"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "StreamSubscription": {
      "type": "object",
      "description": "Thông tin subscription theo dõi stream",
      "properties": {
        "id": {
          "type": "string"
        },
        "entity": {
          "type": "object"
        },
        "user": {
          "type": "object"
        }
      }
    },
    "SystemData": {
      "type": "object",
      "description": "Dữ liệu hệ thống cho người dùng",
      "properties": {
        "id": {
          "type": "string"
        },
        "lastPasswordRecoveryDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Team": {
      "type": "object",
      "description": "Thông tin team",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 100
        },
        "roles": {
          "type": "string"
        },
        "positionList": {
          "type": "string"
        },
        "userRole": {
          "type": "string"
        },
        "layoutSet": {
          "type": "object"
        },
        "workingTimeCalendar": {
          "type": "object"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Template": {
      "type": "object",
      "description": "Mẫu in/HTML/Email",
      "properties": {
        "name": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "header": {
          "type": "string"
        },
        "footer": {
          "type": "string"
        },
        "entityType": {
          "type": "string"
        },
        "leftMargin": {
          "type": "string"
        },
        "rightMargin": {
          "type": "string"
        },
        "topMargin": {
          "type": "string"
        },
        "bottomMargin": {
          "type": "string"
        },
        "printFooter": {
          "type": "boolean"
        },
        "printHeader": {
          "type": "boolean"
        },
        "footerPosition": {
          "type": "string"
        },
        "headerPosition": {
          "type": "string"
        },
        "style": {
          "type": "string"
        },
        "teams": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time"
        },
        "createdBy": {
          "type": "object"
        },
        "modifiedBy": {
          "type": "object"
        },
        "variables": {
          "type": "string"
        },
        "pageOrientation": {
          "type": "string",
          "enum": [
            "Portrait",
            "Landscape"
          ]
        },
        "pageFormat": {
          "type": "string",
          "enum": [
            "A3",
            "A4",
            "A5",
            "A6",
            "A7",
            "Custom"
          ]
        },
        "pageWidth": {
          "type": "string"
        },
        "pageHeight": {
          "type": "string"
        },
        "fontFace": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "TwoFactorCode": {
      "type": "object",
      "description": "Mã xác thực 2FA",
      "properties": {
        "code": {
          "type": "string",
          "maxLength": 100
        },
        "method": {
          "type": "string",
          "maxLength": 100
        },
        "attemptsLeft": {
          "type": "integer"
        },
        "isActive": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "UniqueId": {
      "type": "object",
      "description": "ID duy nhất cho mục tiêu hoặc entity",
      "properties": {
        "name": {
          "type": "string"
        },
        "data": {
          "type": "object"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "createdBy": {
          "type": "object"
        },
        "terminateAt": {
          "type": "string",
          "format": "date-time"
        },
        "target": {
          "type": "object"
        }
      }
    },
    "User": {
      "type": "object",
      "description": "Thông tin người dùng",
      "properties": {
        "userName": {
          "type": "string",
          "maxLength": 50
        },
        "firstName": {
          "type": "string",
          "maxLength": 100
        },
        "lastName": {
          "type": "string",
          "maxLength": 100
        },
        "middleName": {
          "type": "string",
          "maxLength": 100
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "regular",
            "admin",
            "portal",
            "system",
            "super-admin",
            "api"
          ]
        },
        "password": {
          "type": "string"
        },
        "passwordConfirm": {
          "type": "string"
        },
        "authMethod": {
          "type": "string",
          "enum": [
            "",
            "ApiKey",
            "Hmac"
          ]
        },
        "apiKey": {
          "type": "string",
          "maxLength": 100
        },
        "secretKey": {
          "type": "string",
          "maxLength": 100
        },
        "salutationName": {
          "type": "string",
          "enum": [
            "",
            "Mr.",
            "Ms.",
            "Mrs.",
            "Dr."
          ]
        },
        "isActive": {
          "type": "boolean"
        },
        "title": {
          "type": "string",
          "maxLength": 100
        },
        "emailAddress": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "gender": {
          "type": "string",
          "enum": [
            "",
            "Male",
            "Female",
            "Neutral"
          ]
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time"
        },
        "createdBy": {
          "type": "object"
        },
        "deleteId": {
          "type": "string",
          "maxLength": 17
        }
      }
    },
    "UserData": {
      "type": "object",
      "description": "Thông tin bảo mật của người dùng, liên quan đến 2FA",
      "properties": {
        "auth2FA": {
          "type": "boolean",
          "description": "Bật/tắt xác thực hai yếu tố"
        },
        "auth2FAMethod": {
          "type": "string",
          "description": "Phương thức 2FA (TOTP, Email)"
        },
        "auth2FATotpSecret": {
          "type": "string",
          "maxLength": 32,
          "description": "Secret key dùng cho TOTP"
        },
        "auth2FAEmailAddress": {
          "type": "string",
          "description": "Email dùng cho 2FA nếu phương thức là Email"
        }
      }
    },
    "UserReaction": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "maxLength": 10,
          "description": "Reaction type"
        },
        "user": {
          "$ref": "#/components/schemas/User",
          "description": "Reference to the user who reacted"
        },
        "parent": {
          "$ref": "#/components/schemas/Note",
          "description": "Reference to the parent entity (e.g., Note)"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time when the reaction was created"
        }
      },
      "required": [
        "type",
        "user",
        "parent"
      ]
    },
    "Webhook": {
      "type": "object",
      "properties": {
        "event": {
          "type": "string",
          "maxLength": 100,
          "description": "Event name"
        },
        "url": {
          "type": "string",
          "maxLength": 512,
          "description": "Webhook URL"
        },
        "isActive": {
          "type": "boolean",
          "default": true,
          "description": "Whether the webhook is active"
        },
        "user": {
          "$ref": "#/components/schemas/User",
          "description": "Reference to the user who owns this webhook"
        },
        "entityType": {
          "type": "string",
          "readOnly": true,
          "description": "Entity type of the webhook target"
        },
        "type": {
          "type": "string",
          "enum": [
            "create",
            "update",
            "fieldUpdate",
            "delete"
          ],
          "readOnly": true
        },
        "field": {
          "type": "string",
          "readOnly": true,
          "description": "Field name if type is fieldUpdate"
        },
        "secretKey": {
          "type": "string",
          "maxLength": 100,
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "createdBy": {
          "$ref": "#/components/schemas/User",
          "readOnly": true
        },
        "modifiedBy": {
          "$ref": "#/components/schemas/User",
          "readOnly": true
        },
        "queueItems": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/WebhookQueueItem"
          },
          "readOnly": true
        }
      },
      "required": [
        "event",
        "url"
      ]
    },
    "WebhookEventQueueItem": {
      "type": "object",
      "properties": {
        "number": {
          "type": "integer",
          "format": "int64",
          "description": "Auto-increment ID",
          "readOnly": true
        },
        "event": {
          "type": "string",
          "maxLength": 100,
          "description": "Event name"
        },
        "target": {
          "type": "object",
          "description": "Reference to parent entity"
        },
        "data": {
          "type": "object",
          "description": "JSON object with event data"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "isProcessed": {
          "type": "boolean",
          "description": "Whether the event has been processed"
        }
      },
      "required": [
        "event"
      ]
    },
    "WebhookQueueItem": {
      "type": "object",
      "properties": {
        "number": {
          "type": "integer"
        },
        "event": {
          "type": "string",
          "maxLength": 100
        },
        "webhook": {
          "$ref": "#/components/schemas/Webhook"
        },
        "target": {
          "type": "object"
        },
        "data": {
          "type": "object"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "enum": [
            "Pending",
            "Success",
            "Failed"
          ]
        },
        "processedAt": {
          "type": "string",
          "format": "date-time"
        },
        "attempts": {
          "type": "integer"
        },
        "processAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "WorkingTimeCalendar": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "timeZone": {
          "type": "string"
        },
        "timeRanges": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "default": [
            [
              "9:00",
              "17:00"
            ]
          ]
        },
        "weekday0": {
          "type": "boolean",
          "default": false
        },
        "weekday1": {
          "type": "boolean",
          "default": true
        },
        "weekday2": {
          "type": "boolean",
          "default": true
        },
        "weekday3": {
          "type": "boolean",
          "default": true
        },
        "weekday4": {
          "type": "boolean",
          "default": true
        },
        "weekday5": {
          "type": "boolean",
          "default": true
        },
        "weekday6": {
          "type": "boolean",
          "default": false
        },
        "weekday0TimeRanges": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "weekday1TimeRanges": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "weekday2TimeRanges": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "weekday3TimeRanges": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "weekday4TimeRanges": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "weekday5TimeRanges": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "weekday6TimeRanges": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Team"
          },
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "createdBy": {
          "$ref": "#/components/schemas/User",
          "readOnly": true
        },
        "modifiedBy": {
          "$ref": "#/components/schemas/User",
          "readOnly": true
        },
        "ranges": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/WorkingTimeRange"
          }
        }
      }
    },
    "WorkingTimeRange": {
      "type": "object",
      "properties": {
        "timeRanges": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dateStart": {
          "type": "string",
          "format": "date"
        },
        "dateEnd": {
          "type": "string",
          "format": "date"
        },
        "type": {
          "type": "string",
          "enum": [
            "Non-working",
            "Working"
          ],
          "default": "Non-working"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "calendars": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/WorkingTimeCalendar"
          }
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/User"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "createdBy": {
          "$ref": "#/components/schemas/User",
          "readOnly": true
        },
        "modifiedBy": {
          "$ref": "#/components/schemas/User",
          "readOnly": true
        }
      }
    },
    "Account": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 249
        },
        "website": {
          "type": "string",
          "format": "uri"
        },
        "emailAddress": {
          "type": "string",
          "format": "email"
        },
        "phoneNumber": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "",
            "Customer",
            "Investor",
            "Partner",
            "Reseller"
          ]
        },
        "industry": {
          "type": "string",
          "enum": [
            "",
            "Advertising",
            "Aerospace",
            "Agriculture",
            "Apparel & Accessories",
            "Architecture",
            "Automotive",
            "Banking",
            "Biotechnology",
            "Building Materials & Equipment",
            "Chemical",
            "Construction",
            "Consulting",
            "Computer",
            "Culture",
            "Creative",
            "Defense",
            "Education",
            "Electronics",
            "Electric Power",
            "Energy",
            "Entertainment & Leisure",
            "Finance",
            "Food & Beverage",
            "Grocery",
            "Healthcare",
            "Hospitality",
            "Insurance",
            "Legal",
            "Manufacturing",
            "Mass Media",
            "Marketing",
            "Mining",
            "Music",
            "Publishing",
            "Petroleum",
            "Real Estate",
            "Retail",
            "Service",
            "Sports",
            "Software",
            "Support",
            "Shipping",
            "Travel",
            "Technology",
            "Telecommunications",
            "Television",
            "Transportation",
            "Testing, Inspection & Certification",
            "Venture Capital",
            "Wholesale",
            "Water"
          ]
        },
        "sicCode": {
          "type": "string",
          "maxLength": 40
        },
        "description": {
          "type": "string"
        },
        "campaign": {
          "$ref": "#/components/schemas/Campaign"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "createdBy": {
          "$ref": "#/components/schemas/User",
          "readOnly": true
        },
        "modifiedBy": {
          "$ref": "#/components/schemas/User",
          "readOnly": true
        },
        "assignedUser": {
          "$ref": "#/components/schemas/User"
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Team"
          }
        },
        "contacts": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Contact"
          }
        },
        "opportunities": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Opportunity"
          }
        },
        "cases": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Case"
          }
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Document"
          }
        }
      }
    },
    "Call": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "Planned",
            "Held",
            "Not Held"
          ],
          "default": "Planned"
        },
        "dateStart": {
          "type": "string",
          "format": "date-time"
        },
        "dateEnd": {
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "type": "integer"
        },
        "reminders": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "direction": {
          "type": "string",
          "enum": [
            "Outbound",
            "Inbound"
          ],
          "default": "Outbound"
        },
        "description": {
          "type": "string"
        },
        "parent": {
          "type": "object",
          "description": "Reference to parent entity (Account, Lead, Contact, Opportunity, Case)"
        },
        "account": {
          "$ref": "#/components/schemas/Account"
        },
        "uid": {
          "type": "string",
          "maxLength": 255,
          "readOnly": true
        },
        "acceptanceStatus": {
          "type": "string",
          "enum": [
            "None",
            "Accepted",
            "Tentative",
            "Declined"
          ]
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/User"
          }
        },
        "contacts": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Contact"
          }
        },
        "leads": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Lead"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "createdBy": {
          "$ref": "#/components/schemas/User",
          "readOnly": true
        },
        "modifiedBy": {
          "$ref": "#/components/schemas/User",
          "readOnly": true
        },
        "phoneNumbersMap": {
          "type": "object"
        },
        "assignedUser": {
          "$ref": "#/components/schemas/User"
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Team"
          }
        }
      }
    },
    "Campaign": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "Planning",
            "Active",
            "Inactive",
            "Complete"
          ],
          "default": "Planning"
        },
        "type": {
          "type": "string",
          "enum": [
            "Email",
            "Newsletter",
            "Informational Email",
            "Web",
            "Television",
            "Radio",
            "Mail"
          ],
          "default": "Email"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "description": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "createdBy": {
          "$ref": "#/components/schemas/User",
          "readOnly": true
        },
        "modifiedBy": {
          "$ref": "#/components/schemas/User",
          "readOnly": true
        },
        "assignedUser": {
          "$ref": "#/components/schemas/User"
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Team"
          }
        },
        "targetLists": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/TargetList"
          }
        },
        "excludingTargetLists": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/TargetList"
          }
        },
        "sentCount": {
          "type": "integer",
          "readOnly": true
        },
        "openedCount": {
          "type": "integer",
          "readOnly": true
        },
        "clickedCount": {
          "type": "integer",
          "readOnly": true
        },
        "optedInCount": {
          "type": "integer",
          "readOnly": true
        },
        "optedOutCount": {
          "type": "integer",
          "readOnly": true
        },
        "bouncedCount": {
          "type": "integer",
          "readOnly": true
        },
        "hardBouncedCount": {
          "type": "integer",
          "readOnly": true
        },
        "softBouncedCount": {
          "type": "integer",
          "readOnly": true
        },
        "leadCreatedCount": {
          "type": "integer",
          "readOnly": true
        },
        "openedPercentage": {
          "type": "integer",
          "readOnly": true
        },
        "clickedPercentage": {
          "type": "integer",
          "readOnly": true
        },
        "optedOutPercentage": {
          "type": "integer",
          "readOnly": true
        },
        "bouncedPercentage": {
          "type": "integer",
          "readOnly": true
        },
        "revenue": {
          "type": "number",
          "format": "float",
          "readOnly": true
        },
        "budget": {
          "type": "number",
          "format": "float"
        },
        "contactsTemplate": {
          "$ref": "#/components/schemas/Template"
        },
        "leadsTemplate": {
          "$ref": "#/components/schemas/Template"
        },
        "accountsTemplate": {
          "$ref": "#/components/schemas/Template"
        },
        "usersTemplate": {
          "$ref": "#/components/schemas/Template"
        },
        "mailMergeOnlyWithAddress": {
          "type": "boolean",
          "default": true
        },
        "revenueCurrency": {
          "type": "string",
          "maxLength": 3,
          "readOnly": true
        },
        "revenueConverted": {
          "type": "number",
          "format": "float",
          "readOnly": true
        },
        "budgetCurrency": {
          "type": "string",
          "maxLength": 3
        },
        "budgetConverted": {
          "type": "number",
          "format": "float",
          "readOnly": true
        }
      }
    },
    "CampaignLogRecord": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "enum": [
            "Sent",
            "Opened",
            "Opted Out",
            "Bounced",
            "Clicked",
            "Opted In",
            "Lead Created"
          ]
        },
        "actionDate": {
          "type": "string",
          "format": "date-time"
        },
        "data": {
          "type": "object"
        },
        "stringData": {
          "type": "string",
          "maxLength": 100
        },
        "stringAdditionalData": {
          "type": "string",
          "maxLength": 100
        },
        "application": {
          "type": "string",
          "maxLength": 36,
          "default": "Espo"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "createdBy": {
          "$ref": "#/components/schemas/User",
          "readOnly": true
        },
        "campaign": {
          "$ref": "#/components/schemas/Campaign"
        },
        "parent": {
          "type": "object"
        },
        "object": {
          "type": "object"
        },
        "queueItem": {
          "type": "object"
        },
        "isTest": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "CampaignTrackingUrl": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "format": "uri"
        },
        "urlToUse": {
          "type": "string",
          "readOnly": true
        },
        "campaign": {
          "$ref": "#/components/schemas/Campaign"
        },
        "action": {
          "type": "string",
          "enum": [
            "Redirect",
            "Show Message"
          ],
          "default": "Redirect"
        },
        "message": {
          "type": "string"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modifiedBy": {
          "$ref": "#/components/schemas/User",
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "createdBy": {
          "$ref": "#/components/schemas/User",
          "readOnly": true
        }
      }
    },
    "Case": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "pattern": "$noBadCharacters"
        },
        "number": {
          "type": "integer",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "enum": [
            "New",
            "Assigned",
            "Pending",
            "Closed",
            "Rejected",
            "Duplicate"
          ],
          "default": "New"
        },
        "priority": {
          "type": "string",
          "enum": [
            "Low",
            "Normal",
            "High",
            "Urgent"
          ],
          "default": "Normal"
        },
        "type": {
          "type": "string",
          "enum": [
            "",
            "Question",
            "Incident",
            "Problem"
          ]
        },
        "description": {
          "type": "string"
        },
        "account": {
          "$ref": "#/components/schemas/Account"
        },
        "lead": {
          "$ref": "#/components/schemas/Lead"
        },
        "contact": {
          "$ref": "#/components/schemas/Contact"
        },
        "contacts": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Contact"
          }
        },
        "inboundEmail": {
          "$ref": "#/components/schemas/InboundEmail"
        },
        "originalEmail": {
          "$ref": "#/components/schemas/Email"
        },
        "isInternal": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "createdBy": {
          "$ref": "#/components/schemas/User"
        },
        "modifiedBy": {
          "$ref": "#/components/schemas/User"
        },
        "assignedUser": {
          "$ref": "#/components/schemas/User"
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Team"
          }
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "binary"
          }
        },
        "streamUpdatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "Contact": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "salutationName": {
          "type": "string",
          "enum": [
            "",
            "Mr.",
            "Ms.",
            "Mrs.",
            "Dr."
          ]
        },
        "firstName": {
          "type": "string",
          "maxLength": 100
        },
        "lastName": {
          "type": "string",
          "maxLength": 100
        },
        "middleName": {
          "type": "string",
          "maxLength": 100
        },
        "emailAddress": {
          "type": "string",
          "format": "email"
        },
        "phoneNumber": {
          "type": "string"
        },
        "doNotCall": {
          "type": "boolean"
        },
        "addressStreet": {
          "type": "string",
          "maxLength": 255
        },
        "addressCity": {
          "type": "string",
          "maxLength": 100
        },
        "addressState": {
          "type": "string",
          "maxLength": 100
        },
        "addressCountry": {
          "type": "string",
          "maxLength": 100
        },
        "addressPostalCode": {
          "type": "string",
          "maxLength": 40
        },
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Account"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "createdBy": {
          "$ref": "#/components/schemas/User"
        },
        "modifiedBy": {
          "$ref": "#/components/schemas/User"
        },
        "assignedUser": {
          "$ref": "#/components/schemas/User"
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Team"
          }
        },
        "portalUser": {
          "$ref": "#/components/schemas/User"
        },
        "originalLead": {
          "$ref": "#/components/schemas/Lead"
        },
        "targetLists": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/TargetList"
          }
        }
      }
    },
    "Document": {
      "type": "object",
      "required": [
        "name",
        "file"
      ],
      "properties": {
        "name": {
          "type": "string",
          "pattern": "$noBadCharacters"
        },
        "file": {
          "type": "string",
          "format": "binary"
        },
        "status": {
          "type": "string",
          "enum": [
            "Draft",
            "Active",
            "Canceled",
            "Expired"
          ],
          "default": "Active"
        },
        "type": {
          "type": "string",
          "enum": [
            "",
            "Contract",
            "NDA",
            "EULA",
            "License Agreement"
          ]
        },
        "publishDate": {
          "type": "string",
          "format": "date"
        },
        "expirationDate": {
          "type": "string",
          "format": "date"
        },
        "description": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "createdBy": {
          "$ref": "#/components/schemas/User"
        },
        "modifiedBy": {
          "$ref": "#/components/schemas/User"
        },
        "assignedUser": {
          "$ref": "#/components/schemas/User"
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Team"
          }
        },
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Account"
          }
        },
        "folder": {
          "$ref": "#/components/schemas/DocumentFolder"
        }
      }
    },
    "DocumentFolder": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "pattern": "$noBadCharacters"
        },
        "description": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "createdBy": {
          "$ref": "#/components/schemas/User"
        },
        "modifiedBy": {
          "$ref": "#/components/schemas/User"
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Team"
          }
        },
        "parent": {
          "$ref": "#/components/schemas/DocumentFolder"
        },
        "childList": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/DocumentFolder"
          }
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Document"
          }
        }
      }
    },
    "EmailQueueItem": {
      "type": "object",
      "properties": {
        "massEmail": {
          "$ref": "#/components/schemas/MassEmail"
        },
        "status": {
          "type": "string",
          "enum": [
            "Pending",
            "Sent",
            "Failed",
            "Sending"
          ],
          "readOnly": true
        },
        "attemptCount": {
          "type": "integer",
          "default": 0,
          "readOnly": true
        },
        "target": {
          "type": "object",
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "sentAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "emailAddress": {
          "type": "string",
          "readOnly": true
        },
        "isTest": {
          "type": "boolean"
        }
      }
    },
    "KnowledgeBaseArticle": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "pattern": "$noBadCharacters"
        },
        "status": {
          "type": "string",
          "enum": [
            "Draft",
            "In Review",
            "Published",
            "Archived"
          ],
          "default": "Draft"
        },
        "language": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Article"
          ],
          "default": "Article"
        },
        "portals": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Portal"
          }
        },
        "publishDate": {
          "type": "string",
          "format": "date"
        },
        "expirationDate": {
          "type": "string",
          "format": "date"
        },
        "order": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "createdBy": {
          "$ref": "#/components/schemas/User"
        },
        "modifiedBy": {
          "$ref": "#/components/schemas/User"
        },
        "assignedUser": {
          "$ref": "#/components/schemas/User"
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Team"
          }
        },
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/KnowledgeBaseCategory"
          }
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "binary"
          }
        },
        "body": {
          "type": "string"
        },
        "bodyPlain": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "KnowledgeBaseCategory": {
      "type": "object",
      "required": [
        "name",
        "order"
      ],
      "properties": {
        "name": {
          "type": "string",
          "pattern": "$noBadCharacters"
        },
        "description": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "createdBy": {
          "$ref": "#/components/schemas/User"
        },
        "modifiedBy": {
          "$ref": "#/components/schemas/User"
        },
        "order": {
          "type": "integer"
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Team"
          }
        },
        "parent": {
          "$ref": "#/components/schemas/KnowledgeBaseCategory"
        },
        "childList": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/KnowledgeBaseCategory"
          }
        },
        "articles": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/KnowledgeBaseArticle"
          }
        }
      }
    },
    "Lead": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "salutationName": {
          "type": "string",
          "enum": [
            "",
            "Mr.",
            "Ms.",
            "Mrs.",
            "Dr."
          ]
        },
        "firstName": {
          "type": "string",
          "maxLength": 100
        },
        "lastName": {
          "type": "string",
          "maxLength": 100
        },
        "title": {
          "type": "string",
          "maxLength": 100
        },
        "status": {
          "type": "string",
          "enum": [
            "New",
            "Assigned",
            "In Process",
            "Converted",
            "Recycled",
            "Dead"
          ],
          "default": "New"
        },
        "source": {
          "type": "string",
          "enum": [
            "",
            "Call",
            "Email",
            "Existing Customer",
            "Partner",
            "Public Relations",
            "Web Site",
            "Campaign",
            "Other"
          ]
        },
        "industry": {
          "type": "string"
        },
        "opportunityAmount": {
          "type": "number",
          "minimum": 0
        },
        "website": {
          "type": "string",
          "format": "uri"
        },
        "addressStreet": {
          "type": "string"
        },
        "addressCity": {
          "type": "string"
        },
        "addressState": {
          "type": "string"
        },
        "addressCountry": {
          "type": "string"
        },
        "addressPostalCode": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string",
          "format": "email"
        },
        "phoneNumber": {
          "type": "string"
        },
        "doNotCall": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "createdBy": {
          "$ref": "#/components/schemas/User"
        },
        "modifiedBy": {
          "$ref": "#/components/schemas/User"
        },
        "assignedUser": {
          "$ref": "#/components/schemas/User"
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Team"
          }
        }
      }
    },
    "MassEmail": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "Draft",
            "Pending",
            "Complete",
            "In Process",
            "Failed"
          ],
          "default": "Pending"
        },
        "storeSentEmails": {
          "type": "boolean"
        },
        "optOutEntirely": {
          "type": "boolean"
        },
        "fromAddress": {
          "type": "string"
        },
        "fromName": {
          "type": "string"
        },
        "replyToAddress": {
          "type": "string"
        },
        "replyToName": {
          "type": "string"
        },
        "startAt": {
          "type": "string",
          "format": "date-time"
        },
        "emailTemplate": {
          "$ref": "#/components/schemas/EmailTemplate"
        },
        "campaign": {
          "$ref": "#/components/schemas/Campaign"
        },
        "targetLists": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/TargetList"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Meeting": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "Planned",
            "Held",
            "Not Held"
          ],
          "default": "Planned"
        },
        "dateStart": {
          "type": "string",
          "format": "date-time"
        },
        "dateEnd": {
          "type": "string",
          "format": "date-time"
        },
        "isAllDay": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "parent": {
          "type": "object"
        },
        "account": {
          "$ref": "#/components/schemas/Account"
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/User"
          }
        },
        "contacts": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Contact"
          }
        },
        "leads": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Lead"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time"
        },
        "assignedUser": {
          "$ref": "#/components/schemas/User"
        }
      }
    },
    "Opportunity": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "amount": {
          "type": "number",
          "minimum": 0
        },
        "amountConverted": {
          "type": "number",
          "readOnly": true
        },
        "account": {
          "$ref": "#/components/schemas/Account"
        },
        "contacts": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Contact"
          }
        },
        "contact": {
          "$ref": "#/components/schemas/Contact"
        },
        "stage": {
          "type": "string",
          "enum": [
            "Prospecting",
            "Qualification",
            "Proposal",
            "Negotiation",
            "Closed Won",
            "Closed Lost"
          ],
          "default": "Prospecting"
        },
        "probability": {
          "type": "integer",
          "minimum": 0,
          "maximum": 100
        },
        "leadSource": {
          "type": "string"
        },
        "closeDate": {
          "type": "string",
          "format": "date"
        },
        "description": {
          "type": "string"
        },
        "campaign": {
          "$ref": "#/components/schemas/Campaign"
        },
        "originalLead": {
          "$ref": "#/components/schemas/Lead"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time"
        },
        "assignedUser": {
          "$ref": "#/components/schemas/User"
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Team"
          }
        }
      }
    },
    "Reminder": {
      "type": "object",
      "properties": {
        "remindAt": {
          "type": "string",
          "format": "date-time"
        },
        "startAt": {
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "type": "string",
          "enum": [
            "Popup",
            "Email"
          ],
          "default": "Popup"
        },
        "seconds": {
          "type": "integer",
          "enum": [
            0,
            60,
            120,
            300,
            600,
            900,
            1800,
            3600,
            7200,
            18000,
            86400,
            604800
          ],
          "default": 0
        },
        "user": {
          "$ref": "#/components/schemas/User"
        },
        "entity": {
          "type": "object"
        },
        "isSubmitted": {
          "type": "boolean"
        }
      },
      "required": [
        "remindAt",
        "startAt"
      ]
    },
    "Target": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "salutationName": {
          "type": "string",
          "enum": [
            "",
            "Mr.",
            "Mrs.",
            "Ms.",
            "Dr.",
            "Drs."
          ]
        },
        "firstName": {
          "type": "string",
          "maxLength": 100
        },
        "lastName": {
          "type": "string",
          "maxLength": 100
        },
        "middleName": {
          "type": "string",
          "maxLength": 100
        },
        "title": {
          "type": "string",
          "maxLength": 100
        },
        "accountName": {
          "type": "string",
          "maxLength": 100
        },
        "website": {
          "type": "string",
          "format": "uri"
        },
        "address": {
          "type": "object",
          "properties": {
            "street": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "postalCode": {
              "type": "string"
            }
          }
        },
        "emailAddress": {
          "type": "string",
          "format": "email"
        },
        "phoneNumber": {
          "type": "object",
          "properties": {
            "number": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "Mobile",
                "Office",
                "Home",
                "Fax",
                "Other"
              ]
            }
          }
        },
        "doNotCall": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "createdBy": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          }
        },
        "modifiedBy": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          }
        },
        "assignedUser": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          }
        },
        "teams": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          }
        },
        "addressMap": {
          "type": "object",
          "readOnly": true
        }
      },
      "required": [
        "lastName"
      ]
    },
    "TargetList": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "category": {
          "$ref": "#/components/schemas/TargetListCategory"
        },
        "entryCount": {
          "type": "integer",
          "readOnly": true
        },
        "optedOutCount": {
          "type": "integer",
          "readOnly": true
        },
        "description": {
          "type": "string"
        },
        "sourceCampaign": {
          "$ref": "#/components/schemas/Campaign"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "createdBy": {
          "$ref": "#/components/schemas/User"
        },
        "modifiedBy": {
          "$ref": "#/components/schemas/User"
        },
        "assignedUser": {
          "$ref": "#/components/schemas/User"
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Team"
          }
        },
        "includingActionList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludingActionList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "targetStatus": {
          "type": "string",
          "enum": [
            "Listed",
            "Opted Out"
          ]
        },
        "isOptedOut": {
          "type": "boolean"
        },
        "campaigns": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Campaign"
          }
        },
        "massEmails": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/MassEmail"
          }
        },
        "campaignsExcluding": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Campaign"
          }
        },
        "massEmailsExcluding": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/MassEmail"
          }
        },
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Account"
          }
        },
        "contacts": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Contact"
          }
        },
        "leads": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Lead"
          }
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/User"
          }
        }
      }
    },
    "TargetListCategory": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "order": {
          "type": "integer",
          "minimum": 1
        },
        "description": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "createdBy": {
          "$ref": "#/components/schemas/User"
        },
        "modifiedBy": {
          "$ref": "#/components/schemas/User"
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Team"
          }
        },
        "parent": {
          "$ref": "#/components/schemas/TargetListCategory"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/TargetListCategory"
          },
          "readOnly": true
        },
        "targetLists": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/TargetList"
          }
        }
      }
    },
    "Task": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "Not Started",
            "Started",
            "Completed",
            "Canceled",
            "Deferred"
          ]
        },
        "priority": {
          "type": "string",
          "enum": [
            "Low",
            "Normal",
            "High",
            "Urgent"
          ]
        },
        "dateStart": {
          "type": "string",
          "format": "date-time"
        },
        "dateEnd": {
          "type": "string",
          "format": "date-time"
        },
        "dateStartDate": {
          "type": "string",
          "format": "date"
        },
        "dateEndDate": {
          "type": "string",
          "format": "date"
        },
        "dateCompleted": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "isOverdue": {
          "type": "boolean",
          "readOnly": true
        },
        "reminders": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "description": {
          "type": "string"
        },
        "parent": {
          "type": "object",
          "nullable": true
        },
        "account": {
          "$ref": "#/components/schemas/Account"
        },
        "contact": {
          "$ref": "#/components/schemas/Contact"
        },
        "originalEmail": {
          "$ref": "#/components/schemas/Email"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "createdBy": {
          "$ref": "#/components/schemas/User"
        },
        "modifiedBy": {
          "$ref": "#/components/schemas/User"
        },
        "assignedUser": {
          "$ref": "#/components/schemas/User"
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Team"
          }
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Document"
          }
        },
        "streamUpdatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    }
  }
}